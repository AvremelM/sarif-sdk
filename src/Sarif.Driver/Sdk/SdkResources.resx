<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MSG1001_AnalyzingTarget_Description" xml:space="preserve">
    <value>An analysis target was analyzed.</value>
  </data>
  <data name="ERR0998_ExceptionInAnalyze" xml:space="preserve">
    <value>An exception was raised analyzing '{0}' for check '{1}' (which has been disabled for the remainder of the analysis). The exception may have resulted from a problem related to parsing image metadata and not specific to the rule, however. Exception information:
{2}</value>
  </data>
  <data name="ERR0998_ExceptionInCanAnalyze" xml:space="preserve">
    <value>An exception was raised attempting to determine whether '{0}' is a valid analysis target for check '{1}' (which has been disabled for the remainder of the analysis). The exception may have resulted from a problem related to parsing the analysis target and not specific to the rule, however. Exception information:
{2}</value>
  </data>
  <data name="ERR0997_ExceptionCreatingLogFile" xml:space="preserve">
    <value>An exception was raised attempting to create output file '{0}'. Exception information:
{1}</value>
  </data>
  <data name="ERR0999_UnhandledEngineException" xml:space="preserve">
    <value>An exception was raised during analysis:
{0}</value>
  </data>
  <data name="ERR0999_AnalysisHalted_Description" xml:space="preserve">
    <value>Analysis halted and was incomplete due to an unrecoverable error such as an unhandled exception.</value>
  </data>
  <data name="ERR0998_ExceptionInInitialize" xml:space="preserve">
    <value>An exception was raised initializing check '{0}' (which has been disabled for the remainder of the analysis). Exception information:
{1}</value>
  </data>
  <data name="ERR0998_RuleDisabled_Description" xml:space="preserve">
    <value>A rule was disabled due to an unrecoverable error, such as an exception raised during execution or an absence of required configuration.</value>
  </data>
  <data name="ERR0997_ExceptionLoadingPlugIn" xml:space="preserve">
    <value>An exception was raised attempting to load plug-in '{0}'. Exception information:
{1}</value>
  </data>
  <data name="ERR0997_ExceptionLoadingAnalysisTarget" xml:space="preserve">
    <value>An exception was raised attempting to load analysis target '{0}'. Exception information:
{1}</value>
  </data>
  <data name="ERR0997_InvalidConfiguration_Description" xml:space="preserve">
    <value>An unhandled exception was raised while configuring analysis for execution.</value>
  </data>
  <data name="MSG1002_InvalidTarget_Description" xml:space="preserve">
    <value>A file was skipped as it does not appear to be a valid target for analysis.</value>
  </data>
  <data name="ERR0997_MissingRuleConfiguration" xml:space="preserve">
    <value>Check '{1}' was disabled while analyzing '{0}' because the analysis was not configured with required policy ({2}). To resolve this, configure and provide a policy file on the {3} command-line using the --policy argument (recommended), or pass '--config default' to invoke built-in settings. Invoke the {3} 'exportConfig' command to produce an initial configuration file that can be edited, if necessary, and passed back into the tool.</value>
  </data>
  <data name="MSG1002_InvalidFileType" xml:space="preserve">
    <value>'{0}' was not analyzed as it does not appear to be a valid file type for analysis.</value>
  </data>
  <data name="MSG1002_InvalidMetadata" xml:space="preserve">
    <value>'{0}' was not evaluated for check '{1}' as the analysis is not relevant based on observed metadata: {2}.</value>
  </data>
  <data name="MSG_UnexpectedApplicationExit" xml:space="preserve">
    <value>Analysis halted prematurely due to a fatal execution condition.</value>
  </data>
  <data name="ERR1001_Default" xml:space="preserve">
    <value>An error occurred parsing '{0}': {1}</value>
  </data>
  <data name="ERR1001_ParseError_Description" xml:space="preserve">
    <value>A parse error occurred.</value>
  </data>
  <data name="MSG1001_AnalyzingTarget" xml:space="preserve">
    <value>Analyzing '{0}'...</value>
  </data>
  <data name="MSG_AnalysisCompletedSuccessfully" xml:space="preserve">
    <value>Analysis completed successfully.</value>
  </data>
  <data name="MSG_AnalysisIncomplete" xml:space="preserve">
    <value>Analysis finished but was not complete due to non-fatal runtime errors.</value>
  </data>
  <data name="MSG_Analyzing" xml:space="preserve">
    <value>Analyzing...</value>
  </data>
  <data name="ERR0997_ExceptionInstantiatingSkimmers" xml:space="preserve">
    <value>An exception was raised attempting to instantiate skimmers from the following plugins'{0}'. Exception information:
{1}</value>
  </data>
  <data name="ERR0997_ExceptionLoadingPdb" xml:space="preserve">
    <value>'{0}' was not evaluated for check '{1}' as an exception occurred loading its pdb: '{2}'</value>
  </data>
  <data name="ERR0997_NoRulesLoaded" xml:space="preserve">
    <value>No analysis rules could be instantiated.</value>
  </data>
  <data name="ERR0997_NoValidAnalysisTargets" xml:space="preserve">
    <value>No valid analysis targets were specified.</value>
  </data>
</root>