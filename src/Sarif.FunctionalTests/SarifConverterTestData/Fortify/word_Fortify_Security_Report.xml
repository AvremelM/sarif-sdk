<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ReportDefinition type="xml">
    <TemplateName>Office Word Source Code Security Report</TemplateName>
    <TemplatePath></TemplatePath>
    <LogoPath>/fortify.jpg</LogoPath>
    <Footnote></Footnote>
    <UserName>wenkec</UserName>
    <ReportSection optionalSubsections="false" enabled="true">
        <Title>Executive Summary</Title>
        <SubSection enabled="true">
            <Title>Issues Overview</Title>
            <Description>This section provides an overview of the issues uncovered during analysis. The report covers a summary of vulnerability categories discovered by the tool. The auditor should augment this section with higher-level conclusions derived from human review of the application (including architecture reviews,	black-box testing, compliance issues, etc.)</Description>
            <Text>On May 31, 2014, a source code review was performed over the word_f1 code base. 5,686 files, 908,059 LOC (Executable) were scanned and reviewed for defects that could lead to potential security vulnerabilities. A total of 12373 reviewed findings were uncovered during the analysis.</Text>
        </SubSection>
        <SubSection enabled="true">
            <Title>Issue Summary by Fortify Priority Order</Title>
            <Description>A table summarizing the number of issues found and the breakdown of issues in each Fortify Priority Level</Description>
            <IssueListing limit="-1" listing="false">
                <Refinement></Refinement>
                <Chart chartType="table">
                    <Axis>Fortify Priority Order</Axis>
                    <MajorAttribute>Analysis</MajorAttribute>
                    <GroupingSection count="11014">
                        <groupTitle>Low</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="1332">
                        <groupTitle>High</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="27">
                        <groupTitle>Critical</groupTitle>
                    </GroupingSection>
                </Chart>
            </IssueListing>
        </SubSection>
        <SubSection enabled="true">
            <Title>Recommendations and Conclusions</Title>
            <Description>This section gives some high-level recommendations on remediating the issues discussed in the Issues Summary sub section. Recommendations will vary based on deployment scenarios, risk appetite, and existing mitigating strategies. The auditor should supplement the Fortify generic recommendations with specific information that takes into account the application specific variables.</Description>
            <Text>The Issues Category section provides Fortify recommendations for addressing issues at a generic level.  The recommendations for specific fixes can be extrapolated from those generic recommendations by the development group.</Text>
        </SubSection>
    </ReportSection>
    <ReportSection optionalSubsections="true" enabled="true">
        <Title>Project Summary</Title>
        <SubSection enabled="true">
            <Title>Code Base Summary</Title>
            <Description>Summary of the Codebase that was analyzed</Description>
            <Text>Code location: C:/Office&#xD;
Number of Files: 5686&#xD;
Lines of Code: 908059&#xD;
Build Label: &lt;No Build Label&gt;</Text>
        </SubSection>
        <SubSection enabled="true">
            <Title>Scan Information</Title>
            <Description>Details of the analysis</Description>
            <Text>Scan time: 17:50:59&#xD;
SCA Engine version: 6.10.0065&#xD;
Machine Name: sdl-tm0&#xD;
Username running scan: wenkec</Text>
        </SubSection>
        <SubSection enabled="true">
            <Title>Results Certification</Title>
            <Description>A full summary of the Results Certification for this project</Description>
            <Text>Results Certification Valid&#xD;
&#xD;
Details:&#xD;
&#xD;
Results Signature:

	SCA Analysis Results has Valid signature
	

Rules Signature:

	There were no custom rules used in this scan</Text>
        </SubSection>
        <SubSection enabled="true">
            <Title>Attack Surface</Title>
            <Description>A full summary of the attack surface for this project</Description>
            <Text>Attack Surface:&#xD;
Environment Variables:
	null.null.GetEnvironmentStringsW

File System:
	null.null.FindNextFileW
	null.null.GetFileAttributesExW
	null.null.GetLogicalDrives
	null.null.GetVolumeInformationW

Private Information:
	null.null.null

System Information:
	null.null.FindNextFileW
	null.null.GetFileAttributesExW
	null.null.GetLogicalDrives
	null.null.GetSystemDirectoryW
	null.null.GetSystemInfo
	null.null.GetVersionExA
	null.null.GetVersionExW
	null.null.GetVolumeInformationW
	null.null.GetWindowsDirectoryW
	null.null.GlobalMemoryStatus
	null.null.SQLGetInfo
</Text>
        </SubSection>
        <SubSection enabled="true">
            <Title>Filter Set Summary</Title>
            <Description>A brief summary of the filterset used to create this report</Description>
            <Text>Current Enabled Filter Set:&#xD;
Security Auditor View&#xD;
&#xD;
Filter Set Details:&#xD;
&#xD;
Folder Filters:
If [fortify priority order] contains critical Then set folder to Critical
If [fortify priority order] contains high Then set folder to High
If [fortify priority order] contains medium Then set folder to Medium
If [fortify priority order] contains low Then set folder to Low</Text>
        </SubSection>
        <SubSection enabled="true">
            <Title>Audit Guide Summary</Title>
            <Description>Summary of the impact of the audit guide</Description>
            <Text>Audit guide not enabled</Text>
        </SubSection>
    </ReportSection>
    <ReportSection optionalSubsections="true" enabled="true">
        <Title>Results Outline</Title>
        <SubSection enabled="true">
            <Title>Overall number of results</Title>
            <Description>Results count</Description>
            <Text>The scan found 12373 issues.</Text>
        </SubSection>
        <SubSection enabled="true">
            <Title>Vulnerability Examples by Category</Title>
            <Description>Results summary for critical and high priority issues.  Vulnerability examples are provided by category.</Description>
            <IssueListing externalCategoryType="CWE" limit="-1" listing="true">
                <Refinement>[fortify priority order]:critical OR [fortify priority order]:high</Refinement>
                <Chart chartType="list">
                    <Axis>Category</Axis>
                    <MajorAttribute>Analysis</MajorAttribute>
                    <GroupingSection count="700">
                        <groupTitle>Null Dereference</groupTitle>
                        <MajorAttributeSummary>
                            <MetaInfo>
<Name>Abstract</Name>
<Value>The program can potentially dereference a null pointer, thereby causing a segmentation fault.</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Explanation</Name>
<Value>Null pointer exceptions usually occur when one or more of the programmer's assumptions is violated. A dereference-after-store error occurs when a program explicitly sets a pointer to null and dereferences it later. This error is often the result of a programmer initializing a variable to null when it is declared.


Most null pointer issues result in general software reliability problems, but if an attacker can intentionally trigger a null pointer dereference, the attacker might be able to use the resulting exception to bypass security logic or to cause the application to reveal debugging information that will be valuable in planning subsequent attacks.
 
Example: In the following code, the programmer explicitly sets the variable ptr to NULL. Later, the programmer dereferences ptr before checking the object for a null value.


*ptr = NULL;
...
ptr-&gt;field = val;
...
}
</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Recommendations</Name>
<Value>Implement careful checks before dereferencing objects that might be null. When possible, abstract null checks into wrappers around code that manipulates resources to ensure that they are applied in all cases and to minimize the places where mistakes can occur.</Value>
                            </MetaInfo>
                            <AttributeValue>
<Name>&lt;Unaudited&gt;</Name>
<Count>700</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Not an Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Reliability Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Bad Practice</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Suspicious</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Exploitable</Name>
<Count>0</Count>
                            </AttributeValue>
                        </MajorAttributeSummary>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D3AED5919C996CFE3BE345BC7D5CC480">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PtceNext() in table.cpp can crash the program by dereferencing a null pointer on line 9988.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>table.cpp</FileName>
<FilePath>dev/word/core/table.cpp</FilePath>
<LineStart>9988</LineStart>
<Snippet>
	AssertTag(ptch-&gt;fTableChar, ASSERTTAG('ejib'));
	tce.fTtp = ptch-&gt;fTtp;
	tce.itap = ptch-&gt;itap;
	tce.itch = itch;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64EC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1028.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1028</LineStart>
<Snippet>		case irrbRtx:
			{
			int itbd = ((PAP *)pprop)-&gt;itbdMac;
			XAPRL xaT = val;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="8FB857C0A59EEAA36E713F62E72EDCC2">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrGenericPutId() in obrange.cpp can crash the program by dereferencing a null pointer on line 15559.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>15559</LineStart>
<Snippet>			MsoFreePv(*prgwchId);
		*prgwchId = rgwchId;
		*pcchId = SysStringLen(bstrId);
		}
	</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B96AF731CB7E2C9AA33FB2AF18F11A1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TSplScanCore() in spell.cpp can crash the program by dereferencing a null pointer on line 3154.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>3154</LineStart>
<Snippet>							else
								{
								pspld-&gt;apSib.cchUse = pspld-&gt;apSib.cch = pspsc-&gt;cchTestWord;
								}
							fConvertedSmallCapsToCaps = fTrue;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="CB5A779F3BBF596AD5C036BAF03C7A98">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IbkfInsertSdtBkmk() in sdt.cpp can crash the program by dereferencing a null pointer on line 12863.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>sdt.cpp</FileName>
<FilePath>dev/word/core/sdt.cpp</FilePath>
<LineStart>12863</LineStart>
<Snippet>			// we're our parents new first child
			if (psdtixParent &amp;&amp; psdtixParent-&gt;dwIdFirstChild == psdtiChild-&gt;dwId)
				psdtixParent-&gt;dwIdFirstChild = psdti-&gt;dwId;

			// first child will need to disconnect with it's previous.</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="3A5449381CF50028C71429A132B1B32C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FGetMailEdTitleNew() in docobj.cpp can crash the program by dereferencing a null pointer on line 6946.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>docobj.cpp</FileName>
<FilePath>dev/word/client/desktop/docobj.cpp</FilePath>
<LineStart>6946</LineStart>
<Snippet>
		VariantInit(&amp;varg);

		hr = pdisp-&gt;Invoke(dispidGetSubjectDocObj, IID_NULL,
			GetUserDefaultLCID(), DISPATCH_PROPERTYGET, &amp;dispParms,</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="7E2098ECC2D8D7CBBC61485307656CBB">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdTatenakayoko() in cmd3.cpp can crash the program by dereferencing a null pointer on line 4877.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>4877</LineStart>
<Snippet>			return cmdError;
		pcmb-&gt;pv = pcefels;
		pcab-&gt;pcefels = pcefels;
		ClearBytes(pcefels, sizeof(CEFELS));
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DF1A20D5C5B43AD5146DD1E9060C135E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdSaveFileEx() in savebin.cpp can crash the program by dereferencing a null pointer on line 2033.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>savebin.cpp</FileName>
<FilePath>dev/word/core/savebin.cpp</FilePath>
<LineStart>2033</LineStart>
<Snippet>#endif

		pdodDest-&gt;fOutlineDirty |= pdod-&gt;fOutlineDirty;
		if (FDocInOutlineView(pdod) &amp;&amp; !FUpdateHplcpad(pdodDest))
			goto LErrRet;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="925A41013967E0BE6BF6F8888D5F5460">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaHandlerPropPap() in obfmt.cpp can crash the program by dereferencing a null pointer on line 2048.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obfmt.cpp</FileName>
<FilePath>dev/word/client/desktop/obfmt.cpp</FilePath>
<LineStart>2048</LineStart>
<Snippet>		if (fStandAlone)
			{
			ApplyGrsSgc(&amp;grsr, &amp;pobpap-&gt;pap, sgcPap);
			ApplyGrsSgcGray(&amp;grsr, &amp;pobpap-&gt;papGray, sgcPap, 0);
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="55914D1A0EE6CA26602A41EF7F956AB4">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdMMAddressBlock() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 11280.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>11280</LineStart>
<Snippet>			AssertTag(ppmd != pNil, ASSERTTAG('jghp'));

			ppmf = LppmfFromLppmd(ppmd, ppmd-&gt;pms.ipmfFetch);
			if(ppmf-&gt;pIMsoMailMerge)
				hr = ppmf-&gt;pIMsoMailMerge-&gt;HrDoInsertAddressBlockDlg(HwndParentDlg(vhwndApp), pNil);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="8A5D3AE3D0FE44D6FF7C02ADCF900FAE">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDisplay() in oartDisp.cpp can crash the program by dereferencing a null pointer on line 782.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartDisp.cpp</FileName>
<FilePath>dev/word/client/shared/oartDisp.cpp</FilePath>
<LineStart>782</LineStart>
<Snippet>
			if (pTarget != pNil &amp;&amp; !transformRenderTargetRestore.IsIdentity())
				pD2D1RenderTarget-&gt;SetTransform(transformRenderTargetRestore);
			}
		else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="FFA2EA6D587E938FF803A759A5FB1A73">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDisplay() in oartDisp.cpp can crash the program by dereferencing a null pointer on line 721.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartDisp.cpp</FileName>
<FilePath>dev/word/client/shared/oartDisp.cpp</FilePath>
<LineStart>721</LineStart>
<Snippet>
		RT &amp;rt = (*hwwd)-&gt;pwrt-&gt;RtGetRt();
		ID2D1RenderTarget *pD2D1RenderTarget = rt.PD2D1RenderTarget();
		if (rt.Rtk() == rtkD2D1 &amp;&amp; pD2D1RenderTarget  == pNil)
			return fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="50CD316E4D04FA334D8449E96B55ADAE">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function NormCp() in disp3.cpp can crash the program by dereferencing a null pointer on line 5513.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>5513</LineStart>
<Snippet>							}
						else if (fDoAtCp)
							drcl = pdrdo-&gt;drcl;
						else
							drcl = PdrFetchAndFree(hpldr, idr, &amp;drf)-&gt;drcl;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="3F6A46B68FBDE0E142BB09EFC89516A5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function OnEvent() in odraw.cpp can crash the program by dereferencing a null pointer on line 6434.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>odraw.cpp</FileName>
<FilePath>dev/word/client/desktop/odraw.cpp</FilePath>
<LineStart>6434</LineStart>
<Snippet>
		InterruptSave();
		if (PbsiCur()-&gt;fAbort)
			{
			PdodOfPvDggs(pvDggs)-&gt;fSaveCanceled = fTrue;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="99073D73EEAAE35D990C481D9AB055BD">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function GetPictureInfo() in pic.cpp can crash the program by dereferencing a null pointer on line 716.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pic.cpp</FileName>
<FilePath>dev/word/core/pic.cpp</FilePath>
<LineStart>716</LineStart>
<Snippet>					//memset(&amp;im, NULL, sizeof(im));
					
					hr = pILineInfo-&gt;GetFormat(&amp;im);
					AssertTag(FSucceededHr(hr), ASSERTTAG('mxqq'));
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="08E8719D23E0472072C515A709C8E77E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function EidWritePistmHtmlCore() in htmlout.cpp can crash the program by dereferencing a null pointer on line 7928.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlout.cpp</FileName>
<FilePath>dev/word/core/htmlout.cpp</FilePath>
<LineStart>7928</LineStart>
<Snippet>		goto fail;
		}
	pistm-&gt;Release();

	if (fWordMail)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="059C6A499F1E8E6A0D7A6747A0389EA6">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PcvdShowCommentPopout() in atnpopout.cpp can crash the program by dereferencing a null pointer on line 1648.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>atnpopout.cpp</FileName>
<FilePath>dev/word/client/desktop/atnpopout.cpp</FilePath>
<LineStart>1648</LineStart>
<Snippet>			//	Set the attributes for the kind of Comment popout (cpok) that we're launching.
			AssertTag(pcpv != pNil, 0x000d28d4 /* tag_ads9u */);  // We just created it so this shouldn't happen.
			pcpv-&gt;SetCpok(cpok == cpokNil ? cpokHint : cpok);

			pcpv-&gt;SetFilter(ptaxcFilter);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="54606DED085F52ED76A8B63247652324">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDlgSelectLabels() in label.cpp can crash the program by dereferencing a null pointer on line 1202.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>label.cpp</FileName>
<FilePath>dev/word/client/desktop/label.cpp</FilePath>
<LineStart>1202</LineStart>
<Snippet>				AssertTag(pceenvlabel-&gt;iCurVendor != iNil, ASSERTTAG('8wto'));
				// change iCurProd to the current product;
				pceenvlabel-&gt;iCurProd = pipgsvCustom-&gt;IProductFromProductID(pceenvlabel-&gt;labelinfo.dwProdID);
				AssertTag(pceenvlabel-&gt;iCurProd != iNil, ASSERTTAG('8wtp'));
				SafeRelease(pipgsvCustom);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B4E2F8C1C710BEA1E399D2417106583C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2038.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2038</LineStart>
<Snippet>			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c00e /* tag_an2ao */);
			AssertTag (rrb.pgc == pgcDopSep, 0x0035c00f /* tag_an2ap */);
			pdopsep-&gt;xaPage = psep-&gt;pginfo.xaPage = (uns)valUse;
			break;
		case irrbRpaperh:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6546">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2115.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2115</LineStart>
<Snippet>		case irrbRprotlevel:
			if (valUse &gt;= iDocProtRevision &amp;&amp; valUse &lt;= iDocProtRead)
				((DOP *)pprop)-&gt;iDocProtCur = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F653B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1923.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1923</LineStart>
<Snippet>			if (!fHaveVal)
				val = rrb.w;
			*(short *)(pprop + rrb.b) = (val &gt; 0 ? val - 1 : 0);
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64FF">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1214.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1214</LineStart>
<Snippet>			break;
		case irrbRpnnumonce:
			((PAP *)pprop)-&gt;anld.fNumber1 = fTrue;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;anld.fNumber1 = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4A6F4FFAD284D5564F0D99448B824DC7">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function UpdateDsi() in print.cpp can crash the program by dereferencing a null pointer on line 1381.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>print.cpp</FileName>
<FilePath>dev/word/core/print.cpp</FilePath>
<LineStart>1381</LineStart>
<Snippet>			for (i = 0; i &lt; cWordsTemp; i++)
				{
				if (FHyphSkipLeadingXch(pxchT[j]))
					{
					cNonWords++;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="5009D356FBE4A41F7F4DF504BEF63FC7">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FcrCalcFieldsCore() in fieldclc.cpp can crash the program by dereferencing a null pointer on line 1009.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldclc.cpp</FileName>
<FilePath>dev/word/core/fieldclc.cpp</FilePath>
<LineStart>1009</LineStart>
<Snippet>
			ProgressReportPercentFixed(hppr, (long) ifld, &amp;ifldNext);
			pprSav = **hppr;
			}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="626384FA8B536FAF93466961A0271F6E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaHandlerProp() in obrange.cpp can crash the program by dereferencing a null pointer on line 12014.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>12014</LineStart>
<Snippet>			else
				{
				hr = HrOaStyleApplyPrlSgc(pfont-&gt;obfmt.pie, grsr.grpprl, grsr.cb, sgcChp);
				}
			goto LRet;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="2D51ABBB73EB016B92E7B11695C0B47C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function EfOfficeCenterMacroList() in mso.cpp can crash the program by dereferencing a null pointer on line 3989.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>mso.cpp</FileName>
<FilePath>dev/word/client/desktop/mso.cpp</FilePath>
<LineStart>3989</LineStart>
<Snippet>
	// Remember the UI name of the macro
	if (SUCCEEDED(MsoHrMakeString(&amp;macroInfo.piStrMacroName)) &amp;&amp; macroInfo.piStrMacroName-&gt;FCopyWz(XszFromXstz(xstz)))
		{
		// Now get the command name from the full macro name</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="61D484506DD8979E5D7B212D7B224DEE">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrDispatchWTableWidthVal() in xmltbl.cpp can crash the program by dereferencing a null pointer on line 4356.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmltbl.cpp</FileName>
<FilePath>dev/word/core/xmltbl.cpp</FilePath>
<LineStart>4356</LineStart>
<Snippet>	if (pxssd != pNil
		&amp;&amp; pxssd-&gt;cnfc != cnfcWholeTable
		&amp;&amp; (bOffsetFts == offset(TAP, ftsCellPaddingDefaultLeft)
			|| bOffsetFts == offset(TAP, ftsCellPaddingDefaultRight)
			|| bOffsetFts == offset(TAP, ftsCellPaddingDefaultTop)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="0C4BFB65E4DAF50CE1A7AEAEB8D1073E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FShowDataMainDoc() in pmhrender.cpp can crash the program by dereferencing a null pointer on line 44.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhrender.cpp</FileName>
<FilePath>dev/word/core/pmhrender.cpp</FilePath>
<LineStart>44</LineStart>
<Snippet>
		GetIfldFlcd(doc, ifld, &amp;flcd);
		return (flcd.fNested &amp;&amp; FMask(LppmdFromPdod(docMain)-&gt;pms.wpms, wpmsDF));
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="BD200D9AF044405DA9FDEB7CE8ED14A1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaHandlerProp() in obrange.cpp can crash the program by dereferencing a null pointer on line 11964.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>11964</LineStart>
<Snippet>					{
					AssertTag(pchp-&gt;lidDefault == val || pchp-&gt;lidFE == val || pchp-&gt;lidBi == val , ASSERTTAG('dqgq'));
					pchp-&gt;lid = val;
					}
				}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E1DBE17868AB2E0936371E960D6B09F5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function LCFFillTmcMcr() in library.cpp can crash the program by dereferencing a null pointer on line 2812.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>library.cpp</FileName>
<FilePath>dev/word/client/desktop/library.cpp</FilePath>
<LineStart>2812</LineStart>
<Snippet>	FreeEml(&amp;eml);	
	if (pVbaProjItemCol)
		pVbaProjItemCol-&gt;Release();
	if (pVbaProjItem)
		pVbaProjItem-&gt;Release();</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6558">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2590.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2590</LineStart>
<Snippet>			/* dxaAbs is biased by 1 internally */
			/* avoid special values */
			((TAP *)pprop)-&gt;dxaAbs = DxaAbsBumpDxaAbs(valUse + 1);
			if (ppropGray)
				((TAP *)ppropGray)-&gt;dxaAbs = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4C8E63F0E52D71574A612F15975CF117">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrGetPmipMain() in metroin.cpp can crash the program by dereferencing a null pointer on line 2352.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>metroin.cpp</FileName>
<FilePath>dev/word/core/metroin.cpp</FilePath>
<LineStart>2352</LineStart>
<Snippet>		
	SafeRelease(piodfprt);
	piprt-&gt;Release();
	piprt = pNil;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="38729E11CA153E143071185E96FC8BD1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FillFceKernGDIACore() in loadfont.cpp can crash the program by dereferencing a null pointer on line 4442.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>loadfont.cpp</FileName>
<FilePath>dev/word/core/loadfont.cpp</FilePath>
<LineStart>4442</LineStart>
<Snippet>	for (iKpr = 0; iKpr &lt; cKernPairs; iKpr++)
		{
		kpr.lPair = MakeDWordFirstSecond(
			XchFromWchCpg(lrgKerningPairs[iKpr].wSecond, cpg),
			XchFromWchCpg(lrgKerningPairs[iKpr].wFirst, cpg));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="54606DED085F52ED76A8B63247652325">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDlgSelectLabels() in label.cpp can crash the program by dereferencing a null pointer on line 1241.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>label.cpp</FileName>
<FilePath>dev/word/client/desktop/label.cpp</FilePath>
<LineStart>1241</LineStart>
<Snippet>				}	
			// is this the only custom lable left? 
			fLastCustom = (pipgsvCustom-&gt;CProducts() &lt;= 1);
			SafeRelease(pipgsvCustom);
			XszToXstz(pceenvlabel-&gt;labelinfo.xszProductName, xstz, CxchMaxXstz(xstz));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D22860525288B7D7C3EC90C6591561B9">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PdodOpenFnmCore2() in open.cpp can crash the program by dereferencing a null pointer on line 3746.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>open.cpp</FileName>
<FilePath>dev/word/core/open.cpp</FilePath>
<LineStart>3746</LineStart>
<Snippet>	if (fOpensInReadMode)
		{
		if (pdod-&gt;hwwdDisp != vhwwdCur)
			(*pdod-&gt;hwwdDisp)-&gt;fShouldBeReadingMode = fTrue;
		else if (!FReadingMode(pdod-&gt;hwwdDisp))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F651D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1720.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1720</LineStart>
<Snippet>
		case irrbRdonotembedlingdata:
			((DOP *)pprop)-&gt;fSaveUim = !valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F71332AAF2AA379FD9E4C7A73E602CEE">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FEvalFieldCondition() in fieldclc.cpp can crash the program by dereferencing a null pointer on line 6763.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldclc.cpp</FileName>
<FilePath>dev/word/core/fieldclc.cpp</FilePath>
<LineStart>6763</LineStart>
<Snippet> 				{  /* single char wildcard -- say it matches */
				}
			else  if (FAssign(wCompare = WCompXchXch (*pxch1, *pxch2)))
				goto LCompareDone;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DBD45E56124AAB0456510E2FCEB6576F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function EfOfficeCenterMacroList() in mso.cpp can crash the program by dereferencing a null pointer on line 3999.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>mso.cpp</FileName>
<FilePath>dev/word/client/desktop/mso.cpp</FilePath>
<LineStart>3999</LineStart>
<Snippet>
			// Remember the command name
			if (SUCCEEDED(MsoHrMakeString(&amp;macroInfo.piStrMacroCommand)) &amp;&amp; macroInfo.piStrMacroCommand-&gt;FCopyWz(pxch))
				fFailed = fFalse;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64FA">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1187.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1187</LineStart>
<Snippet>				}
//  JPN_REVIEW:  PETERO:
			((PAP *)pprop)-&gt;anld.ftc = (**hribl).ftcPnf = ftcNew;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;anld.ftc = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="9AB48FF465D459CC34D64FBF462F0FA6">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FTogglePicFloat() in pic.cpp can crash the program by dereferencing a null pointer on line 4563.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pic.cpp</FileName>
<FilePath>dev/word/core/pic.cpp</FilePath>
<LineStart>4563</LineStart>
<Snippet>	
	if (hspTemp != hspNil)
		pidgTemp-&gt;FDeleteShape(hspTemp, fFalse, pNil);
	if (pstrScreenTip != pNil)
		pstrScreenTip-&gt;Free();</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6526">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1822.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1822</LineStart>
<Snippet>
		case irrbRiss:
			((CHP *)pprop)-&gt;iss = valUse;
			if (ppropGray)
				((CHP *)ppropGray)-&gt;iss = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="66FF92DE53EADB6F626A40C11B054A55">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _FInsertSPCore() in drawcmd.cpp can crash the program by dereferencing a null pointer on line 2879.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>drawcmd.cpp</FileName>
<FilePath>dev/word/client/desktop/drawcmd.cpp</FilePath>
<LineStart>2879</LineStart>
<Snippet>		FEnsureDgvInPr(HprFromWwdCp(psel-&gt;hwwd, psel-&gt;ca.pdod, psel-&gt;ca.cpFirst), IdgvCur());

		if ((piShape-&gt;Select)(var/*fReplace*/) != NOERROR)
			fRet = fFalse;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="685B36E40010415DDD28AE90265F448F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdInsPicture() in pic2.cpp can crash the program by dereferencing a null pointer on line 1245.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pic2.cpp</FileName>
<FilePath>dev/word/client/desktop/pic2.cpp</FilePath>
<LineStart>1245</LineStart>
<Snippet>
		TurnOffSel(psel);
		cpFirst = psel-&gt;ca.cpFirst;

		pcabinspic = (CABINSPIC *)PcabFromHcab(pcmb-&gt;hcab);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="97ACF6F39076B3CABB661867932AC8ED">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrAddBindingFromSelection() in osfom.cpp can crash the program by dereferencing a null pointer on line 1524.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>osfom.cpp</FileName>
<FilePath>dev/word/client/desktop/osfom.cpp</FilePath>
<LineStart>1524</LineStart>
<Snippet>		AssertDoTag(FSetContentControlOsfBound(pdod, psdti-&gt;dwId), 0x000d56c2 /* tag_adv1c */);

		COsfBinding obNew(pcoep, obstrBindingId, psdti-&gt;dwId, osfbt);
		obNew.SetPocc(pocc);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="9282EC4A170082C7F0E91CB9B6913F8A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FcrCalcFltAskFill() in fieldspcui.cpp can crash the program by dereferencing a null pointer on line 401.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldspcui.cpp</FileName>
<FilePath>dev/word/client/desktop/fieldspcui.cpp</FilePath>
<LineStart>401</LineStart>
<Snippet>	while ((xchSw = XchFetchSwitch(pffb, fFalse /*fSys*/)) != chNull)
		if (xchSw == chFldSwAskOnce
			&amp;&amp; FActivePMPdod(doc) &amp;&amp; !FPromptAskPMPdod(doc))
			return fcrKeepOld;
		else if (xchSw == chFldSwDefault)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="ED1B6BCE6D914CFA3BEC041F694B3F8A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function GetSelected() in picturee2o.cpp can crash the program by dereferencing a null pointer on line 1583.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>picturee2o.cpp</FileName>
<FilePath>dev/word/core/wdoart/picturee2o.cpp</FilePath>
<LineStart>1583</LineStart>
<Snippet>   if( pESI )
   {
      for( int i = 0; i &lt; pESI-&gt;NumSelE2os(); ++i)
      {
         Ofc::TReferringPtr&lt; Art::IE2o &gt; prE2o( ( *pESI )[ i ] );</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64E6">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 774.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>774</LineStart>
<Snippet>		case irrbRs:
			{
			uint istdOld = ((PAP *)pprop)-&gt;istd;
			uint istd = _IstdFromIdStyle(hribl, fHaveVal, valUse, stkPara);
			((PAP *)pprop)-&gt;istd = istd;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64E3">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 753.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>753</LineStart>
<Snippet>				// same way as Single.

				((PAP *)pprop)-&gt;lspd.dyaLine = dyaLineSingle;
				((PAP *)pprop)-&gt;lspd.fMultLinespace = fTrue;
				}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="0F09BCF2F021BC717F71ECD2C13413A5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdKumimoji() in cmd3.cpp can crash the program by dereferencing a null pointer on line 5649.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>5649</LineStart>
<Snippet>	if (pcmb-&gt;fDialog)
		{
		pcab-&gt;hps = max(pcekumi-&gt;rbs.hps, hpsRubyMin);
		pcab-&gt;ftc = pcekumi-&gt;rbs.ftc;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6554">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2557.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2557</LineStart>
<Snippet>
		case irrbRtrftsWidth:
			((TAP *)pprop)-&gt;ftsWidth = FInLimits(valUse, ftsNil, ftsMax) ? valUse : ftsNil;
			if (ppropGray)
				((TAP *)ppropGray)-&gt;ftsWidth = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64E1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 738.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>738</LineStart>
<Snippet>			break;
		case irrbRqk:   // read Kashida justification; overrides logical jc	
			((PAP *)pprop)-&gt;jc = (valUse * 2 &lt; (PERCENT_KASHIDA_LO + PERCENT_KASHIDA_MED)) ? jcBothLo : (valUse * 2 &lt; (PERCENT_KASHIDA_MED + PERCENT_KASHIDA_HI)) ? jcBothMed : jcBothHi;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;jc = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="04A8CB3AED1B9586AF5F54B6FD7B16F5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FEmitCssTableProps() in htmltbl.cpp can crash the program by dereferencing a null pointer on line 10732.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmltbl.cpp</FileName>
<FilePath>dev/word/core/htmltbl.cpp</FilePath>
<LineStart>10732</LineStart>
<Snippet>			for (ibrc = 0; ibrc &lt; cbrcTc; ibrc++)
				{
				if (!ptcGray-&gt;mpibrcftsCellPadding[ibrc]
					|| !ptcGray-&gt;mpibrcwCellPadding[ibrc])
					{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="6D31E1F1E7ABC90AF8954161341B30BE">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FInitTdsdFromPaps() in tabs.cpp can crash the program by dereferencing a null pointer on line 868.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>tabs.cpp</FileName>
<FilePath>dev/word/client/desktop/tabs.cpp</FilePath>
<LineStart>868</LineStart>
<Snippet>		for (itbd = 0, cTabs = 0; itbd &lt; itbdMac; itbd++)
			{
			if (pNil == ppapGray || (rgdxaTabGray[itbd] == 0 &amp;&amp; rgtbdTabGray[itbd] == 0))
				{
				/* It's a good tab! */</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B2AE8594DB3148D3D8D328A2D6C5CB77">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FcrCalcFltInclude() in fieldspc.cpp can crash the program by dereferencing a null pointer on line 1298.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldspc.cpp</FileName>
<FilePath>dev/word/client/desktop/fieldspc.cpp</FilePath>
<LineStart>1298</LineStart>
<Snippet>				goto LRet;
				}
			pNodeTransform = pDomTransform-&gt;AsXMLDOMNode();
			if (pNodeTransform == pNil)
				{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="8CD0D907E09B19EB2C163879E4768FE6">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function DisplayErrorInPane() in grammar.cpp can crash the program by dereferencing a null pointer on line 10138.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>grammar.cpp</FileName>
<FilePath>dev/word/client/desktop/grammar.cpp</FilePath>
<LineStart>10138</LineStart>
<Snippet>	int fNlCheck = pgrss-&gt;fNlCheck;
	cbuew = fNlCheck ? cbof(CEW) : cbof(GEW);
	cuew = fNlCheck ? pgrld-&gt;pceb-&gt;rgceo[iueo].ccew : pgrld-&gt;lpgeb-&gt;rggeo[iueo].cgew;
	puew = fNlCheck ? (UEW *)&amp;pgrld-&gt;pceb-&gt;rgceo[iueo].rgcew[0] : (UEW *)&amp;pgrld-&gt;lpgeb-&gt;rggeo[iueo].lrggew[0];
	cet = fNlCheck ? pgrld-&gt;pceb-&gt;rgceo[iueo].cet : cetDefault;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="50CD316E4D04FA334D8449E96B55ADAF">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function NormCp() in disp3.cpp can crash the program by dereferencing a null pointer on line 5605.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>5605</LineStart>
<Snippet>						/* would all of dr width be visible if xeHome were the scroll? */
					
						DrcToRc(fDoAtCp ? &amp;pdrdo-&gt;drcl :
							&amp;PdrFetchAndFree(hpldr, idr, &amp;drf)-&gt;drcl, &amp;rcl);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6566">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2882.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2882</LineStart>
<Snippet>					if (papT.fBiDi)
						{
						((TAP *)pprop)-&gt;fBiDi = fTrue;
						//(**hribl).tap.jc = papT.jc;
						}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="0D4050F20F46087749FFCBF20CABB0D9">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FReadHtmlFromPistmCore() in htmlin.cpp can crash the program by dereferencing a null pointer on line 1882.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlin.cpp</FileName>
<FilePath>dev/word/core/htmlin.cpp</FilePath>
<LineStart>1882</LineStart>
<Snippet>							goto LHandleChunkDefault;

						AssertDoTag(SUCCEEDED(pistmBinary-&gt;Read(&amp;fcMac, sizeof(FC), &amp;cb)) &amp;&amp; cb == sizeof(FC), ASSERTTAG('dhbj'));

						if ((fn = FnWrapIStream(pistmBinary, istmMain, fcMac, lidUI, nFibCurrent)) == fnNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F653F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2013.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2013</LineStart>
<Snippet>		case irrbRmarglsxn:
			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c008 /* tag_an2ai */);
			((SEP *)pprop)-&gt;pginfo.dxaLeft = (uns)valUse;
			break;
		case irrbRmargrsxn:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E817F5F43717134871683277233C66BC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FNotifyAction() in acnotify.cpp can crash the program by dereferencing a null pointer on line 5384.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>acnotify.cpp</FileName>
<FilePath>dev/word/client/desktop/acnotify.cpp</FilePath>
<LineStart>5384</LineStart>
<Snippet>
		// on drop menu we know it is an opportunity to update the wwd
		if (fAutoOoc &amp;&amp; patk-&gt;fUpdateWwdForShade)
			{
			FUpdateWwd(vhwwdCur, fuwNil, hprNil);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="87A7C97129D9C091C2C7AFF85397FAE1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdDeleteSdt() in factoid.cpp can crash the program by dereferencing a null pointer on line 5885.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>factoid.cpp</FileName>
<FilePath>dev/word/client/desktop/factoid.cpp</FilePath>
<LineStart>5885</LineStart>
<Snippet>					{
					hcab = (HCABXmlDocMap) GetWindowLongPtr(GetParent(PdodMain2(pdod)-&gt;pud-&gt;hwndSdtTV), GWLP_USERDATA);
					if ((*hcab)-&gt;ibkfToolbarClick != ibkfNil)
						{
						psdti = PsdtiFromPdodIbkf(pdod, (*hcab)-&gt;ibkfToolbarClick, pNil);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C91CB5536B6FDAF37AEB379E9AFA7879">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function UpdateDsi() in print.cpp can crash the program by dereferencing a null pointer on line 1268.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>print.cpp</FileName>
<FilePath>dev/word/core/print.cpp</FilePath>
<LineStart>1268</LineStart>
<Snippet>					}

				if (pchps-&gt;grf.fSpec)
					cChWhiteSpace++;	// Special, treat as whitespace
				else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="6AFE612F576C40BC2AF46174BC62366E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FSetXsz() in fnmnew.cpp can crash the program by dereferencing a null pointer on line 6054.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fnmnew.cpp</FileName>
<FilePath>dev/word/core/fnmnew.cpp</FilePath>
<LineStart>6054</LineStart>
<Snippet>
	// Resolve the relative URL to get the brand new one
	hr = piurlRel-&gt;HrResolve(&amp;piurlAbs);
	if (FAILED(hr))
		goto LRet;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D6E5C19E53E3AA68264D7D2217744204">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _FOcxGetValue() in doc.cpp can crash the program by dereferencing a null pointer on line 23859.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>doc.cpp</FileName>
<FilePath>dev/word/core/doc.cpp</FilePath>
<LineStart>23859</LineStart>
<Snippet>	OACR_ASSUME_NOTHROW_BEGIN
	if (lpVD != lpNil)
		OleMethodLp(lpTIProps, ReleaseVarDesc)( lpVD);
	if (lpTA != lpNil)
		OleMethodLp(lpTIProps, ReleaseTypeAttr)( lpTA);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B59B22828CEB66C3795419A462D8322B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDisplayGramError() in grammar.cpp can crash the program by dereferencing a null pointer on line 7848.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>grammar.cpp</FileName>
<FilePath>dev/word/client/desktop/grammar.cpp</FilePath>
<LineStart>7848</LineStart>
<Snippet>		IGELI igeliFirstCorr = igeliNil;

		cueo = fNlCheck ? pueb-&gt;ceb.cceo : pueb-&gt;geb.cgeo;
		AssertTag(cueo != 0, ASSERTTAG('dfko'));
		for (iueo = 0; iueo &lt; cueo; iueo++)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B8EFEC5A28C7E2784206D1D5A9E3713">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function RichEditWndProc() in dlgredt.cpp can crash the program by dereferencing a null pointer on line 1181.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlgredt.cpp</FileName>
<FilePath>dev/word/client/desktop/dlgredt.cpp</FilePath>
<LineStart>1181</LineStart>
<Snippet>	case WM_SYSKEYUP:
		// Make sure we call the callback on &lt;F10&gt;
		if (lprtec-&gt;fNotify
				&amp;&amp; (wParam == VK_F10
						|| FBetween(wParam, VK_NUMPAD1, VK_NUMPAD9)))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F650B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1622.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1622</LineStart>
<Snippet>
		case irrbRkul:
			((CHP *)pprop)-&gt;kul = valUse;
			if (ppropGray)
				((CHP *)ppropGray)-&gt;kul = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F652D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1864.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1864</LineStart>
<Snippet>			break;
		case irrbRfpc:
			((DOP *)pprop)-&gt;fpc = valUse;
			break;
		case irrbRepc:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="CD7764C0CF860E97A6868E5BEE8AFF6A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrPreCreateOcx() in ocxclnt.cpp can crash the program by dereferencing a null pointer on line 4824.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ocxclnt.cpp</FileName>
<FilePath>dev/word/client/desktop/ocxclnt.cpp</FilePath>
<LineStart>4824</LineStart>
<Snippet>		*vOcxCreateInfo.lplpControl = lpUnk;

	hr = MsoComQueryInterface(lpUnk, IID_IOleObject, &amp;lpodt-&gt;m_lpoleobject);

	if (pdodMother != vpdodScrap &amp;&amp; pdodMother-&gt;hplocx)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6570">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 3417.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>3417</LineStart>
<Snippet>
		case irrbRdghorigin:
			((DOP *)pprop)-&gt;dogrid.xaGrid = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6527">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1831.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1831</LineStart>
<Snippet>			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c000 /* tag_an2aa */);
			if ((cpg = MsoCpgFromChs(fHaveVal ? valUse : 0)) != 0)
				((CHP *)pprop)-&gt;cpg = cpg;
			break;
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B9127D84779B74A2B76D4D1DF4D6FB37">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdEnvelopesLabels() in envelope.cpp can crash the program by dereferencing a null pointer on line 899.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>envelope.cpp</FileName>
<FilePath>dev/word/client/desktop/envelope.cpp</FilePath>
<LineStart>899</LineStart>
<Snippet>		TMC tmcRet = 0;
		
		if (!pceenvlabel-&gt;fValid 
			&amp;&amp; !FInitCeenvlabel(pceenvlabel, hcab, PselFromPcmb(pcmb)))
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="A9FDB48EC17C5B6CF3F7494A9C236D84">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WbBeginUserDialog() in mstudlg.cpp can crash the program by dereferencing a null pointer on line 859.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>mstudlg.cpp</FileName>
<FilePath>dev/word/client/desktop/mstudlg.cpp</FilePath>
<LineStart>859</LineStart>
<Snippet>			}

	    pvproj-&gt;Release();
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="17728963AD733B4EEAB501624F9E1935">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdInsPicture() in pic2.cpp can crash the program by dereferencing a null pointer on line 1306.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pic2.cpp</FileName>
<FilePath>dev/word/client/desktop/pic2.cpp</FilePath>
<LineStart>1306</LineStart>
<Snippet>
				ppibT = ppxPibMulti-&gt;PGet(i);
				XszToXstz(*ppxPwchFile-&gt;PGet(i), XstzCxch(xstzFile));
				if (pcabinspic-&gt;iPicLink)
					MakeXstzRelativeToDoc(xstzFile, CxchMaxXstz(xstzFile), psel-&gt;ca.pdod);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="6B5C886FD0E93AFA3BE3E69921FF9792">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FKeepOcxLoaded() in edit.cpp can crash the program by dereferencing a null pointer on line 1344.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>edit.cpp</FileName>
<FilePath>dev/word/core/edit.cpp</FilePath>
<LineStart>1344</LineStart>
<Snippet>			return fFalse;
		//change the ownership of the lpnewobj to the dest lpodt
		lpnewobjDest-&gt;pdod = docDest;
		lpnewobjDest-&gt;iodt = IodtFromLpodt(lpodtDest);
		lpodtDest-&gt;m_fOCX = fTrue;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="83F3A4E50BF97ECE22E9C7702BE9D1B4">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcOpenOneFile() in dlgopen.cpp can crash the program by dereferencing a null pointer on line 7753.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlgopen.cpp</FileName>
<FilePath>dev/word/client/desktop/dlgopen.cpp</FilePath>
<LineStart>7753</LineStart>
<Snippet>	// Save off first IOLDoc and free the rest.  Complete &quot;Open&quot; command.
	hr = S_OK;
	pioldoc = iolds.lppioldoc[0];
	HrCmdCompletedIoldoc(pioldoc, &amp;hr, pNil /*pGuid*/);
	for (i = 1; i &lt; iolds.cioldoc; i++)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="826F8DA014EDBA6FF8EB62C103146A95">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdEncloseChar() in cmd3.cpp can crash the program by dereferencing a null pointer on line 13090.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>13090</LineStart>
<Snippet>		XCHAR xsz[ixchMaxXsz];

		vencp.iStyle = pcab-&gt;iStyle;
		GetCabXsz(pcmb-&gt;hcab, xsz, IxchMaxXsz(xsz), Iag(CABENCLOSECHAR, hszText));
		SetEncloseText(xsz, vencp.text.xsz, CxchMaxXsz(vencp.text.xsz));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E936DEA3609C939A6523C11530054A37">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaFormatBorder() in obrange.cpp can crash the program by dereferencing a null pointer on line 18543.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>18543</LineStart>
<Snippet>			break;
		case wpropColorRGB:
			rgwopr[cwopr].elk = rgelk2[3][pobb-&gt;ibrc];	//colorRGB
			break;
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6574">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 3433.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>3433</LineStart>
<Snippet>
		case irrbRdghshow:
			((DOP *)pprop)-&gt;dogrid.dxGridDisplay = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B7ED16900788557C08981248B946AF1C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function RefreshOrgList() in organize.cpp can crash the program by dereferencing a null pointer on line 1237.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>organize.cpp</FileName>
<FilePath>dev/word/client/desktop/organize.cpp</FilePath>
<LineStart>1237</LineStart>
<Snippet>    LVITEMW  listItem;
    HCABORGANIZER hcab = (HCABORGANIZER) GetWindowLongPtr(hwndLV, GWLP_USERDATA);
	HPL hplItems = (*hcab)-&gt;hplItems;
	int i;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B28B05E51AC341D5763D1360DB261D89">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Invoke() in obwrdbas.cpp can crash the program by dereferencing a null pointer on line 1615.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obwrdbas.cpp</FileName>
<FilePath>dev/word/client/desktop/obwrdbas.cpp</FilePath>
<LineStart>1615</LineStart>
<Snippet>					continue;
				}
			else if ((elk = lpeldi-&gt;rgelfd[dispid].elk) == elk_)
				continue;
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64DC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 693.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>693</LineStart>
<Snippet>
		case irrbRli:
			if (((PAP *)pprop)-&gt;fBiDi)
				{
				((PAP *)pprop)-&gt;dxaRight = valUse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="8D7D04A08F5067FA2C1CA29E74E84E2D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDlgPMSetup() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 758.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>758</LineStart>
<Snippet>					if ((tmc = TmcMergeOptions(&amp;cmb, lppmd, fTrue)) != tmcPMMerge)
						{
						InitPMSetupDlgWpms(lppmd-&gt;pms.wpms, lppmd-&gt;pms.wpmsdt, fTrue /*fForceUpdate*/);
						if (FRecActive() &amp;&amp; tmc == tmcOK)
							FRecordCab(fciMailMerge, cmb.hcab, tmcOK);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="3CA1969DC2E22FDE5ABEA08ECB7A81A1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCkMarginsSect() in pgsetup.cpp can crash the program by dereferencing a null pointer on line 3525.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pgsetup.cpp</FileName>
<FilePath>dev/word/client/desktop/pgsetup.cpp</FilePath>
<LineStart>3525</LineStart>
<Snippet>			if (fInCkRange)
				{
				if (pcabpgsetup-&gt;uSecPageWidth != uNinch)
						xaPage =	pcabpgsetup-&gt;uSecPageWidth;
				if (pcabpgsetup-&gt;uSecPageHeight != uNinch)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="ED1E0AD3015057296E1238A780413025">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Perform() in oartHost.cpp can crash the program by dereferencing a null pointer on line 8078.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartHost.cpp</FileName>
<FilePath>dev/word/client/shared/oartHost.cpp</FilePath>
<LineStart>8078</LineStart>
<Snippet>	else if (fDrillDown)  // Swap in the new props
		{
		paeddsi-&gt;SetNonVisualPropsOfSelection(atx, aedp);
		}
	else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="182C8E70F7C38F59C3927A4630A3CCE5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PdodOpenFnmCore2() in open.cpp can crash the program by dereferencing a null pointer on line 2321.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>open.cpp</FileName>
<FilePath>dev/word/core/open.cpp</FilePath>
<LineStart>2321</LineStart>
<Snippet>				}
			if (((dof2 &amp; dof2NewNativeOnly) &amp;&amp; !FMetroFtyp(pfcb-&gt;ftypStatic))
				|| ((dof &amp; dofNativeOnly) &amp;&amp; (!pfcb-&gt;fHasFib || !FNativeFtyp(pfcb-&gt;ftypStatic))))
				{
				pdod = pdodNil;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F655F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2630.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2630</LineStart>
<Snippet>
		case irrbRdropcapli:
			_Dcs(((PAP *)pprop)-&gt;dcs).cl = max(0, min(valUse, clDCMax));
			if (ppropGray)
				((PAP *)ppropGray)-&gt;dcs = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="059C6A499F1E8E6A0D7A6747A0389EA7">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PcvdShowCommentPopout() in atnpopout.cpp can crash the program by dereferencing a null pointer on line 1733.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>atnpopout.cpp</FileName>
<FilePath>dev/word/client/desktop/atnpopout.cpp</FilePath>
<LineStart>1733</LineStart>
<Snippet>		}

	pcpv-&gt;SetFSingleThreaded(fSingleThreaded);

	if ((*hwwd)-&gt;pdod-&gt;pud-&gt;pcvd != pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D319077B43E126A064CB6B9258690538">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Invoke() in obwrdbas.cpp can crash the program by dereferencing a null pointer on line 1644.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obwrdbas.cpp</FileName>
<FilePath>dev/word/client/desktop/obwrdbas.cpp</FilePath>
<LineStart>1644</LineStart>
<Snippet>			grpfwfv)))
			{
			mpWoprDispparams[iwoprArgs++] = (grpfwfv &amp; fwfvOutput) ? ivarg : -1;
			}
		else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B96AF731CB7E2C9AA33FB2AF18F119B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TSplScanCore() in spell.cpp can crash the program by dereferencing a null pointer on line 2904.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>2904</LineStart>
<Snippet>					AssertSzTag(fFalse, &quot;Speller bug: cchError == 0&quot;, 0x003d1592 /* tag_aprws */);
					if (!pspsc-&gt;apSrb.ichError)	// otherwise we are advancing OK
						cchError = pspsc-&gt;apSrb.cchError = pspld-&gt;apSib.cch;
					}
				else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="30B7CB56A43ADD0E3FF7C1FDA0860B06">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CPassSaveConfirmDod() in quit.cpp can crash the program by dereferencing a null pointer on line 1446.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>quit.cpp</FileName>
<FilePath>dev/word/client/desktop/quit.cpp</FilePath>
<LineStart>1446</LineStart>
<Snippet>			SetDodDirty(pdod, fTrue /*fDirty*/);
			pdod-&gt;pud-&gt;fDirtyBkgndSave = fTrue;
			if (vrf.fInCrashRecovery &amp;&amp; PbsiCur()-&gt;pdod == pdod)
				return iPassBackgroundSaveInProgressDuringCrash;
			return iPassBackgroundSaveQueue;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="21C26D85EB385829083002F2238C232E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCloseHtmlTagCore() in htmlout.cpp can crash the program by dereferencing a null pointer on line 2540.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlout.cpp</FileName>
<FilePath>dev/word/core/htmlout.cpp</FilePath>
<LineStart>2540</LineStart>
<Snippet>		if (pwhcd != pNil)
			{
			if (pwhcd-&gt;fBookmark)
				AssertDoTag(FTempClosePhtoBookmark(phepd, hto), ASSERTTAG('dhta'));
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6534">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1885.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1885</LineStart>
<Snippet>			break;
		case irrbRftnrestart:
			((DOP *)pprop)-&gt;rncFtn = valUse;
			break;
		case irrbRaftnrestart:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E3076A44BA97C2086B44684424A9BC4D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdHyphenate() in dlghyph.cpp can crash the program by dereferencing a null pointer on line 221.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlghyph.cpp</FileName>
<FilePath>dev/word/client/desktop/dlghyph.cpp</FilePath>
<LineStart>221</LineStart>
<Snippet>		pcab-&gt;dxaHypHotZ = phyphundo-&gt;dxaHotZ;

		phyphundo-&gt;fAutoHyphen = pdop-&gt;fAutoHyphen;
		phyphundo-&gt;fHyphCapitals = pdop-&gt;fHyphCapitals;
		phyphundo-&gt;cConsecHypLim = pdop-&gt;cConsecHypLim;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="6B4445B97944C9BAA318C24266B92061">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function OnMouseMessage() in wordgroupeditor.cpp can crash the program by dereferencing a null pointer on line 200.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>wordgroupeditor.cpp</FileName>
<FilePath>dev/word/core/wdoart/wordgroupeditor.cpp</FilePath>
<LineStart>200</LineStart>
<Snippet>               {
                  // dont do anything if we are control-clicking on the shape which is already selected, and is the only shape selected.
                  if ( ( pDSI-&gt;NumSelected() == 1 ) &amp;&amp; ( pDSI-&gt;FContains( prE2oFrameDrawingElementAncestorOfShape ) ) )
                     return Handled;
                  pDSI-&gt;ClickAddOrSubtract( prE2oFrameDrawingElementAncestorOfShape );</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="BDCFE4D2564C8611CB3D01A75560CE03">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FConfirmSaveAllDocs() in quit.cpp can crash the program by dereferencing a null pointer on line 1744.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>quit.cpp</FileName>
<FilePath>dev/word/client/desktop/quit.cpp</FilePath>
<LineStart>1744</LineStart>
<Snippet>				// the doc goes through ReverseAdjustOnAbort() otherwise the doc
				// may be in an illegal state.
				if (fFirstBkgnd &amp;&amp; PbsiCur()-&gt;pdod == pdod)
					{
					BSI *pbsi = PbsiCur();</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6532">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1879.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1879</LineStart>
<Snippet>			break;
		case irrbRftnstart:
			((DOP *)pprop)-&gt;nFtn = valUse;
			break;
		case irrbRaftnstart:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="8DDC4FFBDD2F8C58D288E1035D774918">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCanAutoCloseTag() in htmlout.cpp can crash the program by dereferencing a null pointer on line 2750.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlout.cpp</FileName>
<FilePath>dev/word/core/htmlout.cpp</FilePath>
<LineStart>2750</LineStart>
<Snippet>			}

		if (ihtk == msoihtkSpan &amp;&amp; pwhcd != pNil &amp;&amp; pwhcd-&gt;fField)
			return fFalse;
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="6F43B639A8125BF48DC3DB0FDEE7D8CF">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCkMarginsSect() in pgsetup.cpp can crash the program by dereferencing a null pointer on line 3543.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pgsetup.cpp</FileName>
<FilePath>dev/word/client/desktop/pgsetup.cpp</FilePath>
<LineStart>3543</LineStart>
<Snippet>		else
			{
			xaPage = pcabenvsize-&gt;xaEnvWidth;
			yaPage = pcabenvsize-&gt;yaEnvHeight;
			dxaLeft = dxaLeftEnvMargin;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F651F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1729.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1729</LineStart>
<Snippet>
		case irrbRvalidatexml:
			((DOP *)pprop)-&gt;fValidateXML = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E3076A44BA97C2086B44684424A9BC4B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdHyphenate() in dlghyph.cpp can crash the program by dereferencing a null pointer on line 189.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlghyph.cpp</FileName>
<FilePath>dev/word/client/desktop/dlghyph.cpp</FilePath>
<LineStart>189</LineStart>
<Snippet>		{
		pcab = (CABHYPHEN *) *pcmb-&gt;hcab;
		pcab-&gt;dxaHypHotZ = FGoodClientFromWwd(psel-&gt;hwwd) ? uNinch : pdop-&gt;dxaHotZ;
		pcab-&gt;wConsecHypLim = pdop-&gt;cConsecHypLim;
		pcab-&gt;fHypCaps = pdop-&gt;fHyphCapitals;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="1FF0AB59613C5D47D295C35CC1A95586">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FNameFsbrtrk() in fsbreak.cpp can crash the program by dereferencing a null pointer on line 2626.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fsbreak.cpp</FileName>
<FilePath>dev/word/core/fsbreak.cpp</FilePath>
<LineStart>2626</LineStart>
<Snippet>			{
			if (!FAddPgbru(pfsclient, pNil /*pvBreak*/, pfsnmFrame, pNil /*pfsnmRel*/,
					cpLimFrame - pfsnmFrame-&gt;cp /*dcp*/, pgbrukNone, 0 /*iExtra*/, 
					pfsclient-&gt;ipgd - 1, 0 /*icol*/))
				return fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="64565702872D73835E9BB43A90947AD5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ColumnDragStart() in teTableCol.cpp can crash the program by dereferencing a null pointer on line 430.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>teTableCol.cpp</FileName>
<FilePath>dev/word/client/shared/teTableCol.cpp</FilePath>
<LineStart>430</LineStart>
<Snippet>	AssertPdodTag(m_psel-&gt;ca.pdod, 0x003c94c7 /* tag_apjth */);

	if (m_phts-&gt;drk == drkText &amp;&amp; FDragOkTableOrPara(pdrOrig-&gt;ca.pdod, pdrOrig-&gt;ca.cpFirst, ihcSplitH)
		&amp;&amp; !m_fProtection &amp;&amp; !vrf.fDoPopUp &amp;&amp; !vfDragSel &amp;&amp; !FReadingMode(m_psel-&gt;hwwd) &amp;&amp; !FMailRFM())
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="83AC9ED51DA0915605EEDCFF411AEBC2">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function OsfbtFromBinding() in osfomdata.cpp can crash the program by dereferencing a null pointer on line 92.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>osfomdata.cpp</FileName>
<FilePath>dev/word/client/desktop/osfomdata.cpp</FilePath>
<LineStart>92</LineStart>
<Snippet>		*pfFound = fFound;

	return fFound ? pob-&gt;Osfbt() : Osf::OsfBindingType::osfbtUnknown;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="A442D3A6F4A6B4FE3D9394E4FAD71072">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDisplay() in acetate.cpp can crash the program by dereferencing a null pointer on line 4815.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>acetate.cpp</FileName>
<FilePath>dev/word/client/desktop/acetate.cpp</FilePath>
<LineStart>4815</LineStart>
<Snippet>		{
		fSelected = fTrue;
		psel-&gt;fDrgSelected = fTrue; // so we know to inval when the selection changes
		}
		break;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="A26EA5DBD23658E353BCAE8F8568F45A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TrySelectingE2oAndDrawingElements() in wordgroupeditor.cpp can crash the program by dereferencing a null pointer on line 76.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>wordgroupeditor.cpp</FileName>
<FilePath>dev/word/core/wdoart/wordgroupeditor.cpp</FilePath>
<LineStart>76</LineStart>
<Snippet>
   if( FSelectableE2o( prE2o ) )
      pEsi-&gt;Select( prE2o );

   Ofc::TReferringPtr&lt; Dr::DrawingElement &gt; prDrawingElement;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="02DAEE3E0C7F2237FE95C1F0F4BF1218">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _AddDialogButton() in prompt.cpp can crash the program by dereferencing a null pointer on line 100.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>prompt.cpp</FileName>
<FilePath>dev/word/client/fastmodel/prompt.cpp</FilePath>
<LineStart>100</LineStart>
<Snippet>{
	WinRT::ComPtr&lt;MOX::IMsoDialogButtonInformation&gt; spButtonInfo;
	if (FAILED(MOX::UseDialogManager().CreateDialogButtonInformation(&amp;spButtonInfo)) || spButtonInfo == pNil)
		return;
	</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6543">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2029.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2029</LineStart>
<Snippet>		case irrbRguttersxn:
			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c00c /* tag_an2am */);
			((SEP *)pprop)-&gt;pginfo.dzaGutter = (uns)valUse;
			break;
		case irrbRlandscape:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="08577283D23C55276E9186EDE2DC9EAC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaHandlerProp() in obrange.cpp can crash the program by dereferencing a null pointer on line 11992.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>11992</LineStart>
<Snippet>			// Promote Chp/Lid changes to calculated fields
			if (fUpdateChpFtc) // Font was applied
				pchpGray-&gt;ftc = fNinch ? 0xFFFF : 0;
			if (fUpdateChpLid) // Lid was applied
				pchpGray-&gt;lid = fNinch ? 0xFFFF : 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F656E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 3380.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>3380</LineStart>
<Snippet>
		case irrbRdbch:
			((CHP *)pprop)-&gt;idct = idctFE;
			if (ppropGray)
				((CHP *)ppropGray)-&gt;idct = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="70E507E96D116CA8C266948950B3B988">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdMMEditAddressBlock() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 11334.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>11334</LineStart>
<Snippet>
		if (IwpmsFromDoc(pdod, iwpmsInfoType) != iwpmsNil) // not Mail Merge main pdod
			ppmf = LppmfFromLppmd(ppmd, ppmd-&gt;pms.ipmfFetch);

		if (ppmf &amp;&amp; (ifld = IfldSelCur ()) != ifldNil) // there's field data</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6505">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1290.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1290</LineStart>
<Snippet>		case irrbRabsh:
			// negative value means EXACTLY, pos, at least
			((PAP *)pprop)-&gt;wHeightAbs = abs(valUse);
			if (ppropGray)
				((PAP *)ppropGray)-&gt;wHeightAbs = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="3AA0E4F35C020DE9B4ADF30FC18A1B59">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IdruWherePt() in disp3.cpp can crash the program by dereferencing a null pointer on line 12135.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>12135</LineStart>
<Snippet>						/* exact hit on cell DR means we should restrict
							search for nearest DR in cell */
						if (pdru-&gt;dr.fCellDr &amp;&amp; !fReturnCellDr &amp;&amp; !FChildCellPcdri(pcdri))
							{
							itcCellExact = pdru-&gt;dr.itc;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="85761120E6AE1E21976B1B0FE1E39F52">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrGenericPutId() in obrange.cpp can crash the program by dereferencing a null pointer on line 15556.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>15556</LineStart>
<Snippet>				CopyRgxch(bstrId, rgwchId, SysStringLen(bstrId));
			}
		if (*prgwchId)
			MsoFreePv(*prgwchId);
		*prgwchId = rgwchId;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B6CFD10F22F25F7E087CB55DB3EE7D34">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function DebugNonGdiFillRect() in layer.cpp can crash the program by dereferencing a null pointer on line 1391.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>layer.cpp</FileName>
<FilePath>dev/word/client/shared/layer.cpp</FilePath>
<LineStart>1391</LineStart>
<Snippet>			pd2dtexture-&gt;EndDraw();
		else
			pvirtexture-&gt;EndDraw();
		}
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DAF777674EAB1BC3AFCFEFD3B6BD38D4">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrGetAmpiFromMpinfo() in cmd2.cpp can crash the program by dereferencing a null pointer on line 1790.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd2.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd2.cpp</FilePath>
<LineStart>1790</LineStart>
<Snippet>
	// get property xpath
	hr = pimxsl-&gt;HrCreateXPath(&amp;pampi-&gt;bstrXpath);
	if (FAILED(hr))
		goto LError;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DF20E40CB9E248C9AA505F43C41D2C1C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdEnvelopesLabels() in envelope.cpp can crash the program by dereferencing a null pointer on line 1047.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>envelope.cpp</FileName>
<FilePath>dev/word/client/desktop/envelope.cpp</FilePath>
<LineStart>1047</LineStart>
<Snippet>			
		if (cmdRet == cmdOK &amp;&amp; FValidPdodSlow(docMain) &amp;&amp; FMailMergeMainPdod(docMain) &amp;&amp; (LppmdFromPdod(docMain) != lpNil))
			LppmdFromPdod(docMain)-&gt;pms.rfs.fMainDocSetup = fTrue;

		// I'm counting on the action cab ALWAYS being cab index #1 if</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="0C236B698DBD1AECE3546E9428D6B9A1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FGetOfficeCenterGlobalDefaults() in options.cpp can crash the program by dereferencing a null pointer on line 6233.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>options.cpp</FileName>
<FilePath>dev/word/client/desktop/options.cpp</FilePath>
<LineStart>6233</LineStart>
<Snippet>				{
				// use the handle to vert ruler
				pcabGlobal-&gt;fVertRuler = pmwd-&gt;FVRulers();
				pcabGlobal-&gt;fWrapToWindow = (*hwwd)-&gt;fWrapToWwdSave;
				pcabGlobal-&gt;fFont = (*hwwd)-&gt;fDraftFontSave;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="A6503934EA696AD3C228A1432E918165">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrResuscitateOCX() in ocxclnt.cpp can crash the program by dereferencing a null pointer on line 5468.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ocxclnt.cpp</FileName>
<FilePath>dev/word/client/desktop/ocxclnt.cpp</FilePath>
<LineStart>5468</LineStart>
<Snippet>
			WriteOcxNameToStreamCore(IodtFromLpodt(lpodt), lpnewobj-&gt;bstrId, 
				SysStringLen(lpnewobj-&gt;bstrId));
			}
		else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="685B36E40010415DDD28AE90265F448B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdInsPicture() in pic2.cpp can crash the program by dereferencing a null pointer on line 951.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pic2.cpp</FileName>
<FilePath>dev/word/client/desktop/pic2.cpp</FilePath>
<LineStart>951</LineStart>
<Snippet>
			// Enabled in unprotected sections in form-protected docs
			if (FProtSect(psel-&gt;ca.pdod, psel-&gt;ca.cpFirst))
				return cmdDisabled;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F656D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 3373.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>3373</LineStart>
<Snippet>
		case irrbRhich:
			((CHP *)pprop)-&gt;idct = idctDefault;
			if (ppropGray)
				((CHP *)ppropGray)-&gt;idct = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6547">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2443.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2443</LineStart>
<Snippet>			if (rds != rdsPic)
				{
				pshd = &amp;(((CHP *)pprop)-&gt;shd);
				SetShdForIrrb(pshd, irrbProp, valUse, hribl);
				if (ppropGray)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="98F9B5E690EBA402048E8B38AF1AE8ED">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdMMGreetingLine() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 11463.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>11463</LineStart>
<Snippet>			AssertTag(ppmd != pNil, ASSERTTAG('jjah'));

			ppmf = LppmfFromLppmd(ppmd, ppmd-&gt;pms.ipmfFetch);
			if(ppmf-&gt;pIMsoMailMerge)
				hr = ppmf-&gt;pIMsoMailMerge-&gt;HrDoGreetingLineDlg(HwndParentDlg(vhwndApp), pNil);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="43B0C5324CBEC20F080BF858A600637C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FRefineRxvFromPxch() in rxv.cpp can crash the program by dereferencing a null pointer on line 363.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rxv.cpp</FileName>
<FilePath>dev/word/core/rxv.cpp</FilePath>
<LineStart>363</LineStart>
<Snippet>
			if (grfrxv &amp; frxvString)
				*pxchValue++ = *pxch;

			pxch++; </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6504">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1277.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1277</LineStart>
<Snippet>						GetPl((**hribl).hplCv, valUse, &amp;cvUl);
					}
				((CHP *)pprop)-&gt;cvUl = cvUl;
				}
			if (ppropGray)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64E2">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 743.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>743</LineStart>
<Snippet>			break;
		case irrbRtcjc:	// read logical table jc
			((TAP *)pprop)-&gt;jc = ((TAP *)pprop)-&gt;fBiDi ? InvertJc(valUse) : valUse;
			break;
		case irrbRsl:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="48C345AA9A1BB2B9C076FB6BC8EF88E3">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _FSetupPshFromCpi() in cpanel.cpp can crash the program by dereferencing a null pointer on line 326.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cpanel.cpp</FileName>
<FilePath>dev/word/client/desktop/cpanel.cpp</FilePath>
<LineStart>326</LineStart>
<Snippet>			{
			AssertTag(paabx, ASSERTTAG('cqhs'));
			if (paabx-&gt;chcabSht &gt; 0)
				{
				dnpsp[psp].hcab = paabx-&gt;rghcabSht[psp];</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6502">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1229.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1229</LineStart>
<Snippet>			break;
		case irrbRpnrestart:
			((PAP *)pprop)-&gt;anld.fRestartHdn = fTrue;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;anld.fRestartHdn = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F0607B8A84D2BA30713FC561B5DF0994">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function EidParseSqlWhereLxsz() in pmhcore.cpp can crash the program by dereferencing a null pointer on line 2493.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhcore.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhcore.cpp</FilePath>
<LineStart>2493</LineStart>
<Snippet>				if (CxchXst(LxstCompInfoRecSel(lprecsel)) == 0)
					{
					if (lprecsel-&gt;iCompOp == iCompOpEqu)
						lprecsel-&gt;iCompOp = iCompOpBlank;
					else if (lprecsel-&gt;iCompOp == iCompOpNEqu)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6501">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1224.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1224</LineStart>
<Snippet>			break;
		case irrbRpnhang:
			((PAP *)pprop)-&gt;anld.fHang = fTrue;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;anld.fHang = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4855574C0364F94FC19474F0542AD1E4">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FUpdatePrCore() in disp3.cpp can crash the program by dereferencing a null pointer on line 2277.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>2277</LineStart>
<Snippet>			if ((*hpr)-&gt;fNoDrawings)
				{
				pidm-&gt;FreeUpdate(&amp;dmub);
				fDmUpdate = fFalse;
				Debug(pidm = pNil;)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="FD0B386A997E01DE7D408CF2904CF7F2">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FReadOpic() in grutil.cpp can crash the program by dereferencing a null pointer on line 1680.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>grutil.cpp</FileName>
<FilePath>dev/word/core/grutil.cpp</FilePath>
<LineStart>1680</LineStart>
<Snippet>		{
		AssertTag(lpistgObj != lpNil, ASSERTTAG('dfzs'));
		OleMethodLp(lpistgObj, Release)();
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E2E85A37F6EAA2B1E24639EB8BF18E6F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function MBuildTextDrForGoodClient() in pagevw.cpp can crash the program by dereferencing a null pointer on line 3890.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pagevw.cpp</FileName>
<FilePath>dev/word/client/shared/pagevw.cpp</FilePath>
<LineStart>3890</LineStart>
<Snippet>		{
		if (ptxx-&gt;lrk == lrkAbsHit)
			pdr-&gt;lrk = lrkAbsHit;

		pdr-&gt;cpLim = max(ptxx-&gt;cpLim, pdr-&gt;cpLim);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="5B5EE3E7617C8710A69C246CA0DBADCB">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOamZoomPutPageFit() in obwindow.cpp can crash the program by dereferencing a null pointer on line 6138.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obwindow.cpp</FileName>
<FilePath>dev/word/client/desktop/obwindow.cpp</FilePath>
<LineStart>6138</LineStart>
<Snippet>			{
			// otherwise, just store the new scale factor and fit mode
			pwvs-&gt;pct = pctFit;
			pwvs-&gt;zk = l;
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6545">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2111.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2111</LineStart>
<Snippet>			break;
		case irrbRenforceprot:
			((DOP *)pprop)-&gt;fEnforceDocProt = !!valUse;
			break;
		case irrbRprotlevel:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64D7">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 415.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>415</LineStart>
<Snippet>	case rrbaFlag:
	case rrbaNotFlag:
		pprop[rrb.b] = (!fHaveVal) ? fTrue : (val != 0);
		if (ppropGray)
			ppropGray[rrb.b] = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="A10B0DEBE7C52253642CD8963BB995B8">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function InitNew() in ole2srvr.cpp can crash the program by dereferencing a null pointer on line 4585.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ole2srvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ole2srvr.cpp</FilePath>
<LineStart>4585</LineStart>
<Snippet>			{
			AssertTag(FDocfileFcb(pfcb), ASSERTTAG('5bjm'));
			if (!FDocfileFcb(pfcb))
				{
				hr = E_FAIL;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="718D561E0CEF562B8985FBE7CFB242EB">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FFillPictureContainer() in mso.cpp can crash the program by dereferencing a null pointer on line 440.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>mso.cpp</FileName>
<FilePath>dev/word/client/desktop/mso.cpp</FilePath>
<LineStart>440</LineStart>
<Snippet>			XCHAR xstz[ixchMaxXstz];

			tcr.pic-&gt;FSetLabel(XstzFromIds(idsMergeField, XstzCxch(xstz)));
			break;
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64EF">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1066.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1066</LineStart>
<Snippet>
		case irrbRpnlvl:  // Bullets and Numbering
			((PAP *)pprop)-&gt;ilfo = ilfoT3;
			((PAP *)pprop)-&gt;ilvl = IlvlFromNLvlAnm(valUse);
			((PAP *)pprop)-&gt;numrm.numrms.fNumRM = fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DB272FB7ECDAADE774B62691FE88B02D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ChsHlinkArtos() in oartHost.cpp can crash the program by dereferencing a null pointer on line 8316.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartHost.cpp</FileName>
<FilePath>dev/word/client/shared/oartHost.cpp</FilePath>
<LineStart>8316</LineStart>
<Snippet>		AssertTag(chs == chsOne, 0x003c85d0 /* tag_apixq */);
		AssertTag(phlink != pNil, 0x003c85d1 /* tag_apixr */);
		if ((ppxszScreenTip != pNil) &amp;&amp; !phlink-&gt;GetTooltip().FEmpty())
			*ppxszScreenTip = const_cast&lt;XCHAR *&gt;(
				static_cast&lt;const XCHAR *&gt;(phlink-&gt;GetTooltip()));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="CEF49B5DFFBE37866C307E1017E776C4">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _GetDropType() in drop.cpp can crash the program by dereferencing a null pointer on line 400.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>drop.cpp</FileName>
<FilePath>dev/word/client/desktop/drop.cpp</FilePath>
<LineStart>400</LineStart>
<Snippet>			else if (formatetc.cfFormat == cfFileGroupDesc)
				{
				lpFileDescriptor = &amp;(lpFileGroupDescriptor-&gt;fgd[i]);
				CopyXsz(lpFileDescriptor-&gt;cFileName, xszName, cbMaxFile - 1);
				if (!fCfFileContents &amp;&amp;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="7A734F0B4083A2C37108A3096CF4DF5A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FcrCalcFltInclude() in fieldspc.cpp can crash the program by dereferencing a null pointer on line 1863.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldspc.cpp</FileName>
<FilePath>dev/word/client/desktop/fieldspc.cpp</FilePath>
<LineStart>1863</LineStart>
<Snippet>		CacheSect(doc, cpInst);
 		if (caSect.cpFirst == cpInst &amp;&amp; FNoHeadersDocCp(doc, cpInst))
			ca.pdod-&gt;fForceReplHidn = fTrue;
		}
	</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="995EABC399A73C5BBA0971D3B0CD6C38">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrSetDocumentOptions() in pmhclient.cpp can crash the program by dereferencing a null pointer on line 259.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhclient.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhclient.cpp</FilePath>
<LineStart>259</LineStart>
<Snippet>		{
		lppmd = LppmdFromPdod(pdodMain);
		lppmd-&gt;pms.rfs.fMainDocSetup = fTrue;
		return S_OK;
		}		</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F0607B8A84D2BA30713FC561B5DF0995">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function EidParseSqlWhereLxsz() in pmhcore.cpp can crash the program by dereferencing a null pointer on line 2512.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhcore.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhcore.cpp</FilePath>
<LineStart>2512</LineStart>
<Snippet>					&amp;&amp; (idsl = IdslPrefixLxszStt(&amp;lpxch, _sttLookupSqlCond)) != idslNil)
					{
					lprecsel-&gt;fCompOr = idsl;
					}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C3A14FC810A5B54A66D908AAC7E731CA">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PdodOpenDot() in openclient.cpp can crash the program by dereferencing a null pointer on line 400.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>openclient.cpp</FileName>
<FilePath>dev/word/client/desktop/openclient.cpp</FilePath>
<LineStart>400</LineStart>
<Snippet>		return pdodNil;
		}
	else  if (!doc-&gt;fDot)
		/*  dot opened not really a dot (could also have been doc) */
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="73D8F9F18AC0F4A4B9A8DAEE463291F1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BpscBulletProofBmk() in blltprf.cpp can crash the program by dereferencing a null pointer on line 4941.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>blltprf.cpp</FileName>
<FilePath>dev/word/client/desktop/blltprf.cpp</FilePath>
<LineStart>4941</LineStart>
<Snippet>
				pbkf-&gt;ibkl = ibkl;
				pbkl-&gt;ibkf = ibkf;
				}
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="0C4BFB65E4DAF50CE1A7AEAEB8D1073D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FShowDataMainDoc() in pmhrender.cpp can crash the program by dereferencing a null pointer on line 36.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhrender.cpp</FileName>
<FilePath>dev/word/core/pmhrender.cpp</FilePath>
<LineStart>36</LineStart>
<Snippet>
	// T3 BUG 10158: Avoid doing the GetIfldFlcd
	if (vrf.fActiveMailMerge || LppmdFromPdod(docMain)-&gt;pms.rfs.fShowData)
		return fTrue;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="EAC569D8C2E8F3F558E648A104502FC3">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function NormCp() in disp3.cpp can crash the program by dereferencing a null pointer on line 5147.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>5147</LineStart>
<Snippet>				the DR as the bottom of the dl. */

			if (!fPageView &amp;&amp; (*hpldr)-&gt;hpldrBack != hNil &amp;&amp;
				dl == IMacPlc(pdr-&gt;hplcedl) - 1)
				{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="79EA02646F663E86A43EA45F1928DDD1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FixupRgtplForBullets() in numdlg.cpp can crash the program by dereferencing a null pointer on line 3634.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>numdlg.cpp</FileName>
<FilePath>dev/word/client/shared/numdlg.cpp</FilePath>
<LineStart>3634</LineStart>
<Snippet>			while (PtplEnum(flgpdBulletGallery, &amp;ptpl) != pNil)
				{
		 		ptpl-&gt;iApplyTo = (FBulletsNumberingWord11() || !fWholeList) ? iApplyToSelection : iApplyToWholeList;
	 			ptpl-&gt;fContinue = fFalse;
 				AssertTag(!fCarefulHybridBulletRemap, 0x004887c1 /* tag_asi5b */);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64E8">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 821.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>821</LineStart>
<Snippet>
		case irrbRtblind:
			((TAP *)pprop)-&gt;wWidthIndent = valUse;
			break;
		case irrbRtblindtype:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="BE1A2857D0908455EE4A577A559F4E30">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdTatenakayoko() in cmd3.cpp can crash the program by dereferencing a null pointer on line 4977.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>4977</LineStart>
<Snippet>			if (!FBeginUndo(uatAutoTracking, fciFormatTatenakayoko))
				return cmdError;
			if (pcefels-&gt;fels.fTNY &amp;&amp; pcefels-&gt;fels.fTNYCompress &amp;&amp; pcefels-&gt;hwwd)
				{
				CP cpT;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="2B8B83DDF70A6AF27F70B8C4279B4122">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FWriteXmlHeaders() in xmlpage.cpp can crash the program by dereferencing a null pointer on line 198.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmlpage.cpp</FileName>
<FilePath>dev/word/core/xmlpage.cpp</FilePath>
<LineStart>198</LineStart>
<Snippet>				{
				fRet = FAddAttribute(PxatrPxot(pxot), xmltkaWtype, XmltkavWHdrTypeFromIhdtMetro(fHeader, ihdt), xnswordDoc)
					&amp;&amp; FAddAttributeStringVal(PxatrPxot(pxot), xmltkaRrelId, pmop-&gt;PmoprCurrent()-&gt;pxszParentRelId, xnsOfficeRels)
					&amp;&amp; FPopXto(pxot, XtidEmitXmlOpenTag(pxot, fHeader ? xmltkWheaderReference : xmltkWfooterReference, xnswordDoc));
				}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6557">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2583.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2583</LineStart>
<Snippet>			/* dxaAbs is biased by 1 internally */
			/* avoid special values */
			((PAP *)pprop)-&gt;dxaAbs = DxaAbsBumpDxaAbs(valUse + 1);
			if (ppropGray)
				((PAP *)ppropGray)-&gt;dxaAbs = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="BD200D9AF044405DA9FDEB7CE8ED14A0">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaHandlerProp() in obrange.cpp can crash the program by dereferencing a null pointer on line 11954.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>11954</LineStart>
<Snippet>						{
						AssertTag(FtcFromChp(pchp, iftcAscii) == val || FtcFromChp(pchp, iftcFE) == val || FtcFromChp(pchp, iftcOther) == val, ASSERTTAG('dqgp'));
						pchp-&gt;ftc = val;
						}
					else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="CA1FA150FA205339CEACE0E4384F40F5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdRuby() in cmd3.cpp can crash the program by dereferencing a null pointer on line 3291.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>3291</LineStart>
<Snippet>			return cmdError;
		pcmb-&gt;pv = pceruby;
		pcab-&gt;pceruby = pceruby;
		ClearBytes(pceruby, sizeof(CERUBY));
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B188C051077D820729895EFBE8A12F0">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FInitCeenvlabel() in envelope.cpp can crash the program by dereferencing a null pointer on line 408.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>envelope.cpp</FileName>
<FilePath>dev/word/client/desktop/envelope.cpp</FilePath>
<LineStart>408</LineStart>
<Snippet>	// Is it a mail merge main document of type envelope?
	if (docMain != pdodNil &amp;&amp; FMailMergeMainPdod(docMain) &amp;&amp;
		FMask(LppmdFromPdod(docMain)-&gt;pms.wpmsdt, wpmsdtEnvelope | wpmsdtLabels))
		{
		if ((HCAB)hcab != hcabNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="31005C3AED1F3E0E485F4AB6802739FA">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdMMEditGreetingLine() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 11516.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>11516</LineStart>
<Snippet>
		if (IwpmsFromDoc(pdod, iwpmsInfoType) != iwpmsNil) // not Mail Merge main pdod
			ppmf = LppmfFromLppmd(ppmd, ppmd-&gt;pms.ipmfFetch);

		if (ppmf &amp;&amp; (ifld = IfldSelCur ()) != ifldNil) // there's field data</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B4257427C3A9FE376EE2E88626F92384">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HplhtdsReadToolbars() in cdsfile.cpp can crash the program by dereferencing a null pointer on line 766.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cdsfile.cpp</FileName>
<FilePath>dev/word/core/cdsfile.cpp</FilePath>
<LineStart>766</LineStart>
<Snippet>		if (tdsh.tbid == msotbidNil &amp;&amp; FWordClient())
			{
			(*htds)-&gt;tbs.grfTbs = 0;			// Clear it.

			// Setting this to topToolbar allows us to find entries</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C9E0251273696E084633B6F802100C51">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FEvalSelCur() in fltexp.cpp can crash the program by dereferencing a null pointer on line 328.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fltexp.cpp</FileName>
<FilePath>dev/word/client/desktop/fltexp.cpp</FilePath>
<LineStart>328</LineStart>
<Snippet>
		if (selCur.fBlock)
			DisposeBlock(&amp;pfiblk-&gt;bks);
			
		FreePhhac(&amp;feb.hhac);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="89452EFBB59F4D8360711CBAA2A45160">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDlgFaxOpts() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 5731.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>5731</LineStart>
<Snippet>				// Make sure Fax Addr is in the list of mergefields
				xstz[0] = CchGetTmcText(tmcFaxRecip, xstz + 1, CxchMaxXstz(xstz));
				if (!FSearchSttbUnsortedNcXst(lppmd-&gt;hsttbMergeFields, xstz, &amp;ibst))
					{
					ErrorEidMrtTag(eidNoMailAddress, &quot;FDlgFaxOpts&quot;, MsoReserveTag(0x005847db /* tag_awe51 */)); </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="7FE496F20AA1EDB627134824D78510A1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _DrawSdtOrigCharCpElegent() in formatsp.cpp can crash the program by dereferencing a null pointer on line 2188.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>formatsp.cpp</FileName>
<FilePath>dev/word/core/formatsp.cpp</FilePath>
<LineStart>2188</LineStart>
<Snippet>		for (i=1; i&lt;cPntAux; i++)
			{
			pt = rgPntAux[i-1];
			AddPtUV(&amp;pt, rgPntAux[i].x, rgPntAux[i].y, lstflow);
			rgPntAux[i] = pt;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="1EB82C8C5698E441A9C940D430EA313E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdMMFieldMapping() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 11227.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>11227</LineStart>
<Snippet>			AssertTag(ppmd != pNil, ASSERTTAG('jgho'));

			ppmf = LppmfFromLppmd(ppmd, ppmd-&gt;pms.ipmfFetch);
			if(ppmf-&gt;pIMsoMailMerge)
				hr = ppmf-&gt;pIMsoMailMerge-&gt;HrDoFieldMappingDlg(HwndParentDlg(vhwndApp), eMMFieldAddressField, NULL);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B96AF731CB7E2C9AA33FB2AF18F11A2">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TSplScanCore() in spell.cpp can crash the program by dereferencing a null pointer on line 3164.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>3164</LineStart>
<Snippet>				// If trailing Hyphens
				if (!fRemoveTrailingHyphen &amp;&amp; pspsc-&gt;apSrb.sstat != AppLevelProofing::sstatRepeatWord &amp;&amp;
						pspld-&gt;apSib.pwsz[pspld-&gt;apSib.cch - 1] == xchHyphen)
					{
					// look up the word without the trailing hyphen</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="8D7D04A08F5067FA2C1CA29E74E84E2E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDlgPMSetup() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 881.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>881</LineStart>
<Snippet>									IDBTN idb;

									if (lppmd-&gt;pms.wpmsdt &amp; (wpmsdtEnvelope | wpmsdtLabels))
										{
										iMB = iMBPMHSetupMain;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="2D4A717DCBA3B488B2653EFB63B150BF">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdFixSpelling() in spell.cpp can crash the program by dereferencing a null pointer on line 10305.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>10305</LineStart>
<Snippet>		MsoSqmIncrementOne(DATAID_WORDSPELLINGADDTODICTIONARY);
		if (!pcmb-&gt;fRedo &amp;&amp; fciFixSpellingAdd == pcmb-&gt;fci)
			SpellerSqmEventStreamCore(SqmsectFromTmcOrFci(pcmb-&gt;fci), pspsc-&gt;lidTestWord, pspsc);

		// If the spelling session is not available, just do nothing</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F8FB262541D990139A2DE46A349B6F83">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function EidWritePistmHtmlCore() in htmlout.cpp can crash the program by dereferencing a null pointer on line 8570.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlout.cpp</FileName>
<FilePath>dev/word/core/htmlout.cpp</FilePath>
<LineStart>8570</LineStart>
<Snippet>
_LErrRet:
	if (!fRet &amp;&amp; FBkgndSavePdod(doc) &amp;&amp; PbsiCur()-&gt;pdod == doc)
		{
		// We need to synchronise pdod-&gt;fn and pdod-&gt;pud-&gt;pioldoc if we've been doing SaveAs.</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E936DEA3609C939A6523C11530054A33">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaFormatBorder() in obrange.cpp can crash the program by dereferencing a null pointer on line 18522.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>18522</LineStart>
<Snippet>			{
		default:
			rgwopr[cwopr].elk = rgelk2[1][pobb-&gt;ibrc];	//style
			break;
		case wpropArtWeight:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="80115FF68C53EFBB50E79444726B19D3">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdEnvelopesLabels() in envelope.cpp can crash the program by dereferencing a null pointer on line 1027.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>envelope.cpp</FileName>
<FilePath>dev/word/client/desktop/envelope.cpp</FilePath>
<LineStart>1027</LineStart>
<Snippet>		// BLOCK: set prheur bits from cab persistent
		if (GrfHeurDiffs(hceenvlabel, fFalse /* fInternal */))
			WriteEnvelopeHeuristics(&amp;(*hceenvlabel)-&gt;prheur, (*hceenvlabel)-&gt;dmBinEnv);

		AssertImpliesTag(!FEmptyXsz(vpri.rglszpp.lxszPrinter), vpri.prHeur.fEnvFaceDown == !(*hcab)-&gt;fDefaultFaceUp, ASSERTTAG('daug'));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="FF483E52F9E13AB94F3717E0D277FCF3">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CchGetSourceDisplayNameIodt() in odtcore.cpp can crash the program by dereferencing a null pointer on line 1131.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>odtcore.cpp</FileName>
<FilePath>dev/word/client/win32/odtcore.cpp</FilePath>
<LineStart>1131</LineStart>
<Snippet>	if (hr != NOERROR)
		LogHrAndReturnVal(hr, GetSourceDisplayNameIodt, 0);
	hr = OleMethodLp(lpolelink, GetSourceDisplayName)( &amp;pxszT);

	cch = CchXsz(pxszT);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="626384FA8B536FAF93466961A0271F6C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaHandlerProp() in obrange.cpp can crash the program by dereferencing a null pointer on line 11996.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>11996</LineStart>
<Snippet>				pchpGray-&gt;lid = fNinch ? 0xFFFF : 0;

			if (pfont-&gt;fRef  &amp;&amp;  pfont-&gt;pfnOnChange)
				{
				// notify owner of referenced pchp and pchpGray of a change</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4A48833B7A7E51BB0DD4DD71EB7D6053">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcDoControlPanel() in cpanel.cpp can crash the program by dereferencing a null pointer on line 408.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cpanel.cpp</FileName>
<FilePath>dev/word/client/desktop/cpanel.cpp</FilePath>
<LineStart>408</LineStart>
<Snippet>		AABX *paabx = PaabxCur();
		AssertTag(paabx, ASSERTTAG('iybc'));
		if (paabx-&gt;chcabSht &gt; 0)
			psh.grfps |= fpsEpspHasHcab;
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6535">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1888.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1888</LineStart>
<Snippet>			break;
		case irrbRaftnrestart:
			((DOP *)pprop)-&gt;rncEdn = valUse;
			break;
		case irrbRhyphpar:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="5C09DDFFEC454645E02A030AE5C75F5F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2038.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2038</LineStart>
<Snippet>			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c00e /* tag_an2ao */);
			AssertTag (rrb.pgc == pgcDopSep, 0x0035c00f /* tag_an2ap */);
			pdopsep-&gt;xaPage = psep-&gt;pginfo.xaPage = (uns)valUse;
			break;
		case irrbRpaperh:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6511">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1657.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1657</LineStart>
<Snippet>			break;
		case irrbRchhres:
			((CHP *)pprop)-&gt;hresi.chHres = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="57523E7FA42901572DE5C8DED677A0F5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function LpnewobjAlloc() in ocxcore.cpp can crash the program by dereferencing a null pointer on line 553.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ocxcore.cpp</FileName>
<FilePath>dev/word/core/ocxcore.cpp</FilePath>
<LineStart>553</LineStart>
<Snippet>		if ((lpnewobj = (LPNEWOBJ) PvAllocCb(cbNEWOBJ)) == lpNil)
			return lpNil;
		lpnewobjT-&gt;lpnewobjNext = lpnewobj;
#ifdef DEBUG
		lpnewobj-&gt;fInUse = fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="BC9AE7C0499EC6348504730415D3B770">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FEvalFieldCondition() in fieldclc.cpp can crash the program by dereferencing a null pointer on line 6763.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldclc.cpp</FileName>
<FilePath>dev/word/core/fieldclc.cpp</FilePath>
<LineStart>6763</LineStart>
<Snippet> 				{  /* single char wildcard -- say it matches */
				}
			else  if (FAssign(wCompare = WCompXchXch (*pxch1, *pxch2)))
				goto LCompareDone;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6569">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 3007.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>3007</LineStart>
<Snippet>		case irrbRpgnhn:
			if (valUse &gt;= iHeadingNone &amp;&amp; valUse &lt; iHeadingMax)
				((SEP *)pprop)-&gt;iHeadingPgn = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F651B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1712.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1712</LineStart>
<Snippet>
		case irrbRdonotembedsysfont:
			((DOP *)pprop)-&gt;fDoNotEmbedSystemFont = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="82F564B3F7A5629506924F792DB03CE5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDisplay() in oartDisp.cpp can crash the program by dereferencing a null pointer on line 1604.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartDisp.cpp</FileName>
<FilePath>dev/word/client/shared/oartDisp.cpp</FilePath>
<LineStart>1604</LineStart>
<Snippet>
		if (pTarget != pNil &amp;&amp; !transformRenderTargetRestore.IsIdentity())
			pD2D1RenderTarget-&gt;SetTransform(transformRenderTargetRestore);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="6A89CB44C04DD3B465D5E3AB28022FF9">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcTabs() in tabs.cpp can crash the program by dereferencing a null pointer on line 255.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>tabs.cpp</FileName>
<FilePath>dev/word/client/desktop/tabs.cpp</FilePath>
<LineStart>255</LineStart>
<Snippet>	if (pcmb-&gt;fCheck)
		{
		if (!lptdsd-&gt;fValid &amp;&amp; !FInitTdsd(pcmb))
			_TbdFar(lptdsd-&gt;tbdCur).jc = jcLeft;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E72722336239FCAB53597DB02B13F3F0">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrViewFieldCodes() in pmhclient.cpp can crash the program by dereferencing a null pointer on line 1349.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhclient.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhclient.cpp</FilePath>
<LineStart>1349</LineStart>
<Snippet>			PPMD ppmd = LppmdFromPdod(pdod);
			
			if (ppmd-&gt;pms.rfs.fShowData != fShow)
				{
				ppmd-&gt;pms.rfs.fShowData = fShow;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C21C7D6DFBD57539829E0F18A105AADE">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _FInitializeVars() in medtok.cpp can crash the program by dereferencing a null pointer on line 3343.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>medtok.cpp</FileName>
<FilePath>dev/word/client/desktop/medtok.cpp</FilePath>
<LineStart>3343</LineStart>
<Snippet>			{
			AssertTag(pdfi != pNil, ASSERTTAG('dmpm'));
			if (!pdfi-&gt;fInitialized &amp;&amp; pdfi-&gt;skScalar == skLocal &amp;&amp; pdfi-&gt;fci != fciNil)
				{
				*pfci = pdfi-&gt;fci;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="8E23C1C7E4502B07BD8CE11AE33771FF">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XmlTransformIdle() in xmlschema.cpp can crash the program by dereferencing a null pointer on line 14060.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmlschema.cpp</FileName>
<FilePath>dev/word/client/desktop/xmlschema.cpp</FilePath>
<LineStart>14060</LineStart>
<Snippet>				&amp;&amp; !FCanReloadThroughTransform(pdod))
				{
				pitb-&gt;FDestroyWPControl(msotbidPaneTransform);
				MntrCheckIfInval();
				}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F653A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1917.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1917</LineStart>
<Snippet>			if (val &gt; icolMax)
				val = icolMax;
			*(short *)(pprop + rrb.b) = (val &gt; 0 ? val - 1 : 0);
			break; 
		case irrbRlinestarts:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6548">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2458.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2458</LineStart>
<Snippet>			if (rds != rdsPic)
				{
				pshd = &amp;(((PAP *)pprop)-&gt;shd);
				SetShdForIrrb(pshd, irrbProp, valUse, hribl);
				if (ppropGray)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B96AF731CB7E2C9AA33FB2AF18F119F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TSplScanCore() in spell.cpp can crash the program by dereferencing a null pointer on line 3106.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>3106</LineStart>
<Snippet>							}
						if (FCpInHyperlinkField(pdodScan, pspsc-&gt;cpFirstTest)
								|| MsoFRecognizedURI(pspld-&gt;xszInput))
							{	
							// URLs</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="83AA47453FDC6285CA1A5D64898A0191">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FWriteSdtSpanClose() in htmlout.cpp can crash the program by dereferencing a null pointer on line 1337.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlout.cpp</FileName>
<FilePath>dev/word/core/htmlout.cpp</FilePath>
<LineStart>1337</LineStart>
<Snippet>		if (pwhcd != pNil)
			{
			if (pwhcd-&gt;fSdtParent)
				break;
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6536">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1891.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1891</LineStart>
<Snippet>			break;
		case irrbRhyphpar:
			((PAP *)pprop)-&gt;fNoAutoHyph = !valUse;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;fNoAutoHyph = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4D7CF663B5B694175A04E257BA750F89">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FUpdatePrCore() in disp3.cpp can crash the program by dereferencing a null pointer on line 2658.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>2658</LineStart>
<Snippet>
					AssertTag(nSaveDCClip == 0, 0x002a30c0 /* tag_ak9da */); /* We just drew a DR. */
					if (nSaveDCClip == 0 &amp;&amp; !(*fudb.hwwd)-&gt;pwrt-&gt;FEnablePageElementLayers())
						{
						RC rcwClip;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="777DBCF9D5F2401C755DAA73E6656D8D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdNextMisspelling() in spell.cpp can crash the program by dereferencing a null pointer on line 9051.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>9051</LineStart>
<Snippet>			// Execute the Select Proofing command
			AssertTag(fProofingPane || pptfs-&gt;pptsc, 0x00509380 /* tag_aujoa */);
			if (fProofingPane || selCur.ca.pdod == pptfs-&gt;pptsc-&gt;pdodScan)
				return (CmdSelectProofing(fciToolsProofing, fFalse, fFalse /*fFromPopup*/));
			else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="253D2F490C0AD9D815A544120180B77C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrDoTransition() in secureReaderHost.cpp can crash the program by dereferencing a null pointer on line 1189.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>secureReaderHost.cpp</FileName>
<FilePath>dev/word/client/desktop/secureReaderHost.cpp</FilePath>
<LineStart>1189</LineStart>
<Snippet>			argsT.hwndNewDoc = pmwdNew-&gt;Hwnd();
			argsT.fDelayEndTransaction = (osrvtr == osrvtrPrint);
			argsT.pioldocNew = pdodNew-&gt;pud-&gt;pioldoc;
			argsT.fShowDoc = fTrue;
			if (SUCCEEDED(HrOamGetWindowVisible(pmwdOld, &amp;vfVisible)))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="28C15903A4D90724B2170800EA889B08">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _EidSaveFile() in savebin.cpp can crash the program by dereferencing a null pointer on line 6240.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>savebin.cpp</FileName>
<FilePath>dev/word/core/savebin.cpp</FilePath>
<LineStart>6240</LineStart>
<Snippet>			goto LQuit;

		pfcb-&gt;cRef++;
		fnDest = fn;
		pfcb-&gt;fTemp = fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="75F86C7A0ED6956C7FF703AD41CF8EF5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdMMInsertFields() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 11860.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>11860</LineStart>
<Snippet>			AssertTag(ppmd != pNil, ASSERTTAG('jghr'));

			ppmf = LppmfFromLppmd(ppmd, ppmd-&gt;pms.ipmfFetch);
			if(ppmf-&gt;pIMsoMailMerge)
				hr = ppmf-&gt;pIMsoMailMerge-&gt;HrDoInsertFieldsDlg(HwndParentDlg(vhwndApp), fFalse);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="A9C96CE403DF297D066B9954637C658C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FLCRenameMcr() in library.cpp can crash the program by dereferencing a null pointer on line 3081.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>library.cpp</FileName>
<FilePath>dev/word/client/desktop/library.cpp</FilePath>
<LineStart>3081</LineStart>
<Snippet>			&amp;pVbaProjItemCol)))
			{
			if (SUCCEEDED(pVbaProjItemCol-&gt;GetProjItemOfName(
				pvchOld, &amp;pVbaProjItem)))
				{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="1A9CA080AE2C7B58E809FEB523E7C5FE">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrMergeCoverPageDataStore() in docmrg.cpp can crash the program by dereferencing a null pointer on line 350.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>docmrg.cpp</FileName>
<FilePath>dev/word/client/desktop/docmrg.cpp</FilePath>
<LineStart>350</LineStart>
<Snippet>_LError:
	for (long l = 0; l &lt; lCount; l++)
		SafeRelease(ppimxslChildren[l]);
	SafeDeleteArray(ppimxslChildren);
	SafeRelease(pimxsl);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F655C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2614.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2614</LineStart>
<Snippet>			/* values &gt; 0 are biased by 1 internally */
			/* avoid special values */
			((TAP *)pprop)-&gt;dyaAbs = DyaAbsBumpDyaAbs(valUse + 1);
			if (ppropGray)
				((TAP *)ppropGray)-&gt;dyaAbs = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E3076A44BA97C2086B44684424A9BC4F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdHyphenate() in dlghyph.cpp can crash the program by dereferencing a null pointer on line 286.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlghyph.cpp</FileName>
<FilePath>dev/word/client/desktop/dlghyph.cpp</FilePath>
<LineStart>286</LineStart>
<Snippet>			pcab = (CABHYPHEN *)*pcmb-&gt;hcab;

			if (pdop-&gt;fAutoHyphen != pcab-&gt;fAutoHyphenation &amp;&amp; pcab-&gt;fAutoHyphenation)
				MsoSqmIncrementOne(DATAID_WORDHYPHENATIONAUTOHYPHENATEDOC);
			</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F652A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1847.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1847</LineStart>
<Snippet>			break;
		case irrbRKerning:
			((CHP *)pprop)-&gt;hpsKern = valUse;
			if (ppropGray)
				((CHP *)ppropGray)-&gt;hpsKern = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="BE1A2857D0908455EE4A577A559F4E2E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdTatenakayoko() in cmd3.cpp can crash the program by dereferencing a null pointer on line 4910.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>4910</LineStart>
<Snippet>	if (pcmb-&gt;fDefaults)
		{
		FSetupFEObj(psel, &amp;pcefels-&gt;ca, &amp;pcefels-&gt;cpSave, itypTNY);
		if (DcpCa(&amp;pcefels-&gt;ca) == 0)
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D9A9AA51875411F85E1C8A10DECC6A30">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FMergePlrsid() in rsid.cpp can crash the program by dereferencing a null pointer on line 579.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rsid.cpp</FileName>
<FilePath>dev/word/core/rsid.cpp</FilePath>
<LineStart>579</LineStart>
<Snippet>				// Take next RSID from source B
				if (fAddToUpdate)
					*prsidWriteUpdate-- = *prsidReadB;
				*prsidWrite-- = *prsidReadB--;
				}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="AECC9C97F19440D4B7BE095E52382621">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function DocFromXstCoreGdso() in docname.cpp can crash the program by dereferencing a null pointer on line 81.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>docname.cpp</FileName>
<FilePath>dev/word/client/desktop/docname.cpp</FilePath>
<LineStart>81</LineStart>
<Snippet>
				// start looking after this pdod
				while (pbsi-&gt;pdod != pdod)
					pbsi = pbsi-&gt;pbsiNext;
				AssertTag(pbsi != pNil, ASSERTTAG('cvwv'));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64DE">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 722.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>722</LineStart>
<Snippet>			
		case irrbRlin:	// logical left indent, 9 style
			((PAP *)pprop)-&gt;dxaLeft = valUse;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;dxaLeft = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C91CB5536B6FDAF37AEB379E9AFA787A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function UpdateDsi() in print.cpp can crash the program by dereferencing a null pointer on line 1334.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>print.cpp</FileName>
<FilePath>dev/word/core/print.cpp</FilePath>
<LineStart>1334</LineStart>
<Snippet>					}

				if (pchps-&gt;idct == idctFE)
					{
					AssertTag(*pxch &gt; 0x80, ASSERTTAG('irfm'));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="AC632AF6604C75993B73A31DD951330A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FEmbedFileContents() in olesubs2.cpp can crash the program by dereferencing a null pointer on line 5958.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>olesubs2.cpp</FileName>
<FilePath>dev/word/client/desktop/olesubs2.cpp</FilePath>
<LineStart>5958</LineStart>
<Snippet>			{
			// Get any file inforamation for this item
			lpFileDescriptorA = &amp;(lpFileGroupDescriptorA-&gt;fgd[iItem]);
			SzToXstz(lpFileDescriptorA-&gt;cFileName, xstzObjName, cbMaxStz - cchExtraXstz, CP_SYSTEM);
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E3F97948F6DDD293CCA58722559F0F97">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TrackSplitBar() in splitter.cpp can crash the program by dereferencing a null pointer on line 260.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>splitter.cpp</FileName>
<FilePath>dev/word/client/desktop/splitter.cpp</FilePath>
<LineStart>260</LineStart>
<Snippet>	if (hwndSpb &amp;&amp; FAssign(pmfr = PmfrFromHwndSplitBar(hwndSpb)))
		{
		MFS *pmfsParent = pmfr-&gt;pmfsParent;
		if (pmfsParent &amp;&amp; pmfsParent-&gt;pfsr &amp;&amp; 
				FNeRc(&amp;pmwd-&gt;PmfsRoot()-&gt;rcLast, &amp;rcMwd))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="FE0953ADB875A4C7D5EFFACEC2756426">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TrackSplitBar() in splitter.cpp can crash the program by dereferencing a null pointer on line 350.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>splitter.cpp</FileName>
<FilePath>dev/word/client/desktop/splitter.cpp</FilePath>
<LineStart>350</LineStart>
<Snippet>
		dzpTot = DzOfRc(&amp;rcDoc, fHSplit);
		if (FReadingMode(pmwd-&gt;HwwdActive()) &amp;&amp; HwwdThumbnail(pmwd-&gt;HwwdActive()) != hwwdNil)
			dzpTot = dzpTot * 2 / 3;
		dzpMin = DzpMinWwdPaneSize(pmwd, fHSplit);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64FD">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1204.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1204</LineStart>
<Snippet>			break;
		case irrbRpnindent:
			((PAP *)pprop)-&gt;anld.dxaIndent = valUse;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;anld.dxaIndent = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F67A919FF5BF9E2D058830AC4A9ACC14">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrDispatchWTablePosition() in xmltbl.cpp can crash the program by dereferencing a null pointer on line 4555.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmltbl.cpp</FileName>
<FilePath>dev/word/core/xmltbl.cpp</FilePath>
<LineStart>4555</LineStart>
<Snippet>
	hr = HrTranslateTableAttributeLong(pxin, pxtd, pAttr, 
			xmltkaWTablePositionX, offset(TAP, dxaAbs));

	if (FAILED(hr))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="5C09DDFFEC454645E02A030AE5C75F62">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2053.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2053</LineStart>
<Snippet>			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c014 /* tag_an2au */);
			AssertTag (rrb.pgc == pgcDopSep, 0x0035c015 /* tag_an2av */);
			pdopsep-&gt;dxaLeft = psep-&gt;pginfo.dxaLeft = (uns)valUse;
			break;
		case irrbRmargr: </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="174D3E4E88AB8A4D1827C0184AC3B924">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FUpdateCeenvlabelFromDwpgsProdID() in label.cpp can crash the program by dereferencing a null pointer on line 3686.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>label.cpp</FileName>
<FilePath>dev/word/client/desktop/label.cpp</FilePath>
<LineStart>3686</LineStart>
<Snippet>		}; 

	if (FAILED(pipgsv-&gt;HrLoadProducts(pNil, fTrue)))
		goto LFail;
	</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="79EA02646F663E86A43EA45F1928DDD2">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FixupRgtplForBullets() in numdlg.cpp can crash the program by dereferencing a null pointer on line 3646.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>numdlg.cpp</FileName>
<FilePath>dev/word/client/shared/numdlg.cpp</FilePath>
<LineStart>3646</LineStart>
<Snippet>		ptpl = pNil;
		while (PtplEnum(grflgpd, &amp;ptpl) != pNil)
			ptpl-&gt;fCurrentList = fCurrentList;
		} /* else !(fBullet) */
} /* FixupRgtplForBullets() */</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6540">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2017.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2017</LineStart>
<Snippet>		case irrbRmargrsxn:
			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c009 /* tag_an2aj */);
			((SEP *)pprop)-&gt;pginfo.dxaRight = (uns)valUse;
			break;
		case irrbRmargtsxn:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F654E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2524.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2524</LineStart>
<Snippet>
		case irrbRpcVert:
			((PAP *)pprop)-&gt;pcVert = valUse;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;pcVert = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F67A919FF5BF9E2D058830AC4A9ACC15">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrDispatchWTablePosition() in xmltbl.cpp can crash the program by dereferencing a null pointer on line 4561.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmltbl.cpp</FileName>
<FilePath>dev/word/core/xmltbl.cpp</FilePath>
<LineStart>4561</LineStart>
<Snippet>
	hr = HrTranslateTableAttributeLong(pxin, pxtd, pAttr, 
			xmltkaWTablePositionY, offset(TAP, dyaAbs));

	if (FAILED(hr))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="80115FF68C53EFBB50E79444726B19D2">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdEnvelopesLabels() in envelope.cpp can crash the program by dereferencing a null pointer on line 1009.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>envelope.cpp</FileName>
<FilePath>dev/word/client/desktop/envelope.cpp</FilePath>
<LineStart>1009</LineStart>
<Snippet>					(*hcab)-&gt;fPgPrn = !ppgsprod-&gt;fDotMatrixLabel;
					(*hcab)-&gt;dwProdID = ppgsprod-&gt;dwID;
					(*hceenvlabel)-&gt;fValid = fFalse;
					goto LReset;
					}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E8EA6C65419231432C1D8287D95D04C5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FRefineRxvFromPxch() in rxv.cpp can crash the program by dereferencing a null pointer on line 443.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rxv.cpp</FileName>
<FilePath>dev/word/core/rxv.cpp</FilePath>
<LineStart>443</LineStart>
<Snippet>				xszValue[ushortLast + 1] = '\0';
				}
			xszValue[0] = (XCHAR)(prxv-&gt;cchVal);
			AssertTag(CchXstz(prxv-&gt;xstzVal) == CchXsz(XszFromXstz(prxv-&gt;xstzVal)), 0x002a2504 /* tag_ak8ue */);
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D319077B43E126A064CB6B9258690537">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Invoke() in obwrdbas.cpp can crash the program by dereferencing a null pointer on line 1529.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obwrdbas.cpp</FileName>
<FilePath>dev/word/client/desktop/obwrdbas.cpp</FilePath>
<LineStart>1529</LineStart>
<Snippet>							goto LErrRet;
							}
						mpWoprDispparams[ielfd] = -1;
						}
					iwoprArgs = celfdT;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="69CC8804718C51617684ECF81913A80E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BuildBlockRemoveLinesRTL() in disp3.cpp can crash the program by dereferencing a null pointer on line 15360.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>15360</LineStart>
<Snippet>		AssertTag(phts-&gt;drk == drkText, 0x003c8196 /* tag_apigw */);
	
		if ((*hpldrInner)-&gt;hpldrBack == hNil)
			{ // non table cell area!
			if (fBeginningRow)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D4C35D45EBB3EF26A81981F5891E3B00">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function NumSelPictureE2os() in picturee2o.cpp can crash the program by dereferencing a null pointer on line 1603.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>picturee2o.cpp</FileName>
<FilePath>dev/word/core/wdoart/picturee2o.cpp</FilePath>
<LineStart>1603</LineStart>
<Snippet>   if( pESI )
   {
      for( int i = 0; i &lt; pESI-&gt;NumSelE2os(); ++i)
      {
         Ofc::TReferringPtr&lt; const Art::IE2o &gt; prE2o( ( *pESI )[ i ] );</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F67A919FF5BF9E2D058830AC4A9ACC10">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrDispatchWTablePosition() in xmltbl.cpp can crash the program by dereferencing a null pointer on line 4531.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmltbl.cpp</FileName>
<FilePath>dev/word/core/xmltbl.cpp</FilePath>
<LineStart>4531</LineStart>
<Snippet>
	hr = HrTranslateTableAttributeLong(pxin, pxtd, pAttr, 
			xmltkaWTablePosLeftFromText, offset(TAP, dxaFromText));

	if (FAILED(hr))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="068B24A3B3AEE0976591F29159847297">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _UpdateImmedInvalRgnPrDrEdl() in pagevw.cpp can crash the program by dereferencing a null pointer on line 8116.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pagevw.cpp</FileName>
<FilePath>dev/word/client/shared/pagevw.cpp</FilePath>
<LineStart>8116</LineStart>
<Snippet>		AssertTag(prcOld != pNil &amp;&amp; prcNew != pNil, 0x002a36c7 /* tag_ak91h */);

		if (prcOld-&gt;ytBottom &gt; prcNew-&gt;ytBottom)
			dytExtra = piuei-&gt;dytBelowNew;
		else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="6430F33DD96110BB5E83A74C5C63736A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDoDomUIApplyForMarkup() in sdtui.cpp can crash the program by dereferencing a null pointer on line 55.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>sdtui.cpp</FileName>
<FilePath>dev/word/client/desktop/sdtui.cpp</FilePath>
<LineStart>55</LineStart>
<Snippet>        HCABXmlDocMap hcab = (HCABXmlDocMap) GetWindowLongPtr(GetParent(pud-&gt;hwndSdtTV), GWLP_USERDATA);

        if ((*hcab)-&gt;ibkfInside == ibkf)
            (*hcab)-&gt;ibkfInside++;
        }</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="6D0481D00C08CBD97102217A7A3E63C2">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCkPrintMargins() in print1.cpp can crash the program by dereferencing a null pointer on line 258.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>print1.cpp</FileName>
<FilePath>dev/word/client/desktop/print1.cpp</FilePath>
<LineStart>258</LineStart>
<Snippet>					{
					AssertTag(LppmdFromPdod(PdodMain(doc)) != lpNil, ASSERTTAG('dzph'));
					LppmdFromPdod(PdodMain(doc))-&gt;fUserAbort = fTrue;
					}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B8EFEC5A28C7E2784206D1D5A9E3717">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function RichEditWndProc() in dlgredt.cpp can crash the program by dereferencing a null pointer on line 1348.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlgredt.cpp</FileName>
<FilePath>dev/word/client/desktop/dlgredt.cpp</FilePath>
<LineStart>1348</LineStart>
<Snippet>		{
		PT ptT;
		WWD **hwwd = lprtec-&gt;hwwd;

		AssertTag( hwwd != hwwdNil , ASSERTTAG('cvkr'));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="205F585D4ACC1525CAF30FA1746C6972">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrSetDocumentType() in pmhclient.cpp can crash the program by dereferencing a null pointer on line 197.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhclient.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhclient.cpp</FilePath>
<LineStart>197</LineStart>
<Snippet>							{
							LppmdFromPdod(pdodMain)-&gt;pms.wpms = wpms;
							LppmdFromPdod(pdodMain)-&gt;pms.wpmsdt = wpmsdt;
							}
						SetDodDirty(pdodMain, fTrue);		// Dirty the doc for save</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F0F208F8C016BDA76F70D6CF41764524">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function UIMAttrChange() in uim.cpp can crash the program by dereferencing a null pointer on line 1904.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>uim.cpp</FileName>
<FilePath>dev/word/client/shared/uim.cpp</FilePath>
<LineStart>1904</LineStart>
<Snippet>		UIMSyncDispAttr(puimts, prange);

		prange-&gt;Release();
		prange = pNil;
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="58C1077D6FE560EA4EC77354A623A156">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PdodOpenFnmCore2() in open.cpp can crash the program by dereferencing a null pointer on line 2876.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>open.cpp</FileName>
<FilePath>dev/word/core/open.cpp</FilePath>
<LineStart>2876</LineStart>
<Snippet>				{
				wkb.pdod = pdod;
				PutPlc(pdodSrc-&gt;pud-&gt;hplcwkb, iplcFirst, &amp;wkb);
				}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DB272FB7ECDAADE774B62691FE88B02E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ChsHlinkArtos() in oartHost.cpp can crash the program by dereferencing a null pointer on line 8325.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartHost.cpp</FileName>
<FilePath>dev/word/client/shared/oartHost.cpp</FilePath>
<LineStart>8325</LineStart>
<Snippet>			IHlinkSite *pihlsite = (IHlinkSite *)lpwwserverobj;
			Ofc::TCntPtr&lt;IHlink&gt; piHlink;
			phlink-&gt;CreateIHlink(*pihlsite, piHlink);
			AssertTag(piHlink != pNil, 0x003c85d2 /* tag_apixs */); // would have thrown
			// caller expects an allocation for the target frame</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="1EA2A9C3C4FDD8463A77E5000986F056">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Unadvise() in obadvise.cpp can crash the program by dereferencing a null pointer on line 308.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obadvise.cpp</FileName>
<FilePath>dev/word/client/desktop/obadvise.cpp</FilePath>
<LineStart>308</LineStart>
<Snippet>			m_paeHead = pae-&gt;paeNext;
		else
			paePrev-&gt;paeNext = pae-&gt;paeNext;

		FreePae(pae);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B96AF731CB7E2C9AA33FB2AF18F119D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TSplScanCore() in spell.cpp can crash the program by dereferencing a null pointer on line 3050.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>3050</LineStart>
<Snippet>						{
						AssertTag(pspsc-&gt;xszTestWord[pspsc-&gt;cchTestWord] == xchNull, 0x003d1596 /* tag_aprww */);
						pspld-&gt;apSib.cch = CchXsz(pspld-&gt;apSib.pwsz);
						}
					else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="311800D596F001D8B40688E3E064481A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FSelectDocNonVisCore() in obhand.cpp can crash the program by dereferencing a null pointer on line 1709.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obhand.cpp</FileName>
<FilePath>dev/word/client/desktop/obhand.cpp</FilePath>
<LineStart>1709</LineStart>
<Snippet>				_FreeDrawingStuffInWwd(hwwdVBA);
				pdr = PdrFetch(hpr, 0, &amp;drfFetch);
			 	pdr-&gt;pdod = (*hwwdVBA)-&gt;sels.ca.pdod = (*hwwdVBA)-&gt;pdod = pdodNil;
				vpmwdVBA-&gt;SetPdod(pdodNil);
				SetWwdWkFlagsCore(hwwdVBA, wkDoc, fFalse);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="50CD316E4D04FA334D8449E96B55ADAD">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function NormCp() in disp3.cpp can crash the program by dereferencing a null pointer on line 5407.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>5407</LineStart>
<Snippet>			else if (fDoAtCp)
				{
				xwLeft = XwFromXl(hpldr, pdrdo-&gt;xl);
				xwRight = XwFromXl(hpldr, pdrdo-&gt;xl + pdrdo-&gt;dxl);
				xw = (xwLeft + xwRight)/2;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DCE5159C054FABE984F4DFFEA837390C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdKumimoji() in cmd3.cpp can crash the program by dereferencing a null pointer on line 5680.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>5680</LineStart>
<Snippet>			if (!FBeginUndo(uatAutoTracking, fciFormatKumimoji))
				return cmdError;
			if (pcekumi-&gt;cpSave != cpNil)
				SelectIns(psel, pcekumi-&gt;cpSave);
			FDeleteRM(&amp;pcekumi-&gt;rbs.caRuby);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="50CD316E4D04FA334D8449E96B55ADAC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function NormCp() in disp3.cpp can crash the program by dereferencing a null pointer on line 5041.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>5041</LineStart>
<Snippet>			{
			if (fDoAtCp)
				drcl = pdrdo-&gt;drcl;
			else
				drcl = pdr-&gt;drcl;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="FEBB8C42B7F0D08105AEC756E86DCB17">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CpMarkDirtyExceptSpacesLookingForIP() in spell.cpp can crash the program by dereferencing a null pointer on line 3863.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>3863</LineStart>
<Snippet>				continue;
				}
			xch = *hpxch++;
			}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6521">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1737.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1737</LineStart>
<Snippet>
		case irrbRignoremixedcontent:
			((DOP *)pprop)-&gt;fIgnoreMixedContent = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6556">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2573.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2573</LineStart>
<Snippet>
		case irrbRtrftsWidthA:
			((TAP *)pprop)-&gt;ftsWidthAfter = FInLimits(valUse, ftsNil, ftsMax) ? valUse : ftsNil;
			if (ppropGray)
				((TAP *)ppropGray)-&gt;ftsWidthAfter = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="311800D596F001D8B40688E3E064481D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FSelectDocNonVisCore() in obhand.cpp can crash the program by dereferencing a null pointer on line 1763.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obhand.cpp</FileName>
<FilePath>dev/word/client/desktop/obhand.cpp</FilePath>
<LineStart>1763</LineStart>
<Snippet>	int	fRecordingSav = fFalse;
	InhibitRecorder(&amp;fRecordingSav, fTrue);
	if (FNoMemWwd(hwwdVBA))
		{
		FUpdateWwd(hwwdVBA, fuwForceNoDisplay, hprNil);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="182C8E70F7C38F59C3927A4630A3CCE6">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PdodOpenFnmCore2() in open.cpp can crash the program by dereferencing a null pointer on line 3263.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>open.cpp</FileName>
<FilePath>dev/word/core/open.cpp</FilePath>
<LineStart>3263</LineStart>
<Snippet>		// a normal file or a copy (but not an AutoSave file).
		if (!(dof &amp; dofDontAddToMru) &amp;&amp; fn != fnNil &amp;&amp;
				((pfcb-&gt;lpfnmDisplay == lpNil &amp;&amp; pfcb-&gt;dt != dtAutosave) ||
				 pfcb-&gt;dt == dtCopy))
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4D785237F3FFBCEE9B001A37BDCCD092">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdInsMergeField() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 6631.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>6631</LineStart>
<Snippet>				return cmdOK;
			if (!FMailMergeMainPdod(docMain) ||
					(hsttb = LppmdFromPdod(docMain)-&gt;hsttbMergeFields) == hsttbNil ||
					IbstMacSttb(hsttb) == 0)
				return cmdDisabled;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F656C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 3366.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>3366</LineStart>
<Snippet>
		case irrbRloch:
			((CHP *)pprop)-&gt;idct = idctDefault;
			if (ppropGray)
				((CHP *)ppropGray)-&gt;idct = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F652B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1853.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1853</LineStart>
<Snippet>		case irrbRup:
			AssertTag(valUse &gt;= 0, 0x0035c001 /* tag_an2ab */);
			((CHP *)pprop)-&gt;hpsPos = valUse;
			if (ppropGray)
				((CHP *)ppropGray)-&gt;hpsPos = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="36EADEA59878313CAF2DB7EFCA370E52">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FillFceKernGDIW() in loadfont.cpp can crash the program by dereferencing a null pointer on line 4697.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>loadfont.cpp</FileName>
<FilePath>dev/word/core/loadfont.cpp</FilePath>
<LineStart>4697</LineStart>
<Snippet>	for (iKpr = 0; iKpr &lt; cKernPairs; iKpr++)
		{
		kpr.lPair = MakeDWordFirstSecond(lrgKerningPairs[iKpr].wSecond,
			lrgKerningPairs[iKpr].wFirst);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="6A89CB44C04DD3B465D5E3AB28022FF8">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcTabs() in tabs.cpp can crash the program by dereferencing a null pointer on line 239.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>tabs.cpp</FileName>
<FilePath>dev/word/client/desktop/tabs.cpp</FilePath>
<LineStart>239</LineStart>
<Snippet>		TMC tmc;

		if (!lptdsd-&gt;fValid &amp;&amp; !FInitTdsd(pcmb))
			_TbdFar(lptdsd-&gt;tbdCur).jc = jcLeft;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="15963D94EF68D33E2B0E41963585AB4E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function NormCp() in disp3.cpp can crash the program by dereferencing a null pointer on line 5035.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>5035</LineStart>
<Snippet>		if (fDrg)
			{
			if (!pdrg-&gt;piid-&gt;FGetNormCpRect(pdrg, &amp;drcl))
				drcl = pdrg-&gt;drcl;
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="9B29E367CE72F988DF2FCFA91EA2E220">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FEnsureInitSttbFontSub() in syschg.cpp can crash the program by dereferencing a null pointer on line 1007.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>syschg.cpp</FileName>
<FilePath>dev/word/core/syschg.cpp</FilePath>
<LineStart>1007</LineStart>
<Snippet>		{
		if ((*phsttbKeyT = HsttbInitXstShort()) != hNil
			&amp;&amp; (*phsttbResultT = HsttbInitXstShort()) == hNil)
			{
			FreeHsttb(*phsttbKeyT);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6542">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2025.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2025</LineStart>
<Snippet>		case irrbRmargbsxn:
			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c00b /* tag_an2al */);
			((SEP *)pprop)-&gt;pginfo.dyaBottom = valUse;
			break;
		case irrbRguttersxn:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D6E5C19E53E3AA68264D7D2217744205">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _FOcxGetValue() in doc.cpp can crash the program by dereferencing a null pointer on line 23861.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>doc.cpp</FileName>
<FilePath>dev/word/core/doc.cpp</FilePath>
<LineStart>23861</LineStart>
<Snippet>		OleMethodLp(lpTIProps, ReleaseVarDesc)( lpVD);
	if (lpTA != lpNil)
		OleMethodLp(lpTIProps, ReleaseTypeAttr)( lpTA);
	if (lpTIProps != lpNil)
		ReleaseMethodLp(lpTIProps);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="8DDC4FFBDD2F8C58D288E1035D774919">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCanAutoCloseTag() in htmlout.cpp can crash the program by dereferencing a null pointer on line 2756.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlout.cpp</FileName>
<FilePath>dev/word/core/htmlout.cpp</FilePath>
<LineStart>2756</LineStart>
<Snippet>		{
		if (ihtk == msoihtkA
			&amp;&amp; (pwhcd == pNil || pwhcd-&gt;fHyperlink || pwhcd-&gt;fFtnEdn))
			{
			return fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64E5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 768.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>768</LineStart>
<Snippet>			break;
		case irrbRslmult:
			((PAP *)pprop)-&gt;lspd.fMultLinespace = (valUse == fTrue);
			if (ppropGray)
				((PAP *)ppropGray)-&gt;lspd.fMultLinespace = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="1ADB90EC1EB13E0D992C1CA4AE571839">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdMMRecipients() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 11913.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>11913</LineStart>
<Snippet>			AssertTag(ppmd != pNil, ASSERTTAG('jghs'));

			ppmf = LppmfFromLppmd(ppmd, ppmd-&gt;pms.ipmfFetch);
			if(ppmf-&gt;pIMsoMailMerge)
				hr = ppmf-&gt;pIMsoMailMerge-&gt;HrDoRecipientDlg(HwndParentDlg(vhwndApp), pNil);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="BB3120F12F30729B8BF4FF3745046C54">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FUpdatePrCore() in disp3.cpp can crash the program by dereferencing a null pointer on line 2413.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>2413</LineStart>
<Snippet>	for (idr = 0; idr &lt; idrMac; idr++, pdr++)
		{
		if ((pdr-&gt;fNoPrev &amp;&amp; pdr-&gt;fCpBad)
				|| (fPageView &amp;&amp; pdr-&gt;fEdited &amp;&amp; fUpdateFully))
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="3F6A46B68FBDE0E142BB09EFC89516A4">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function OnEvent() in odraw.cpp can crash the program by dereferencing a null pointer on line 6406.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>odraw.cpp</FileName>
<FilePath>dev/word/client/desktop/odraw.cpp</FilePath>
<LineStart>6406</LineStart>
<Snippet>			AssertTag(PbsiCur() != pNil, ASSERTTAG('dsei'));

			if (PbsiCur()-&gt;fAbort)
				{
				PdodOfPvDggs(pvDggs)-&gt;fSaveCanceled = fTrue;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="988106B5D7FC8C3A1CF5D81C0EB841B6">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function SizeDesk() in raremsg.cpp can crash the program by dereferencing a null pointer on line 591.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>raremsg.cpp</FileName>
<FilePath>dev/word/client/desktop/raremsg.cpp</FilePath>
<LineStart>591</LineStart>
<Snippet>	MWD *pmwd = PmwdFromHwndApp(hwndApp);

	if (pmwd-&gt;FInsitu())
		return;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F654A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2479.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2479</LineStart>
<Snippet>		case irrbRtscellpct:
		case irrbRtspat:
			pshd = &amp;(((TAP *)pprop)-&gt;tcDefault.shd);
			SetShdForIrrb(pshd, irrbProp, valUse, hribl);
			if (ppropGray)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="826F8DA014EDBA6FF8EB62C103146A94">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdEncloseChar() in cmd3.cpp can crash the program by dereferencing a null pointer on line 13017.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>13017</LineStart>
<Snippet>
	if (pcmb-&gt;fDefaults)
		pcab-&gt;iStyle = ecEnclosure;

	if (pcmb-&gt;fDialog || pcmb-&gt;fAction || pcmb-&gt;fIsValid)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="BBFB747C44CBB30B966D7529C82E928F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ClearSubSelection() in CanvasEditor.cpp can crash the program by dereferencing a null pointer on line 189.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>CanvasEditor.cpp</FileName>
<FilePath>dev/word/core/wdoart/CanvasEditor.cpp</FilePath>
<LineStart>189</LineStart>
<Snippet>   GetSelection().QuerySelectionInfo( pDSI );
   if( pDSI )
      pDSI-&gt;ClearSelection();
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F653C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2001.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2001</LineStart>
<Snippet>
		case irrbRlndscpsxn:
			((SEP *)pprop)-&gt;dmOrientPage = dmOrientLandscape;
			break;		
		case irrbRpgwsxn:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="09B777C4C2FCEF6FB1C9F81301CCFCE1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOamGenericSelectCore() in obgenric.cpp can crash the program by dereferencing a null pointer on line 2123.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obgenric.cpp</FileName>
<FilePath>dev/word/client/desktop/obgenric.cpp</FilePath>
<LineStart>2123</LineStart>
<Snippet>				}
					
				if (fReFetchSels &amp;&amp; doc-&gt;fHdr)
					goto LReFetchSels;
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="2D4A717DCBA3B488B2653EFB63B150C0">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdFixSpelling() in spell.cpp can crash the program by dereferencing a null pointer on line 10311.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>10311</LineStart>
<Snippet>			break;

		pspld = PspldFromLid(pspsc-&gt;lidTestWord, fTrue/*fAssert*/);
		if (pspld == pNil)
			break;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="556D4416E16565772F0A1A0A7333A4B0">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FLCDeleteMcrCore() in library.cpp can crash the program by dereferencing a null pointer on line 2981.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>library.cpp</FileName>
<FilePath>dev/word/client/desktop/library.cpp</FilePath>
<LineStart>2981</LineStart>
<Snippet>			&amp;pVbaProjItemCol)))
			{
			if (SUCCEEDED(pVbaProjItemCol-&gt;DeleteProjItem(pvch)))
				{
				SetDodDirty(pdod, fTrue);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="A348C7A5E2A315518355AB387FD9A808">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDlgParaLooks() in dlglook1.cpp can crash the program by dereferencing a null pointer on line 2401.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlglook1.cpp</FileName>
<FilePath>dev/word/client/desktop/dlglook1.cpp</FilePath>
<LineStart>2401</LineStart>
<Snippet>
			FDoParaCabPostProcessing((CABPARALOOKS **)HcabDlgCur(), &amp;tmc, psel, fTrue/*fForDefault*/);
			if ((id = IdSetDefMessage(wFromParaDlg, pNil/*prb*/, psel-&gt;ca.pdod)) != IDCANCEL)
				{
				if (id == IDNO)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DBFB9F118F2CA7FDE888266EB5BDFB46">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _DrawSdtOrigCharCpElegent() in formatsp.cpp can crash the program by dereferencing a null pointer on line 2195.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>formatsp.cpp</FileName>
<FilePath>dev/word/core/formatsp.cpp</FilePath>
<LineStart>2195</LineStart>
<Snippet>		for (i=1; i&lt;cPntAux2; i++)
			{
			pt = rgPntAux2[i-1];
			AddPtUV(&amp;pt, rgPntAux2[i].x, rgPntAux2[i].y, lstflow);
			rgPntAux2[i] = pt;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="718D561E0CEF562B8985FBE7CFB242ED">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FFillPictureContainer() in mso.cpp can crash the program by dereferencing a null pointer on line 561.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>mso.cpp</FileName>
<FilePath>dev/word/client/desktop/mso.cpp</FilePath>
<LineStart>561</LineStart>
<Snippet>			break;
		default:
			if (tcr.pic-&gt;TcidGet() == msotcidAddressBook)
				{
				// Remove the accelerators from AddrBook buttons in dialogs</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="08E8719D23E0472072C515A709C8E77D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function EidWritePistmHtmlCore() in htmlout.cpp can crash the program by dereferencing a null pointer on line 7924.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlout.cpp</FileName>
<FilePath>dev/word/core/htmlout.cpp</FilePath>
<LineStart>7924</LineStart>
<Snippet>	if (!FFillHecdCore(&amp;hecd, &amp;voheu, pistm, doc, grffph, fFalse /*fMetroSave*/))
		{
		pistm-&gt;Release();
		pihes-&gt;Free();
		goto fail;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="9AFC4530E21BB1B0CAC8BA9DFF5FD729">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CchGetRulerMarkXstz() in rulerdrw.cpp can crash the program by dereferencing a null pointer on line 481.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rulerdrw.cpp</FileName>
<FilePath>dev/word/client/desktop/rulerdrw.cpp</FilePath>
<LineStart>481</LineStart>
<Snippet>	RSD *prsd = PrsdFromHwndRuler(hwnd);

	if (prsd-&gt;rpap.fBiDi &amp;&amp; (imk == imkTabList))
		imk = imkTabRight;
	imk = ImkDrawFromImk(imk);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B4E2F8C1C710BEA1E399D2417106583E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2048.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2048</LineStart>
<Snippet>			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c012 /* tag_an2as */);
			AssertTag (rrb.pgc == pgcDopSep, 0x0035c013 /* tag_an2at */);
			pdopsep-&gt;dyaBottom = psep-&gt;pginfo.dyaBottom = valUse;
			break;
		case irrbRmargl: </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="1FF0AB59613C5D47D295C35CC1A95587">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FNameFsbrtrk() in fsbreak.cpp can crash the program by dereferencing a null pointer on line 2659.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fsbreak.cpp</FileName>
<FilePath>dev/word/core/fsbreak.cpp</FilePath>
<LineStart>2659</LineStart>
<Snippet>		{
		if (!FAddPgbru(pfsclient, pNil /*pvBreak*/, pfsnmFrame, pNil /*pfsnmRel*/,
				cpLimFrame - pfsnmFrame-&gt;cp /*dcp*/, pgbrukNone, 0 /*iExtra*/, 
				pfsclient-&gt;ipgd - 1, 0 /*icol*/))
			return fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64DA">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 685.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>685</LineStart>
<Snippet>
		case irrbRtbllook:
			_Tlp(((TAP *)pprop)-&gt;tlp).grfatl |= valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="6B4445B97944C9BAA318C24266B92062">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function OnMouseMessage() in wordgroupeditor.cpp can crash the program by dereferencing a null pointer on line 231.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>wordgroupeditor.cpp</FileName>
<FilePath>dev/word/core/wdoart/wordgroupeditor.cpp</FilePath>
<LineStart>231</LineStart>
<Snippet>                  // Select the E2o frame, UNLESS we're clicking on a shape that we already have selected.
                  // In this case, we shouldn't drop the selection.
                  if( !pDSI-&gt;FContains( prE2oFrameDrawingElementAncestorOfShape ) )
                     pDSI-&gt;FClickSelect( prE2oFrameDrawingElementAncestorOfShape );
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="8CD0D907E09B19EB2C163879E4768FE7">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function DisplayErrorInPane() in grammar.cpp can crash the program by dereferencing a null pointer on line 10138.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>grammar.cpp</FileName>
<FilePath>dev/word/client/desktop/grammar.cpp</FilePath>
<LineStart>10138</LineStart>
<Snippet>	int fNlCheck = pgrss-&gt;fNlCheck;
	cbuew = fNlCheck ? cbof(CEW) : cbof(GEW);
	cuew = fNlCheck ? pgrld-&gt;pceb-&gt;rgceo[iueo].ccew : pgrld-&gt;lpgeb-&gt;rggeo[iueo].cgew;
	puew = fNlCheck ? (UEW *)&amp;pgrld-&gt;pceb-&gt;rgceo[iueo].rgcew[0] : (UEW *)&amp;pgrld-&gt;lpgeb-&gt;rggeo[iueo].lrggew[0];
	cet = fNlCheck ? pgrld-&gt;pceb-&gt;rgceo[iueo].cet : cetDefault;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="CDD3EC718CD155BF498FA3B699017BDC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrLoadOCX() in ocxclnt.cpp can crash the program by dereferencing a null pointer on line 2618.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ocxclnt.cpp</FileName>
<FilePath>dev/word/client/desktop/ocxclnt.cpp</FilePath>
<LineStart>2618</LineStart>
<Snippet>			{
			AssertTag(pLR2, ASSERTTAG('61a5'));
			hr = pLR2-&gt;ExtractLicense(clsid, &amp;bstrExtracted);
			if (SUCCEEDED(hr))
				{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="08577283D23C55276E9186EDE2DC9EAD">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaHandlerProp() in obrange.cpp can crash the program by dereferencing a null pointer on line 11994.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>11994</LineStart>
<Snippet>				pchpGray-&gt;ftc = fNinch ? 0xFFFF : 0;
			if (fUpdateChpLid) // Lid was applied
				pchpGray-&gt;lid = fNinch ? 0xFFFF : 0;

			if (pfont-&gt;fRef  &amp;&amp;  pfont-&gt;pfnOnChange)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B8EFEC5A28C7E2784206D1D5A9E3714">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function RichEditWndProc() in dlgredt.cpp can crash the program by dereferencing a null pointer on line 1196.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlgredt.cpp</FileName>
<FilePath>dev/word/client/desktop/dlgredt.cpp</FilePath>
<LineStart>1196</LineStart>
<Snippet>		if (wParam == VK_TAB &amp;&amp; MsoGetKeyStateCore(VK_CONTROL) &lt; 0)
			{
			if (lprtec-&gt;fEditCall &amp;&amp; lprtec-&gt;fNotify)
				{
				/* some users of rich text edit controls want to be notified */</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="311800D596F001D8B40688E3E064481C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FSelectDocNonVisCore() in obhand.cpp can crash the program by dereferencing a null pointer on line 1751.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obhand.cpp</FileName>
<FilePath>dev/word/client/desktop/obhand.cpp</FilePath>
<LineStart>1751</LineStart>
<Snippet>		// this flag is not set for vb, so set it now
		// BUG# 36308
		(*hwwdVBA)-&gt;tvi.grpfvisi.SetFSeeScriptAnchor((*hwwd)-&gt;tvi.grpfvisi.FSeeScriptAnchor());

		// O14:894590: Make sure this flag gets copied so that the VBA window can correctly</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="3655A21EA73DCEEFA52B0039BAD75EC5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcOpenInternal() in dlgopen.cpp can crash the program by dereferencing a null pointer on line 2780.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlgopen.cpp</FileName>
<FilePath>dev/word/client/desktop/dlgopen.cpp</FilePath>
<LineStart>2780</LineStart>
<Snippet>			if (poptOpen2 != pNil)
				{
				poptOpen-&gt;Stop();
				if (fSuccess &amp;&amp; fRecordToSqm)
					{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6552">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2545.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2545</LineStart>
<Snippet>
		case irrbRtrautofit:
			((TAP *)pprop)-&gt;fAutofit = valUse;
			if (ppropGray)
				((TAP *)ppropGray)-&gt;fAutofit = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="626384FA8B536FAF93466961A0271F67">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaHandlerProp() in obrange.cpp can crash the program by dereferencing a null pointer on line 11459.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>11459</LineStart>
<Snippet>			if (fParentIsConditionalStyle)
				{
				if (FAILED (hr = HrOaConditionalStyleGetChpPap(pfont-&gt;obfmt.pie, &amp;chp, &amp;pap)))
					goto LRet;
				}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="672861C8C1084289F5D88906E7E9F271">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrGetAmpiFromMpinfo() in cmd2.cpp can crash the program by dereferencing a null pointer on line 1800.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd2.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd2.cpp</FilePath>
<LineStart>1800</LineStart>
<Snippet>
	// get data store item ID
	pimxsi-&gt;GetMxsid(&amp;pampi-&gt;mxsid);

LError:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6517">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1692.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1692</LineStart>
<Snippet>			__fallthrough;
		case irrbRbookfold:
			((DOP *)pprop)-&gt;fFolioPrint = fTrue;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="EAC569D8C2E8F3F558E648A104502FC2">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function NormCp() in disp3.cpp can crash the program by dereferencing a null pointer on line 5071.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>5071</LineStart>
<Snippet>				ptT.yw = rcw.ywBottom - 1;

				if (FAssign(fVolatile = ((*hpldr)-&gt;hpldrBack != hNil)))
					{
					spldr.FSaveHpldr(hpldr, idr);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64DD">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 707.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>707</LineStart>
<Snippet>			break;
		case irrbRri:
			if (((PAP *)pprop)-&gt;fBiDi)
				{
				((PAP *)pprop)-&gt;dxaLeft = valUse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6515">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1685.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1685</LineStart>
<Snippet>
		case irrbRtwoonone:
			((DOP *)pprop)-&gt;f2on1 = fTrue;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B4E2F8C1C710BEA1E399D24171065841">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2063.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2063</LineStart>
<Snippet>			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c018 /* tag_an2ay */);
			AssertTag (rrb.pgc == pgcDopSep, 0x0035c019 /* tag_an2az */);
			pdopsep-&gt;dyaTop = psep-&gt;pginfo.dyaTop = valUse;
			break;
		case irrbRgutter:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6507">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1315.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1315</LineStart>
<Snippet>		   // special handling done in rtfout
		case irrbRdfrmtxty:
			((PAP *)pprop)-&gt;dyaFromText = valUse;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;dyaFromText = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="205F585D4ACC1525CAF30FA1746C6971">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrSetDocumentType() in pmhclient.cpp can crash the program by dereferencing a null pointer on line 196.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhclient.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhclient.cpp</FilePath>
<LineStart>196</LineStart>
<Snippet>						if (LppmdFromPdod(pdodMain))
							{
							LppmdFromPdod(pdodMain)-&gt;pms.wpms = wpms;
							LppmdFromPdod(pdodMain)-&gt;pms.wpmsdt = wpmsdt;
							}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="BC9AE7C0499EC6348504730415D3B76E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FEvalFieldCondition() in fieldclc.cpp can crash the program by dereferencing a null pointer on line 6702.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldclc.cpp</FileName>
<FilePath>dev/word/core/fieldclc.cpp</FilePath>
<LineStart>6702</LineStart>
<Snippet>				}

			if (fObserveWild &amp;&amp; pxch2 &lt; pxchMac2 &amp;&amp; *pxch2 == chCondMatchMany)
				{  /* match any number of chars wildcard */
				XCHAR *pxchT1;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="56F15C657195C89F8767540F57040C70">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDlgEMailOpts() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 5021.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>5021</LineStart>
<Snippet>				// Make sure Mail Addr is in the list of mergefields
				xstz[0] = CchGetTmcText(tmcEMRecip, xstz+1, CxchMaxXstz(xstz));
				if (!FSearchSttbUnsortedNcXst(lppmd-&gt;hsttbMergeFields, xstz, &amp;ibst))
					{
					ErrorEidMrtTag(eidNoMailAddress, &quot;FDlgEmailOpts&quot;, MsoReserveTag(0x005847da /* tag_awe50 */)); </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="A8E7D1E97F529FBC5EB8F64FBFC2556E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FLoadAndRegister() in sbd.cpp can crash the program by dereferencing a null pointer on line 747.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>sbd.cpp</FileName>
<FilePath>dev/word/core/sbd.cpp</FilePath>
<LineStart>747</LineStart>
<Snippet>
			// make sure we have the same namespace mappings as the store to start with.
			if (FAILED(pimxsl-&gt;HrGetSelectionNamespaces(&amp;bstrNS)))
				{
				goto _LRet;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="0D1A7F0702DE08673BB6406EBD7C7798">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function UpdateBackgroundTexture() in layer.cpp can crash the program by dereferencing a null pointer on line 13117.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>layer.cpp</FileName>
<FilePath>dev/word/client/shared/layer.cpp</FilePath>
<LineStart>13117</LineStart>
<Snippet>		WWD **hwwdThumbnailParent = HwwdThumbnailParent(pwrt-&gt;m_hwwdParent);
		if (hwwdThumbnailParent != hwwdNil &amp;&amp; FReallyPageView(hwwdThumbnailParent) &amp;&amp; wk != wkThumbReading)
			fNavpaneGradientColor = !FIsNavPaneFloating(PitbsFromDoc((*hwwdThumbnailParent)-&gt;pdod));
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="7C4F675BF4EFB32E88790D20D70AD06C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2989.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2989</LineStart>
<Snippet>			SEP *psep = (SEP *)pprop;

			if (icolCur &gt;= 0 &amp;&amp; icolCur &lt;= psep-&gt;pginfo.ccolM1)
				{
				psep-&gt;pginfo.fEvenlySpaced = fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="21B7B2D200AC310E3FFBF5851DF3E64D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _FTranslateMacWordBkmks() in open.cpp can crash the program by dereferencing a null pointer on line 16262.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>open.cpp</FileName>
<FilePath>dev/word/core/open.cpp</FilePath>
<LineStart>16262</LineStart>
<Snippet>					{
					stBuf = StAllocIds(_idsBkMergeFormat);
					if (!FReallocHCb(hsz, (cbSzPrev = CbSz(*hsz)) + stBuf[0]))
						{
						FreeStack(stBuf);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="61D484506DD8979E5D7B212D7B224DF0">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrDispatchWTableWidthVal() in xmltbl.cpp can crash the program by dereferencing a null pointer on line 4358.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmltbl.cpp</FileName>
<FilePath>dev/word/core/xmltbl.cpp</FilePath>
<LineStart>4358</LineStart>
<Snippet>		&amp;&amp; (bOffsetFts == offset(TAP, ftsCellPaddingDefaultLeft)
			|| bOffsetFts == offset(TAP, ftsCellPaddingDefaultRight)
			|| bOffsetFts == offset(TAP, ftsCellPaddingDefaultTop)
			|| bOffsetFts == offset(TAP, ftsCellPaddingDefaultBottom)))  
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D46F9297ED768E3630C0D8FBC83AECFD">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _FTranslateMacWordBkmks() in open.cpp can crash the program by dereferencing a null pointer on line 16375.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>open.cpp</FileName>
<FilePath>dev/word/core/open.cpp</FilePath>
<LineStart>16375</LineStart>
<Snippet>				WriteRgchToFn(fnScratch, &amp;ltype, CbOf(long));
				lcbSzHead = cbSzHeadPrev;
				pchSzHead = *hszHead;
				while (lcbSzHead &gt; 0)
					{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DA93BEC038AC1B27BB3CCD678E657FA9">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdRuby() in cmd3.cpp can crash the program by dereferencing a null pointer on line 3372.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>3372</LineStart>
<Snippet>			if (!FBeginUndo(uatAutoTracking, fciFormatRuby))
				return cmdError;
			SelectIns(psel, pceruby-&gt;fOldSelect ? pceruby-&gt;caSave.cpFirst : pceruby-&gt;ssel.ca.cpFirst);
			InsertRubies(pceruby, pcmb, fTrue);
			pcmb-&gt;fRecordCmd = fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6553">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2551.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2551</LineStart>
<Snippet>
		case irrbRtrkeepfollow:
			((TAP *)pprop)-&gt;fKeepFollow = valUse;
			if (ppropGray)
				((TAP *)ppropGray)-&gt;fKeepFollow = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="24117FA6F47D9E1A0EBBFC5D6A4C3947">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ForceCursorChangeSel() in cursor.cpp can crash the program by dereferencing a null pointer on line 1267.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cursor.cpp</FileName>
<FilePath>dev/word/client/shared/cursor.cpp</FilePath>
<LineStart>1267</LineStart>
<Snippet>			if (FHaveDrawingViewAndSelection(hpr))
				{
				IMsoDrawingSelection *pidgsl = (*hpr)-&gt;rgpidgv[IdgvCur()]-&gt;PidgslGetSelection();
				switch (pidgsl-&gt;DgslkGetSelectionMode(
							msogrfdgslNil))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="7A734F0B4083A2C37108A3096CF4DF5B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FcrCalcFltInclude() in fieldspc.cpp can crash the program by dereferencing a null pointer on line 1900.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldspc.cpp</FileName>
<FilePath>dev/word/client/desktop/fieldspc.cpp</FilePath>
<LineStart>1900</LineStart>
<Snippet>
	if (DcpCa(&amp;ca) == 0)
		ca.pdod-&gt;fForceReplHidn = fFalse;	// XReplaceCps bags before clearing in this case.
		
	AssertTag(!ca.pdod-&gt;fForceReplHidn, ASSERTTAG('dchj'));	// cleared in XReplaceCps!!</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="182C8E70F7C38F59C3927A4630A3CCE2">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PdodOpenFnmCore2() in open.cpp can crash the program by dereferencing a null pointer on line 2304.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>open.cpp</FileName>
<FilePath>dev/word/core/open.cpp</FilePath>
<LineStart>2304</LineStart>
<Snippet>		// Check to see if we have a pdod but no fn, ie. new normal.dot
		if (fn != fnNil)
			pfcb-&gt;fnm.GetXstz(xstzFile, CxchMaxXstz(xstzFile), fnoBase);
		else
			fnm.GetXstz(xstzFile, CxchMaxXstz(xstzFile), fnoBase);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="65B5918531C684CA08C7F43DEE168DAB">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function EidSendHtmlMail() in cmd3.cpp can crash the program by dereferencing a null pointer on line 8237.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>8237</LineStart>
<Snippet>		{
		AssertTag(pid != pNil, ASSERTTAG('jgfg'));
		hr = pid-&gt;QueryInterface(IID_IMsoEnvelopeVB, (void **)&amp;pmevb);
		pid-&gt;Release();
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F0607B8A84D2BA30713FC561B5DF0993">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function EidParseSqlWhereLxsz() in pmhcore.cpp can crash the program by dereferencing a null pointer on line 2474.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhcore.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhcore.cpp</FilePath>
<LineStart>2474</LineStart>
<Snippet>
					// We catch iCompOpBlank and iCompOpNBlank in ssWhereCompTo
					lprecsel-&gt;iCompOp = idsl;

					// T3 BUG 10074: Add support of IS NULL and IS NOT NULL</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="718D561E0CEF562B8985FBE7CFB242EC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FFillPictureContainer() in mso.cpp can crash the program by dereferencing a null pointer on line 485.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>mso.cpp</FileName>
<FilePath>dev/word/client/desktop/mso.cpp</FilePath>
<LineStart>485</LineStart>
<Snippet>			int cpicc = 0;
			int ipicc;
			int tcid = tcr.pic-&gt;TcidGet();

			// Default state has no tab stops</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="892775BDA180E4A893085468885F42B9">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdMailMergeWizard() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 304.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>304</LineStart>
<Snippet>
		lppmd = LppmdFromPdod(pdod);
		pIMsoMailMerge = LppmfFromLppmd(lppmd, lppmd-&gt;pms.ipmfFetch)-&gt;pIMsoMailMerge;
		pIMsoOdso = LppmfFromLppmd(lppmd, lppmd-&gt;pms.ipmfFetch)-&gt;pIMsoOdso;
		iStartStep = LppmfFromLppmd(lppmd, lppmd-&gt;pms.ipmfFetch)-&gt;iMailMergeStep;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4A6F4FFAD284D5564F0D99448B824DC6">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function UpdateDsi() in print.cpp can crash the program by dereferencing a null pointer on line 1221.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>print.cpp</FileName>
<FilePath>dev/word/core/print.cpp</FilePath>
<LineStart>1221</LineStart>
<Snippet>					for (i = 0; i &lt; cWordsTemp; i++)
						{
						if (FHyphSkipLeadingXch(pxchT[j]))
							{
							cNonWords++;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4D785237F3FFBCEE9B001A37BDCCD093">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdInsMergeField() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 6680.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>6680</LineStart>
<Snippet>			// menu of merge fields.
			AssertTag(ibst &gt; 0, ASSERTTAG('cpqk'));
			GetXstzFromSttb(LppmdFromPdod(docMain)-&gt;hsttbMergeFields, ibst - 1, xstzMergeField, CxchMaxXstz(xstzMergeField));

			if (!FSetCabXstSbDds(pcmb-&gt;hcab, xstzMergeField, Iag(CABINSMERGE, hszMergeField)))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E440CDC8E5F6F2E03C8EAE0A06A2419C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestTableInsertColRowTE() in TEComponentTests.cpp can crash the program by dereferencing a null pointer on line 1606.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TEComponentTests.cpp</FileName>
<FilePath>dev/word/client/desktop/TEComponentTests.cpp</FilePath>
<LineStart>1606</LineStart>
<Snippet>		MsoUTAssertTag(tiw.cpsaCell.FRegister(selCur.pdod, selCur.cpFirst, fFalse), 0x002e32ce /* tag_al9lo */);
		//pte = new CTableInsertColRowTE(&amp;tiw, fFalse/*fRow*/);
		pte-&gt;OnSingleClick(ir, &amp;fHandled);
		SafeDelete(pte);
		tiw.cpsaCell.Unregister();</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="89BA06C786F3D5EB0A4B8AFAC48F506E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FPropToRtfSpecMacPlusCore() in rtfout.cpp can crash the program by dereferencing a null pointer on line 1863.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfout.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfout.cpp</FilePath>
<LineStart>1863</LineStart>
<Snippet>					fFirstFlush = fFalse;
					}
				brc = *pbrc;
				FWriteRtfKeyword(prebl, mpibrcisz[ibrc]);
				FlushRebl(prebl);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="151AD445FE65BF3032EA8139F2461561">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FFetchFibProc() in file.cpp can crash the program by dereferencing a null pointer on line 2275.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>file.cpp</FileName>
<FilePath>dev/word/core/file.cpp</FilePath>
<LineStart>2275</LineStart>
<Snippet>		if (nFib &lt;= nFibMacWord40)
			{
			SetBytes(&amp;fibm5.fcSttbfBkmk, 0, cbFIBM5 - offset(FIBM5, fcSttbfBkmk));
			}
		pfib-&gt;nProduct = fibm5.nProduct;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="BD02FDACB82B46568C9725DEE84D8770">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcCheckErrors() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 6338.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>6338</LineStart>
<Snippet>		goto LRet;

	if ((pcab = (CABPMCHECK *)PcabFromHcab(pcmb-&gt;hcab))-&gt;iCheckError != lppmd-&gt;pms.rfs.grfChkErr)
		{
		lppmd-&gt;pms.rfs.grfChkErr = pcab-&gt;iCheckError;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F48937B659F654E788862621AE1ED6CC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FInterruptSave() in corout.cpp can crash the program by dereferencing a null pointer on line 921.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>corout.cpp</FileName>
<FilePath>dev/word/client/shared/corout.cpp</FilePath>
<LineStart>921</LineStart>
<Snippet>	// has its own globals and InterruptSave() will be stopping this thread
	// shortly.
	fNotBinary = pbsi-&gt;ftyp == ftypHtml || pbsi-&gt;ftyp == ftypMhtml ||
		pbsi-&gt;ftyp == ftypFilteredHtml || FXmlFtyp(pbsi-&gt;ftyp);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="685B36E40010415DDD28AE90265F448D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdInsPicture() in pic2.cpp can crash the program by dereferencing a null pointer on line 1054.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pic2.cpp</FileName>
<FilePath>dev/word/client/desktop/pic2.cpp</FilePath>
<LineStart>1054</LineStart>
<Snippet>			}

		CacheParaCa(&amp;psel-&gt;ca);

		CopyXsz(xszEmpty, xszDesc, CxchMaxXstz(xszDesc));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F9F2A799E2FDC4BD1305383321143468">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrLoadOCX() in ocxclnt.cpp can crash the program by dereferencing a null pointer on line 2872.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ocxclnt.cpp</FileName>
<FilePath>dev/word/client/desktop/ocxclnt.cpp</FilePath>
<LineStart>2872</LineStart>
<Snippet>		lpodt-&gt;m_lpoleobject-&gt;Release();
		lpodt-&gt;m_lpoleobject = NULL;
		lpUnk-&gt;Release();
		if (fDeleteOCX &amp;&amp; lpodt-&gt;m_lpOCXData)
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="7902B059EFDEB7D7B28E4F27DA9B074F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FComparePldrsels() in pagevw.cpp can crash the program by dereferencing a null pointer on line 8948.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pagevw.cpp</FileName>
<FilePath>dev/word/client/shared/pagevw.cpp</FilePath>
<LineStart>8948</LineStart>
<Snippet>			for (idrsel = idrselMacNew; idrsel &lt; idrselMacOld; idrsel++)
				{
				pdrselOld = PdrselFetchAndFree(hpldrselOld, rgidrselOld[idrsel], &amp;drfOld);
				UpdateImmedInvalRgnPrDru(ppgdrt, hprOld /*hpr*/,
					hprOld, &amp;pdrselOld-&gt;drcl,</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F655D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2619.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2619</LineStart>
<Snippet>			break;
		case irrbRdyaAbsSpec:
			((PAP *)pprop)-&gt;dyaAbs = -valUse;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;dyaAbs = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="44D07355C88CAD4A9F4CEE3D6ED20D70">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdWarichu() in cmd3.cpp can crash the program by dereferencing a null pointer on line 4453.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>4453</LineStart>
<Snippet>	if (pcmb-&gt;fDefaults)
		{
		FSetupFEObj(psel, &amp;pcefels-&gt;ca, &amp;pcefels-&gt;cpSave, itypWarichu);
		if (DcpCa(&amp;pcefels-&gt;ca) &gt;= cchMaxSz)
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="685B36E40010415DDD28AE90265F448C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdInsPicture() in pic2.cpp can crash the program by dereferencing a null pointer on line 985.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pic2.cpp</FileName>
<FilePath>dev/word/client/desktop/pic2.cpp</FilePath>
<LineStart>985</LineStart>
<Snippet>		pcabinspic-&gt;iWrap = IWrapFloatingPicDefaults();
		pcabinspic-&gt;fFloat = !_fInsertingHR &amp;&amp; !_fInsertingPictureBullet &amp;&amp; !FDefiningStyle() &amp;&amp;
			(psel-&gt;ca.pdod-&gt;fMother || psel-&gt;ca.pdod-&gt;fHdr) &amp;&amp;
			!FWordBasicMacro() &amp;&amp; !psel-&gt;ca.pdod-&gt;pud-&gt;dop.fHtmlDoc &amp;&amp; 
			!FMailEdPdod(psel-&gt;ca.pdod) &amp;&amp; !FRichEdit(psel-&gt;ca.pdod) &amp;&amp;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F651E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1725.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1725</LineStart>
<Snippet>		case irrbRgrfdocevents:
			if (!(**hribl).fDisregardMacros)
				((DOP *)pprop)-&gt;grfDocEvents = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="24DEC7C6713924FF714015A5C9FC8274">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FcrCalcFltInsDatabase() in fieldspcui.cpp can crash the program by dereferencing a null pointer on line 108.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldspcui.cpp</FileName>
<FilePath>dev/word/client/desktop/fieldspcui.cpp</FilePath>
<LineStart>108</LineStart>
<Snippet>			case chFldSwAskOnce:
				{
				if (FActivePMPdod(doc) &amp;&amp; !FPromptAskPMPdod(doc))
					{
					fcr = fcrKeepOld;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6525">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1816.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1816</LineStart>
<Snippet>
		case irrbRstriked:
			((CHP *)pprop)-&gt;grf.fDStrike = valUse;
			if (ppropGray)
				((CHP *)ppropGray)-&gt;grf.fDStrike = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6571">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 3421.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>3421</LineStart>
<Snippet>
		case irrbRdgvorigin:
			((DOP *)pprop)-&gt;dogrid.yaGrid = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DF7AB5C6ED5586E367EA22D5DC337AF8">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcInsDatabase() in pmhdata.cpp can crash the program by dereferencing a null pointer on line 1973.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhdata.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhdata.cpp</FilePath>
<LineStart>1973</LineStart>
<Snippet>				lppmd-&gt;iRecFrom = iRecMin;
			else
				lppmd-&gt;iRecFrom = *(RECNUM *)(*hcab)-&gt;iRecFrom;
			
			if (*(RECNUM *)(*hcab)-&gt;iRecTo == ulNinch)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="61D484506DD8979E5D7B212D7B224DEF">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrDispatchWTableWidthVal() in xmltbl.cpp can crash the program by dereferencing a null pointer on line 4357.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmltbl.cpp</FileName>
<FilePath>dev/word/core/xmltbl.cpp</FilePath>
<LineStart>4357</LineStart>
<Snippet>		&amp;&amp; pxssd-&gt;cnfc != cnfcWholeTable
		&amp;&amp; (bOffsetFts == offset(TAP, ftsCellPaddingDefaultLeft)
			|| bOffsetFts == offset(TAP, ftsCellPaddingDefaultRight)
			|| bOffsetFts == offset(TAP, ftsCellPaddingDefaultTop)
			|| bOffsetFts == offset(TAP, ftsCellPaddingDefaultBottom)))  </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4C6BF115ADF9BE72FF00DB8D7BE63BAA">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOamTableSplit() in obtable.cpp can crash the program by dereferencing a null pointer on line 3317.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obtable.cpp</FileName>
<FilePath>dev/word/client/desktop/obtable.cpp</FilePath>
<LineStart>3317</LineStart>
<Snippet>		{	
		hr = HrOaTableSplitAtRowObj(pidTable, pidRow, &amp;ca);
		pidRow-&gt;Release();
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="CF006882B139AB0BFBF1CF3E7D8DB413">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FinishSaveOnClose() in corout.cpp can crash the program by dereferencing a null pointer on line 997.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>corout.cpp</FileName>
<FilePath>dev/word/client/desktop/corout.cpp</FilePath>
<LineStart>997</LineStart>
<Snippet>	while ((pbsi = PbsiCur()) != pNil)
		{
		if (pbsi-&gt;pdod != pdodTracker)
			{
			pdodTracker = pbsi-&gt;pdod;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="7F5FC4ACEBDF451104444574DF73D4BD">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 3358.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>3358</LineStart>
<Snippet>			fTranslated = FLongFromLpchSpecial(prgch.Sz(), &amp;ldttm, fFalse /*fHex*/, pNil /*pich*/);
			AssertTag(fTranslated, 0x0035c084 /* tag_an2ce */);
			if (pchp-&gt;grf.fRMark)
				pchp-&gt;dttmRMark.dttm = ldttm;
			if (pchp-&gt;grf.fRMarkDel &amp;&amp; pchp-&gt;dttmRMarkDel.dttm == dttmNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64FC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1199.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1199</LineStart>
<Snippet>			break;
		case irrbRpnstart:
			((PAP *)pprop)-&gt;anld.iStartAt = valUse;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;anld.iStartAt = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="0B3E602E5936908288D78FE301C33C89">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdPickToolFace() in barcust.cpp can crash the program by dereferencing a null pointer on line 1528.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>barcust.cpp</FileName>
<FilePath>dev/word/client/desktop/barcust.cpp</FilePath>
<LineStart>1528</LineStart>
<Snippet>		itbbm = (ITBBM)(pcab-&gt;itbbm - 1);

		if (!pitb-&gt;FGetControl(ictl, &amp;tcr))
			{
			rerr = rerrBadParam;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C9ABB42884EB9036EA43072C224E6887">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOamDocumentGetLinkedControls() in obxml.cpp can crash the program by dereferencing a null pointer on line 11017.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obxml.cpp</FileName>
<FilePath>dev/word/client/desktop/obxml.cpp</FilePath>
<LineStart>11017</LineStart>
<Snippet>		FailHrGoto(E_FAIL, LRet);

	FailHrGoto(pimxsl-&gt;HrCreateXPath(&amp;bstrXPath), LRet);

	FailHrGoto(pimxsl-&gt;HrGetSelectionNamespaces(&amp;bstrPrefixMapping), LRet);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="626384FA8B536FAF93466961A0271F6B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaHandlerProp() in obrange.cpp can crash the program by dereferencing a null pointer on line 11849.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>11849</LineStart>
<Snippet>						else
							{
							hr = HrOaStyleApplyPrlSgc(pfont-&gt;obfmt.pie, grsr.grpprl, grsr.cb, sgcChp);
							}
						}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="995EABC399A73C5BBA0971D3B0CD6C39">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrSetDocumentOptions() in pmhclient.cpp can crash the program by dereferencing a null pointer on line 275.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhclient.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhclient.cpp</FilePath>
<LineStart>275</LineStart>
<Snippet>
	if ((fci == fciToolsCreateLabels ?
		TmcCreateLabels(&amp;cmb, hNil, lppmd-&gt;docMain, fTrue) :
		TmcCreateEnvelopes(&amp;cmb, lppmd-&gt;docMain, hNil, hNil)) == tmcOK)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6522">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1741.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1741</LineStart>
<Snippet>
		case irrbRsaveinvalidxml:
			((DOP *)pprop)-&gt;fSaveIfInvalidXML = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="2D8F79045B25DD6E64EB94AA283186E9">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function EidWritePistmHtmlCore() in htmlout.cpp can crash the program by dereferencing a null pointer on line 8581.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlout.cpp</FileName>
<FilePath>dev/word/core/htmlout.cpp</FilePath>
<LineStart>8581</LineStart>
<Snippet>		AssertTag(doc-&gt;pud-&gt;pioldoc == pbsi-&gt;pioldocOld || pbsi-&gt;pioldocOld == pNil, ASSERTTAG('lbmr'));

		if (pbsi-&gt;pioldoc != pNil)
			{
			doc-&gt;pud-&gt;pioldoc-&gt;Release();</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6537">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1896.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1896</LineStart>
<Snippet>			break;
		case irrbRhyphauto:
			((DOP *)pprop)-&gt;fAutoHyphen = !!valUse;
			break;
		case irrbRhyphcaps:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="71C6B15993B52A8D204E3A5BAE5A9CC4">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WbwMainDocType() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 10713.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>10713</LineStart>
<Snippet>	if (wpms != wpmsNorm || wpmsdt != 0)
		{
		ppmd-&gt;pms.wpms = wpms;
		ppmd-&gt;pms.wpmsdt = wpmsdt;
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="76BE23DDD2E2B4958A40F1EFBF986305">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FInitTdsdFromPaps() in tabs.cpp can crash the program by dereferencing a null pointer on line 868.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>tabs.cpp</FileName>
<FilePath>dev/word/client/desktop/tabs.cpp</FilePath>
<LineStart>868</LineStart>
<Snippet>		for (itbd = 0, cTabs = 0; itbd &lt; itbdMac; itbd++)
			{
			if (pNil == ppapGray || (rgdxaTabGray[itbd] == 0 &amp;&amp; rgtbdTabGray[itbd] == 0))
				{
				/* It's a good tab! */</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="7206CD736517FB21160A8908E85405EE">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdInsPicture() in pic2.cpp can crash the program by dereferencing a null pointer on line 1370.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pic2.cpp</FileName>
<FilePath>dev/word/client/desktop/pic2.cpp</FilePath>
<LineStart>1370</LineStart>
<Snippet>						break;

					ppibT = ppxPibMulti-&gt;PGet(i);
					XszToXstz(*ppxPwchFile-&gt;PGet(i), XstzCxch(xstzFile));
					MakeXstzRelativeToDoc(xstzFile, CxchMaxXstz(xstzFile), psel-&gt;ca.pdod);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B6755B340608012659E8303D51C8DE20">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDlgMrgOpts() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 5954.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>5954</LineStart>
<Snippet>					// Make sure Mail Addr is in the list of mergefields
					xstz[0] = CchGetTmcText(tmcMailAddr, XszFromXstz(xstz), CxchMaxXstz(xstz));
					if (!FSearchSttbUnsortedNcXst(lppmd-&gt;hsttbMergeFields, xstz, &amp;ibst))
						{
						ErrorEidMrtTag(eidNoMailAddress, &quot;FDlgMrgOpts&quot;, MsoReserveTag(0x005847dc /* tag_awe52 */)); </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="AF8907884F5217B4F42733EC8C6E67CF">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function SetFocus() in ole2srvr.cpp can crash the program by dereferencing a null pointer on line 5773.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ole2srvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ole2srvr.cpp</FilePath>
<LineStart>5773</LineStart>
<Snippet>		{
		if (FOsrcHostedByWord())
			::SetFocus(PmwdFromHwndApp(m_hWndEditor)-&gt;Hwnd());
		else
			::SetFocus(m_hWndEditor);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="685B36E40010415DDD28AE90265F4490">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdInsPicture() in pic2.cpp can crash the program by dereferencing a null pointer on line 1447.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pic2.cpp</FileName>
<FilePath>dev/word/client/desktop/pic2.cpp</FilePath>
<LineStart>1447</LineStart>
<Snippet>		vrf.fForceScrollAnimate = fTrue;

		PcaSetDcp(&amp;caInval, psel-&gt;ca.pdod, CpMax(CpFirstDocCp(psel-&gt;ca.pdod,
					psel-&gt;ca.cpFirst), psel-&gt;ca.cpFirst - 1), DCPPIC);
		InvalCp(&amp;caInval);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="61D484506DD8979E5D7B212D7B224DF1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrDispatchWTableWidthVal() in xmltbl.cpp can crash the program by dereferencing a null pointer on line 4359.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmltbl.cpp</FileName>
<FilePath>dev/word/core/xmltbl.cpp</FilePath>
<LineStart>4359</LineStart>
<Snippet>			|| bOffsetFts == offset(TAP, ftsCellPaddingDefaultRight)
			|| bOffsetFts == offset(TAP, ftsCellPaddingDefaultTop)
			|| bOffsetFts == offset(TAP, ftsCellPaddingDefaultBottom)))  
		{
		ptapSet = pxtd-&gt;ptapRow;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="21B7B2D200AC310E3FFBF5851DF3E64E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _FTranslateMacWordBkmks() in open.cpp can crash the program by dereferencing a null pointer on line 16303.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>open.cpp</FileName>
<FilePath>dev/word/core/open.cpp</FilePath>
<LineStart>16303</LineStart>
<Snippet>					{
					uchar *pchT;
					if (!FReallocHCb(hsz, (cbSzPrev = CbSz(*hsz)) + cbSwitch))
						goto LOOM;
					pchSz = *hsz + cbSzPrev - 1;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="0A48B62F0EB460E7A71528E93A9B84BB">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PropToRtfSgcCore() in rtfout.cpp can crash the program by dereferencing a null pointer on line 1129.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfout.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfout.cpp</FilePath>
<LineStart>1129</LineStart>
<Snippet>			case irrbRlang:	// language
				OACR_ASSUME(rrb.rrba == rrbaSpec); // by definition in rtftbl.h
				rrb.b = cof(lidBi);
				rrb.w = lidNoProof; // force difference
				break;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64EA">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 892.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>892</LineStart>
<Snippet>
		case irrbRrtlgutter:
			((SEP *)pprop)-&gt;pginfo.fRTLGutter = fTrue;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="9B29E367CE72F988DF2FCFA91EA2E221">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FEnsureInitSttbFontSub() in syschg.cpp can crash the program by dereferencing a null pointer on line 1015.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>syschg.cpp</FileName>
<FilePath>dev/word/core/syschg.cpp</FilePath>
<LineStart>1015</LineStart>
<Snippet>
	*phsttbKey = *phsttbKeyT;
	*phsttbResult = *phsttbResultT;

	return *phsttbKey != hNil;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="EAB95F0D2596B67A406DD7A20B11A7C4">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FWriteOneHtmlStyle() in htmlout.cpp can crash the program by dereferencing a null pointer on line 5767.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlout.cpp</FileName>
<FilePath>dev/word/core/htmlout.cpp</FilePath>
<LineStart>5767</LineStart>
<Snippet>				{
				// just let the style know what the external stylesheet did
				pstd-&gt;iftcHtml = iftcForFtc;
				}
			ElseNotReachedTag(ASSERTTAG('3xai'));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E936DEA3609C939A6523C11530054A36">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaFormatBorder() in obrange.cpp can crash the program by dereferencing a null pointer on line 18540.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>18540</LineStart>
<Snippet>			break;
		case wpropLineWeight:
			rgwopr[cwopr].elk = rgelk2[2][pobb-&gt;ibrc]; 	//weight
			break;
		case wpropColorRGB:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DEA1F4F7260154CF99866DBA3B95FD9B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IlpOvertype() in insloop.cpp can crash the program by dereferencing a null pointer on line 4617.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>insloop.cpp</FileName>
<FilePath>dev/word/client/shared/insloop.cpp</FilePath>
<LineStart>4617</LineStart>
<Snippet>			if (cchInput &gt; 0)
				{
				if (cchInput &gt; 1 &amp;&amp; MsoFWchHighSurrogate(xszInput[0]) &amp;&amp; MsoFWchLowSurrogate(xszInput[1]))
					{
					xchHighInsert = xszInput[0];</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="24117FA6F47D9E1A0EBBFC5D6A4C3946">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ForceCursorChangeSel() in cursor.cpp can crash the program by dereferencing a null pointer on line 1136.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cursor.cpp</FileName>
<FilePath>dev/word/client/shared/cursor.cpp</FilePath>
<LineStart>1136</LineStart>
<Snippet>			if (FHaveDrawingViewAndSelection(hpr))
				{
				IMsoDrawingSelection *pidgsl = (*hpr)-&gt;rgpidgv[IdgvCur()]-&gt;PidgslGetSelection();
				fGoto = fTrue;
				switch (pidgsl-&gt;DgslkGetSelectionMode(msogrfdgslNil))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B8EF4C7BED45CBFF11B7BD08766A4FAD">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IOleObjectClose() in ole2srvr.cpp can crash the program by dereferencing a null pointer on line 1399.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ole2srvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ole2srvr.cpp</FilePath>
<LineStart>1399</LineStart>
<Snippet>			{
			// kill the doc
			if (doc-&gt;hwwdDisp != hwwdNil || (FFramesetDoc(doc) &amp;&amp; PmwdFromDoc(doc)))
				{
				if (!FCloseAllWinsOfDoc(doc, ac, fcsVerifyForeign))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="FF33C1F9AC78BD75D641BFC33238ED02">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FFindXirmCore2() in xmlaml.cpp can crash the program by dereferencing a null pointer on line 1089.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmlaml.cpp</FileName>
<FilePath>dev/word/core/xmlaml.cpp</FilePath>
<LineStart>1089</LineStart>
<Snippet>	// for-loop, and so pxirmT points into the PL.
	AssertTag(iMac &gt; 0 &amp;&amp; pxirmT != pNil, ASSERTTAG('xmdy'));
	*pxirm = *pxirmT;
	DeleteFromPl(pxin-&gt;hplXirm, i);
	return fTrue;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="BBAB664454386C75276D9BFFC05FD669">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOamCellsAdd() in obtable.cpp can crash the program by dereferencing a null pointer on line 6827.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obtable.cpp</FileName>
<FilePath>dev/word/client/desktop/obtable.cpp</FilePath>
<LineStart>6827</LineStart>
<Snippet>	if (FMissingVarg(pvar))
		{
		punkSelect-&gt;Release();
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="21DBFEACECE6FD8489B131ADE3585359">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrRangeCreateShapeRange() in obrange.cpp can crash the program by dereferencing a null pointer on line 10401.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>10401</LineStart>
<Snippet>				try
					{
					paesi-&gt;AddOrSubtractE2o(Prie2oFromFigu(figucaen.figuExt.figu), fFalse/*fNotifyChange*/);
					}
				catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="0A48B62F0EB460E7A71528E93A9B84BC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PropToRtfSgcCore() in rtfout.cpp can crash the program by dereferencing a null pointer on line 1142.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfout.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfout.cpp</FilePath>
<LineStart>1142</LineStart>
<Snippet>				{
				// in assoc mode Ascii font size should be emitted in this case
				rrb.b = vfInAssoc? cof(hpsAscii) : cof(hps);
				rrb.w = -1; // force difference
				}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B8EFEC5A28C7E2784206D1D5A9E3716">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function RichEditWndProc() in dlgredt.cpp can crash the program by dereferencing a null pointer on line 1297.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlgredt.cpp</FileName>
<FilePath>dev/word/client/desktop/dlgredt.cpp</FilePath>
<LineStart>1297</LineStart>
<Snippet>			goto LRet;
			}
		if ((*lprtec-&gt;hwwd)-&gt;fFormatInspector)
			{
			PT ptT;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="89EF7A780C79C5F489312F76E6AC00A4">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function EidWriteDocXmlPistm() in xmlout.cpp can crash the program by dereferencing a null pointer on line 8631.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmlout.cpp</FileName>
<FilePath>dev/word/core/xmlout.cpp</FilePath>
<LineStart>8631</LineStart>
<Snippet>		pNode-&gt;AddRef();
		if (FAILED(hr) || pNode == pNil)
			goto _LFailXForm;
		pNodeXForm = pdomXForm-&gt;AsXMLDOMNode();
		pNodeXForm-&gt;AddRef();</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4C9DA7E2A11EB52DD08BF0DBD89AEC19">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdDeletePselCore() in cmdsel.cpp can crash the program by dereferencing a null pointer on line 2669.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdsel.cpp</FileName>
<FilePath>dev/word/client/shared/cmdsel.cpp</FilePath>
<LineStart>2669</LineStart>
<Snippet>
		if (psel-&gt;ca.cpLim &lt; CpMacPdod(psel-&gt;ca.pdod))
			FApplyIstdCore(ppapSav-&gt;istd, stkPara, fatlNil, &amp;psel-&gt;ca, faioNoCMaj);
		CacheParaSel(psel);
		fContextualSpacing = (vpapFetch.fContextualSpacing != fFalse);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="A10B0DEBE7C52253642CD8963BB995B7">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function InitNew() in ole2srvr.cpp can crash the program by dereferencing a null pointer on line 4574.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ole2srvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ole2srvr.cpp</FilePath>
<LineStart>4574</LineStart>
<Snippet>	// SetHostNames, but if they don't then provide a generic
	// unnamed title.
	if (!FMailEdServerObj(this) &amp;&amp; pfcb-&gt;lpfnmDisplay == lpNil)
		SetHostNames((LPOLESTR)szEmpty, (LPOLESTR)szEmpty);
	if (!FMailEdServerObj(this) &amp;&amp; lpStorage != lpNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="397F6C1D57D9D194C1E9B5D0BA97C6F2">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDeleteLeadingWhiteSpaceCa() in cmdcore.cpp can crash the program by dereferencing a null pointer on line 1686.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdcore.cpp</FileName>
<FilePath>dev/word/client/shared/cmdcore.cpp</FilePath>
<LineStart>1686</LineStart>
<Snippet>
		AssertTag(ccp &gt; 0, 0x00353090 /* tag_antcq */);
		xch = *pxch++;
		cpNext++;
		ccp--;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D5714DB8BC677C0358C4CA8093668ADB">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdMMFindEntry() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 12049.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>12049</LineStart>
<Snippet>			AssertTag(ppmd != pNil, ASSERTTAG('jqir'));

			ppmf = LppmfFromLppmd(ppmd, ppmd-&gt;pms.ipmfFetch);
			if(ppmf-&gt;pIMsoMailMerge)
				hr = ppmf-&gt;pIMsoMailMerge-&gt;HrDoFindDlg(vmsou.hMsoInst, HwndParentDlg(vhwndApp));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DCE5159C054FABE984F4DFFEA837390A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdKumimoji() in cmd3.cpp can crash the program by dereferencing a null pointer on line 5649.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>5649</LineStart>
<Snippet>	if (pcmb-&gt;fDialog)
		{
		pcab-&gt;hps = max(pcekumi-&gt;rbs.hps, hpsRubyMin);
		pcab-&gt;ftc = pcekumi-&gt;rbs.ftc;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6523">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1745.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1745</LineStart>
<Snippet>
		case irrbRshowxmlerrors:
			((DOP *)pprop)-&gt;fShowXMLErrors = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6514">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1679.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1679</LineStart>
<Snippet>			else // Continuation of Previous obj.
				{
			 	((CHP *)pprop)-&gt;fels.ufel = (**hribl).uFELRTFLast;
	 			((CHP *)pprop)-&gt;lFELayoutID = (**hribl).lFELIDRTFLast;
				}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="626384FA8B536FAF93466961A0271F6D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaHandlerProp() in obrange.cpp can crash the program by dereferencing a null pointer on line 12007.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>12007</LineStart>
<Snippet>				{
				IDTableStyle *pidTableStyle;
				int cnfc = UlOaGenericGetInstanceData(pfont-&gt;obfmt.pie);
						
				if (SUCCEEDED(hr = HrOamGenericGetParent(pfont-&gt;obfmt.pie, &amp;pidTableStyle)))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F656F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 3413.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>3413</LineStart>
<Snippet>
		case irrbRgutterprl:
			((DOP *)pprop)-&gt;iGutterPos = fTrue;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F23338312652F2DF26D28ACE4A4C87BA">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function NormCp() in disp3.cpp can crash the program by dereferencing a null pointer on line 5043.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>5043</LineStart>
<Snippet>				drcl = pdrdo-&gt;drcl;
			else
				drcl = pdr-&gt;drcl;
			}
		DrclToRcw(hpldr, &amp;drcl, &amp;rcw);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64FE">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1209.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1209</LineStart>
<Snippet>			break;
		case irrbRpnsp:
			((PAP *)pprop)-&gt;anld.dxaSpace  = valUse;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;anld.dxaSpace  = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="6F6AF0E279379C74AAEBC586E9791B45">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOamInlineShapesAddChartHelper() in obdoc.cpp can crash the program by dereferencing a null pointer on line 17914.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obdoc.cpp</FileName>
<FilePath>dev/word/client/desktop/obdoc.cpp</FilePath>
<LineStart>17914</LineStart>
<Snippet>	if (!fUseSelCur)
		{
		pidrange-&gt;Release();
		if (FAILED(HrCreateRangeFromPca(PunkDocumentFromPdod(caDest.pdod), &amp;caDest, (IDispatch **)&amp;pidrange)))
			goto LErrRet;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="723103ED0C3B753FA95930FE27BB7A09">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _EidLaunchBkgndSave() in savebin.cpp can crash the program by dereferencing a null pointer on line 2717.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>savebin.cpp</FileName>
<FilePath>dev/word/core/savebin.cpp</FilePath>
<LineStart>2717</LineStart>
<Snippet>						}
					AssertTag(pbsiPrev != pNil, ASSERTTAG('edtb'));
					pbsiPrev-&gt;pbsiNext = pbsi;
					}
LEndLoop:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="2BEB09B1B3A80ECA066F83E39F1EE38F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IdOurMessageBoxEidCxt() in prompt.cpp can crash the program by dereferencing a null pointer on line 179.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>prompt.cpp</FileName>
<FilePath>dev/word/client/fastmodel/prompt.cpp</FilePath>
<LineStart>179</LineStart>
<Snippet>	else
		{
		MOX::UseDialogManager().DisplayBlockingDialog(Mso::ApplicationModel::CurrentAppFrameApp().UseExecutionContext(), *DialogInfo.Get());
		UINT uiSelectedBtnId = 0;
		DialogInfo-&gt;get_DialogResult(&amp;uiSelectedBtnId);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="69EBD073A1C7107459CEA4208BA8DD41">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function SaveCoroutine() in corout.cpp can crash the program by dereferencing a null pointer on line 1049.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>corout.cpp</FileName>
<FilePath>dev/word/client/shared/corout.cpp</FilePath>
<LineStart>1049</LineStart>
<Snippet>	while ((pbsi = PbsiCur()) != pNil)
		{
		pdod = pbsi-&gt;pdod;
		if (!fOleInitialized)
	 		fOleInitialized = SUCCEEDED(CoInitializeEx(pNil, COINIT_APARTMENTTHREADED));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="80115FF68C53EFBB50E79444726B19D1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdEnvelopesLabels() in envelope.cpp can crash the program by dereferencing a null pointer on line 988.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>envelope.cpp</FileName>
<FilePath>dev/word/client/desktop/envelope.cpp</FilePath>
<LineStart>988</LineStart>
<Snippet>					(*hcab)-&gt;fPgPrn = !ppgsprod-&gt;fDotMatrixLabel;
					(*hcab)-&gt;dwProdID = ppgsprod-&gt;dwID;
					(*hceenvlabel)-&gt;fValid = fFalse;
					goto LReset;
					}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6550">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2534.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2534</LineStart>
<Snippet>			break;
		case irrbRpcHorz:
			((PAP *)pprop)-&gt;pcHorz = valUse;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;pcHorz = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F4A5049D3B3F14ED75AFE2E9D1D79B47">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function OurEnumFontFamiliesEx() in rtfont.cpp can crash the program by dereferencing a null pointer on line 532.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfont.cpp</FileName>
<FilePath>dev/word/client/fastmodel/rtfont.cpp</FilePath>
<LineStart>532</LineStart>
<Snippet>		if (SUCCEEDED(hr))
			{
			hr = pFont-&gt;GetFontFamily(&amp;pFamily);
			AssertTag(SUCCEEDED(hr) &amp;&amp; pFamily != pNil, 0x0058c31e /* tag_awmm4 */);
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6529">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1842.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1842</LineStart>
<Snippet>		case irrbRexpndtw:
			// dxaSpace emitted in twips.
			((CHP *)pprop)-&gt;dxaSpace = valUse;
			if (ppropGray)
				((CHP *)ppropGray)-&gt;dxaSpace = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F4409428B148CC22134B8833D339C0DA">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FOpenExternalFnm() in dlgopen.cpp can crash the program by dereferencing a null pointer on line 2441.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlgopen.cpp</FileName>
<FilePath>dev/word/client/desktop/dlgopen.cpp</FilePath>
<LineStart>2441</LineStart>
<Snippet>
				((CABOPEN *)PcabFromHcab(hcabT))-&gt;iDocumentDirection = vpref.fRTLOpen ? 1 : 0;
				((CABOPEN *)PcabFromHcab(hcabT))-&gt;cpgOpen = pdod-&gt;pud-&gt;cpgOpenText;

				((CABOPEN *)PcabFromHcab(hcabT))-&gt;fSabME = FRevealEditBiDi(); // O10 BN 253285</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D039D92B3CFE59EA1C60A97203759F0C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrGetDocumentSetup() in pmhclient.cpp can crash the program by dereferencing a null pointer on line 325.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhclient.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhclient.cpp</FilePath>
<LineStart>325</LineStart>
<Snippet>		{
		lppmd = LppmdFromPdod(pdodMain);
		*fSetup = lppmd-&gt;pms.rfs.fMainDocSetup;
		}
	return hr;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C5F53D700592239A356729BDC8856339">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function LoadTxbxs() in oarth.cpp can crash the program by dereferencing a null pointer on line 1515.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oarth.cpp</FileName>
<FilePath>dev/word/core/oarth.cpp</FilePath>
<LineStart>1515</LineStart>
<Snippet>
	FIGU figu = FiguBuild();
	figu.pdod = pxin-&gt;pdod;
	figu.pdre  = PdreFromPwdre(prShapeDE);
	figu.figuk = figukPdodPdre;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F650D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1634.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1634</LineStart>
<Snippet>
		case irrbRcharscalex:
			((CHP *)pprop)-&gt;pctCharWidth = valUse;
			if (ppropGray)
				((CHP *)ppropGray)-&gt;pctCharWidth = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="2D4A717DCBA3B488B2653EFB63B150BB">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdFixSpelling() in spell.cpp can crash the program by dereferencing a null pointer on line 10052.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>10052</LineStart>
<Snippet>
		// change caFix if the replacement has a dot in the end
		if (caFix.cpLim &gt; pspsc-&gt;cpFirstTest &amp;&amp; (xstzT[xstzT[0]] == xchDot) &amp;&amp; 
				(pspsc-&gt;xszTestWord[caFix.cpLim - pspsc-&gt;cpFirstTest - 1] != xchDot) &amp;&amp; 
				(XchFetch(selCur.ca.pdod, caFix.cpLim, fcmChars) == xchDot))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="95897244DECD4B8C0551F32A9513BB9C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FPropToRtfSpecMacPlusCore() in rtfout.cpp can crash the program by dereferencing a null pointer on line 1864.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfout.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfout.cpp</FilePath>
<LineStart>1864</LineStart>
<Snippet>					}
				brc = *pbrc;
				FWriteRtfKeyword(prebl, mpibrcisz[ibrc]);
				FlushRebl(prebl);
				if (FBrcNil(pbrc))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64F5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1118.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1118</LineStart>
<Snippet>			break;
		case irrbRpnscaps:
			((PAP *)pprop)-&gt;anld.fSetSmallCaps = fTrue;
			((PAP *)pprop)-&gt;anld.fSetCaps      = fTrue;
			((PAP *)pprop)-&gt;anld.fSmallCaps    = fTrue;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D2C956BAAEC7DEF97785AB63DCB7E497">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function SaveIdle() in savebin.cpp can crash the program by dereferencing a null pointer on line 9343.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>savebin.cpp</FileName>
<FilePath>dev/word/core/savebin.cpp</FilePath>
<LineStart>9343</LineStart>
<Snippet>		// message and ask the user if they want to save the doc
		// in the foreground
		pdod = pbsi-&gt;pdod;
		pdodDisp = pbsi-&gt;pdodSrc;
		</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F654F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2529.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2529</LineStart>
<Snippet>			break;
		case irrbRtpcVert:
			((TAP *)pprop)-&gt;pc.pcVert = valUse;
			if (ppropGray)
				((TAP *)ppropGray)-&gt;pc.pcVert = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64F2">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1096.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1096</LineStart>
<Snippet>			break;
		case irrbRpnprev:
			((PAP *)pprop)-&gt;anld.fPrev = (!fHaveVal) ? fTrue : (val != 0);
			((PAP *)pprop)-&gt;anld.fPrev = 0;
			break;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="60BCCDE3F06345A5425FB628784ECC8C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FEmbedFileContents() in olesubs2.cpp can crash the program by dereferencing a null pointer on line 5952.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>olesubs2.cpp</FileName>
<FilePath>dev/word/client/desktop/olesubs2.cpp</FilePath>
<LineStart>5952</LineStart>
<Snippet>			{
			// Get any file inforamation for this item
			lpFileDescriptorW = &amp;(lpFileGroupDescriptorW-&gt;fgd[iItem]);
			XszToXstz(lpFileDescriptorW-&gt;cFileName, xstzObjName, CxchMaxXstz(xstzObjName));
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6561">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2641.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2641</LineStart>
<Snippet>			
		case irrbRfrmtx:
			((PAP *)pprop)-&gt;grpf = (valUse &amp; grpfFlowMask);
			if (ppropGray)
				((PAP *)ppropGray)-&gt;grpf = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E4B5E6CDF0E98C13A97C242494A89609">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FWriteFactoidSpanClose() in htmlout.cpp can crash the program by dereferencing a null pointer on line 1267.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlout.cpp</FileName>
<FilePath>dev/word/core/htmlout.cpp</FilePath>
<LineStart>1267</LineStart>
<Snippet>		if (pwhcd != pNil)
			{
			if (pwhcd-&gt;fFactoidParent)
				{
				if (pwhcd-&gt;ibst == ibst)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64D9">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 549.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>549</LineStart>
<Snippet>	case rrbaByte:
CaseByte:
		pprop[rrb.b] = valUse;
		if (ppropGray)
			ppropGray[rrb.b] = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="626384FA8B536FAF93466961A0271F70">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaHandlerProp() in obrange.cpp can crash the program by dereferencing a null pointer on line 12411.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>12411</LineStart>
<Snippet>		if (fParentIsListLevel)
			{
			OBLVL *poblvl = (OBLVL *)LpvOaGenericGetInstanceData(pfont-&gt;obfmt.pie);
			CHP chpNew;
			CHP chpGrayNew;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F654C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2501.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2501</LineStart>
<Snippet>			// if we got a \cellx for cell 31, itcMac will be set to 31
			// following borders, etc will be tossed out.
			if (((TAP *)pprop)-&gt;itcMac &lt;= itcMax - 2)
				SetShdNil(&amp;(((TAP *)pprop)-&gt;rgtc[((TAP *)pprop)-&gt;itcMac].shdRaw));
			break;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="2D4A717DCBA3B488B2653EFB63B150BC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdFixSpelling() in spell.cpp can crash the program by dereferencing a null pointer on line 10070.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>10070</LineStart>
<Snippet>		if (DcpCa(&amp;caFix))
			{
			if(pspsc-&gt;apSrb.sstat == AppLevelProofing::sstatOutOfContext)
				{
				CA caDirty;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6579">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 3457.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>3457</LineStart>
<Snippet>
		case irrbRnooverflow:
			((PAP *)pprop)-&gt;fOverflowPunct = fFalse;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;fOverflowPunct = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64E0">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 732.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>732</LineStart>
<Snippet>			break;
		case irrbRjc:	// read logical jc; overrides Kashida justification
			((PAP *)pprop)-&gt;jc = (((PAP *)pprop)-&gt;fBiDi &amp;&amp; (valUse == jcLeft || valUse == jcRight)) ? 
									(valUse == jcLeft ? jcRight : jcLeft) : valUse;
			if (ppropGray)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64E9">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 824.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>824</LineStart>
<Snippet>			break;
		case irrbRtblindtype:
			((TAP *)pprop)-&gt;ftsWidthIndent = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="CD0C4C96FF5A745B9C64C53894F9C61E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListStyles() in stylecmd.cpp can crash the program by dereferencing a null pointer on line 8627.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stylecmd.cpp</FileName>
<FilePath>dev/word/client/desktop/stylecmd.cpp</FilePath>
<LineStart>8627</LineStart>
<Snippet>
			fSelected = fBitmap &amp;&amp; 
						((istd == pcesty-&gt;rgIstdSel[stk-1][0] &amp;&amp;
										pcesty-&gt;rgIstdSel[stk-1][1]));
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="BE1A2857D0908455EE4A577A559F4E2F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdTatenakayoko() in cmd3.cpp can crash the program by dereferencing a null pointer on line 4926.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>4926</LineStart>
<Snippet>		{
		bool fRestore = fFalse;
		if (pcefels-&gt;ca.pdod == pdodNil)
			{ // o14 #457893
			FSetupFEObj(psel, &amp;pcefels-&gt;ca, &amp;pcefels-&gt;cpSave, itypTNY);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="3CA1969DC2E22FDE5ABEA08ECB7A81A2">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCkMarginsSect() in pgsetup.cpp can crash the program by dereferencing a null pointer on line 3555.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pgsetup.cpp</FileName>
<FilePath>dev/word/client/desktop/pgsetup.cpp</FilePath>
<LineStart>3555</LineStart>
<Snippet>		else
			{
			if (pcabpgsetup-&gt;iGutterPos == iParaGutter)
				fSideGutter = (dmOrientPage != dmOrientFirst);
			else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6562">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2664.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2664</LineStart>
<Snippet>					if (ptap-&gt;itcMac &lt;= 0)
						valUse = czaInch/4;
					else if(((TAP *) pprop)-&gt;rgdxaCenter[ptap-&gt;itcMac] +
						czaMax/itcMax &lt; czaMax)
						{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="62CAAEA67738A316612A93EA39AADD2F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WriteArtosToByteStream() in oartxmlB.cpp can crash the program by dereferencing a null pointer on line 168.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartxmlB.cpp</FileName>
<FilePath>dev/word/core/oartxmlB.cpp</FilePath>
<LineStart>168</LineStart>
<Snippet>
					// Add the dk as an attribute, with an unsigned int value
					LongToXstz(pdod-&gt;dk, XstzCxch(xstzNum));
					hr = pimsaxw-&gt;HrAddAttributeWzValue(ArtoReader::xnsarto, ArtoReader::xmltkaARTOdk, XszFromXstz(xstzNum), CxchXstz(xstzNum));
					Ofc::CHResultException::ThrowIfFailed( hr );</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="7206CD736517FB21160A8908E85405EF">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdInsPicture() in pic2.cpp can crash the program by dereferencing a null pointer on line 1404.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pic2.cpp</FileName>
<FilePath>dev/word/client/desktop/pic2.cpp</FilePath>
<LineStart>1404</LineStart>
<Snippet>						break;

					ppibT = ppxPibMulti-&gt;PGet(i);
					XszToXstz(*ppxPwchFile-&gt;PGet(i), XstzCxch(xstzFile));
					MakeXstzRelativeToDoc(xstzFile, CxchMaxXstz(xstzFile), psel-&gt;ca.pdod);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6513">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1671.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1671</LineStart>
<Snippet>				else
					{
					((CHP *)pprop)-&gt;fels.fWarichu = fTrue;
					((CHP *)pprop)-&gt;fels.iWarichuBracket = valUse;
					}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="8DDC4FFBDD2F8C58D288E1035D774917">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCanAutoCloseTag() in htmlout.cpp can crash the program by dereferencing a null pointer on line 2741.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlout.cpp</FileName>
<FilePath>dev/word/core/htmlout.cpp</FilePath>
<LineStart>2741</LineStart>
<Snippet>		if ((ihtk == msoihtkA &amp;&amp;
			 (pwhcd == pNil ||
			  (pwhcd-&gt;fHyperlink
			   &amp;&amp; ihtkMatch == msoihtkNil
			   &amp;&amp; ((phtoMatch == pNil || *phtoMatch == msohtoNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DCE5159C054FABE984F4DFFEA8373909">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdKumimoji() in cmd3.cpp can crash the program by dereferencing a null pointer on line 5596.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>5596</LineStart>
<Snippet>	if (pcmb-&gt;fDefaults)
		{
		if (FAssign(pcekumi-&gt;fKumimoji = FFetchKumimoji(psel-&gt;ca.pdod, psel-&gt;ca.cpFirst, &amp;pcekumi-&gt;rbs)))
			{
			pcekumi-&gt;cpSave = pcekumi-&gt;rbs.caRuby.cpFirst;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="402CF1FEC3B24FB05C3C4A3F7478B7B2">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function GetAllConsistencyErrors() in consis.cpp can crash the program by dereferencing a null pointer on line 1479.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>consis.cpp</FileName>
<FilePath>dev/word/client/desktop/consis.cpp</FilePath>
<LineStart>1479</LineStart>
<Snippet>			ahdd.pdodMain = PdodMain(ca.pdod);
			ahdd.icksSrc = icks;
			DLLCheckEnumHandles(pgrld-&gt;ncl.nlcid, ca.pdod, cks.nlch, &amp;FAddHandleToDlg, &amp;ahdd);

			nlcid = cks.nlcid;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6518">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1696.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1696</LineStart>
<Snippet>
		case irrbRbookfoldsheets:
			((DOP *)pprop)-&gt;iFolioPages = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="15B08B469EF3B8884442F817CCB2EC68">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdEnvelopeSetup() in envelope.cpp can crash the program by dereferencing a null pointer on line 6734.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>envelope.cpp</FileName>
<FilePath>dev/word/client/desktop/envelope.cpp</FilePath>
<LineStart>6734</LineStart>
<Snippet>			if (CmdInitCmb(&amp;cmb, fci, hNil, fccoNormal) != cmdOK)
				return cmdOK;
			if (WpmsdtFromDoc(lppmd-&gt;docMain) &amp; wpmsdtEnvelope)
				{
				if (TmcCreateEnvelopes(&amp;cmb, lppmd-&gt;docMain, hNil, hNil) == tmcOK)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="24C6D361EE239E035D74C0C1CFDE7CAB">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function RulerMarkWndProc() in rulerdrw.cpp can crash the program by dereferencing a null pointer on line 584.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rulerdrw.cpp</FileName>
<FilePath>dev/word/client/desktop/rulerdrw.cpp</FilePath>
<LineStart>584</LineStart>
<Snippet>		if (lprsd == pNil)
			break;
		bool fVerticalRuler = lprsd-&gt;hwndRulerVert == hwndMark;
		RulerHandleMouseMove(vhwwdCur, PrsdFromHwndRuler(hwndMark), ptT, fVerticalRuler, wParam);
		return 0L;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="0F09BCF2F021BC717F71ECD2C13413A4">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdKumimoji() in cmd3.cpp can crash the program by dereferencing a null pointer on line 5578.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>5578</LineStart>
<Snippet>			return cmdError;
		pcmb-&gt;pv = pcekumi;
		pcab-&gt;pcekumi = pcekumi;
		ClearBytes(pcekumi, sizeof(CEKUMI));
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B59B22828CEB66C3795419A462D8322C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDisplayGramError() in grammar.cpp can crash the program by dereferencing a null pointer on line 8049.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>grammar.cpp</FileName>
<FilePath>dev/word/client/desktop/grammar.cpp</FilePath>
<LineStart>8049</LineStart>
<Snippet>			{
			GELI *lpgeli= &amp;pgrss-&gt;glbxSugg.rggeli[pgrss-&gt;glbxSugg.igeliSel];
			int ea = fNlCheck ? pueb-&gt;ceb.rgceo[lpgeli-&gt;gelichk.iceo].cea :
						   		pueb-&gt;geb.rggeo[lpgeli-&gt;igeo].gea;
			MsoCompileAssert(cbof(CEA) &lt;= cbof(int) &amp;&amp; </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="15963D94EF68D33E2B0E41963585AB50">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function NormCp() in disp3.cpp can crash the program by dereferencing a null pointer on line 5509.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>5509</LineStart>
<Snippet>						if (fDrg)
							{
							if (!pdrg-&gt;piid-&gt;FGetNormCpRect(pdrg, &amp;drcl))
								drcl = pdrg-&gt;drcl;
							}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DA93BEC038AC1B27BB3CCD678E657FA8">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdRuby() in cmd3.cpp can crash the program by dereferencing a null pointer on line 3344.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>3344</LineStart>
<Snippet>	if (pcmb-&gt;fDialog)
		{
		FillRubyArray(pceruby, &amp;psel-&gt;ca, fFalse, &amp;pceruby-&gt;fRubyFound);
		pcab-&gt;hps = max(pceruby-&gt;rgrbs[0].hps, hpsRubyMin);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="9B186B703C89D5088FDD6DE23E833B72">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrWriteMetroEmbeddedFont() in metroout.cpp can crash the program by dereferencing a null pointer on line 250.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>metroout.cpp</FileName>
<FilePath>dev/word/client/win32/metroout.cpp</FilePath>
<LineStart>250</LineStart>
<Snippet>
_LSubsetFailed:
			if ((wEmbedErr == E_SUBSETTINGFAILED &amp;&amp; (pwchSubset != pNil || pwchGlyphs != pNil || pwchGlyphSubset != pNil || pmesi-&gt;rgttmbdsub[i].fFull))
				|| (wEmbedErr == S_FALSE &amp;&amp; pwchSubset == pNil))
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F656A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 3287.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>3287</LineStart>
<Snippet>
			if (hsttb == hsttbNil || valUse &gt;= IbstMacSttb(hsttb))
				((CHP *)pprop)-&gt;ibstshortRMark = 0;
			else
				{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64EB">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 993.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>993</LineStart>
<Snippet>				ilfoNew = valUse;
				} /* if (hqlkidListilfo == hqNil) */
			((PAP *)pprop)-&gt;ilfo = ilfoNew;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;ilfo = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="94BB0D4AD8064DCBB1E96920CAEA6341">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FInsFtnEdn() in footnote.cpp can crash the program by dereferencing a null pointer on line 167.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>footnote.cpp</FileName>
<FilePath>dev/word/client/desktop/footnote.cpp</FilePath>
<LineStart>167</LineStart>
<Snippet>			{
			// hplcfnd represents both itself and hplcedn
			hplcfnd = docSub-&gt;hplcfnd;
			cpNoteNew = CpPlc(hplcfnd, IInPlc(hplcfnd, cpRefNew));
			AdjustSdtCpFromBlockLevelTag(docSub, &amp;cpNoteNew);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="43F74D401D9148DC0C5AB937B875C72D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FserrFinalizeLrgs() in fslayout.cpp can crash the program by dereferencing a null pointer on line 9301.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fslayout.cpp</FileName>
<FilePath>dev/word/core/fslayout.cpp</FilePath>
<LineStart>9301</LineStart>
<Snippet>				a table header */
			if (ptxxPrev-&gt;fTableHeader &amp;&amp; !ptxx-&gt;fTableHeader
					&amp;&amp; plrgTextPrev-&gt;xl == plrg-&gt;xl
					&amp;&amp; plrgTextPrev-&gt;dxl == plrg-&gt;dxl
					&amp;&amp; plrgTextPrev-&gt;yl + plrgTextPrev-&gt;dyl == plrg-&gt;yl)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E2E85A37F6EAA2B1E24639EB8BF18E70">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function MBuildTextDrForGoodClient() in pagevw.cpp can crash the program by dereferencing a null pointer on line 3892.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pagevw.cpp</FileName>
<FilePath>dev/word/client/shared/pagevw.cpp</FilePath>
<LineStart>3892</LineStart>
<Snippet>			pdr-&gt;lrk = lrkAbsHit;

		pdr-&gt;cpLim = max(ptxx-&gt;cpLim, pdr-&gt;cpLim);
		if (pdr-&gt;hplcedl != hplcNil)
			PutCpPlc(pdr-&gt;hplcedl, IMacPlc(pdr-&gt;hplcedl), pdr-&gt;cpLim);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="EA7B2882899DF2BA95014BAE511FB5B9">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function D2D1RtDrawGdiInteropBitmap() in rtd2d_gdi.cpp can crash the program by dereferencing a null pointer on line 228.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_gdi.cpp</FileName>
<FilePath>dev/word/client/win32/rtd2d_gdi.cpp</FilePath>
<LineStart>228</LineStart>
<Snippet>		// (See the MSDN page on CopyFromMemory, the discussion about batch flushing).
		// I think it's ok to pay attention to it.
		hr = pBitmap-&gt;CopyFromMemory(pNil, lpvBits != pNil ? lpvBits : bm.bmBits, bm.bmWidth * 4);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F654B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2491.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2491</LineStart>
<Snippet>			// if we got a \cellx for cell 31, itcMac will be set to 31
			// following borders, etc will be tossed out.
			if (((TAP *)pprop)-&gt;itcMac &lt;= itcMax - 2)
				{
				pshd = &amp;(((TAP *)pprop)-&gt;rgtc[((TAP *)pprop)-&gt;itcMac].shdRaw);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B8A06C66BE594433FA34324D4CF05DC4">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BpscBulletProofGlobalState() in blltprf.cpp can crash the program by dereferencing a null pointer on line 9182.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>blltprf.cpp</FileName>
<FilePath>dev/word/client/desktop/blltprf.cpp</FilePath>
<LineStart>9182</LineStart>
<Snippet>
	MsoUpdateBpsc(&amp;bpsc, MsoBpscBulletProofLinkedList(&amp;msobpcb, (BYTE **)&amp;vpcaleHead, cbCALE, 
							offset(CALE, pcaleNext), pNil, pNil));
	MsoUpdateBpsc(&amp;bpsc, MsoBpscBulletProofLinkedList(&amp;msobpcb, (BYTE **)&amp;vpselsleHead, cbSELSLE, 
							offset(SELSLE, pselsleNext), pNil, pNil));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F656B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 3317.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>3317</LineStart>
<Snippet>				if (paxtl-&gt;ibstpair.ibstshortGlobal != ibstshortNil)
					{
					((CHP *)pprop)-&gt;ibstshortRMark = paxtl-&gt;ibstpair.ibstshortGlobal;
					AssertTag(paxtl-&gt;ibstpair.ibstshortDelete == ibstshortNil, 0x0035c063 /* tag_an2b9 */);
					AssertTag(paxtl-&gt;ibstpair.ibstshortInsert == ibstshortNil, 0x0035c080 /* tag_an2ca */);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6538">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1899.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1899</LineStart>
<Snippet>			break;
		case irrbRhyphcaps:
			((DOP *)pprop)-&gt;fHyphCapitals = !!valUse;
			break;
		case irrbRpgnx:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="8183384C0F7D477353931D53053F2348">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FKeepOcxLoaded() in edit.cpp can crash the program by dereferencing a null pointer on line 1349.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>edit.cpp</FileName>
<FilePath>dev/word/core/edit.cpp</FilePath>
<LineStart>1349</LineStart>
<Snippet>		if (lpnewobjSrc-&gt;fLoadHtml &amp;&amp; pxsr-&gt;pcaIns-&gt;pdod != vpdodAutoSigCache)
			{
			if (lpnewobjSrc-&gt;iodt != iodtNil)
				{
				LPODT lpodt = LpodtFromIodt(lpnewobjSrc-&gt;iodt);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="1947BF83D13208CEFF8B48CA85541161">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TVParentWndProc() in xmlschema.cpp can crash the program by dereferencing a null pointer on line 2927.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmlschema.cpp</FileName>
<FilePath>dev/word/client/desktop/xmlschema.cpp</FilePath>
<LineStart>2927</LineStart>
<Snippet>		{
  		HCABXmlDocMap hcab = (HCABXmlDocMap) GetWindowLongPtr(hwnd, GWLP_USERDATA);
		PDOD pdod = (*hcab)-&gt;pdod;
		LPNMHDR plvi = (LPNMHDR)lParam;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B4E2F8C1C710BEA1E399D2417106583B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2033.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2033</LineStart>
<Snippet>		case irrbRlandscape:
			AssertTag (rrb.pgc == pgcDopSep, 0x0035c00d /* tag_an2an */);
			pdopsep-&gt;dmOrientPage = psep-&gt;dmOrientPage = dmOrientLandscape;
			break;
		case irrbRpaperw:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D9A9AA51875411F85E1C8A10DECC6A31">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FMergePlrsid() in rsid.cpp can crash the program by dereferencing a null pointer on line 599.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rsid.cpp</FileName>
<FilePath>dev/word/core/rsid.cpp</FilePath>
<LineStart>599</LineStart>
<Snippet>					{
					if (fAddToUpdate)
						*prsidWriteUpdate-- = *prsidReadB;
					*prsidWrite-- = *prsidReadB--;
					}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6510">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1654.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1654</LineStart>
<Snippet>
		case irrbRhres:
			((CHP *)pprop)-&gt;hresi.hres = valUse;
			break;
		case irrbRchhres:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="377089531F1CE3AB6A82A80CB2DA9375">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FUpdateSessionIfDocumentChanged() in proofing.cpp can crash the program by dereferencing a null pointer on line 112.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>proofing.cpp</FileName>
<FilePath>dev/word/client/desktop/proofing.cpp</FilePath>
<LineStart>112</LineStart>
<Snippet>			if (fProofingPaneOnDifferentWindow)
				{
				ProofingPaneMode eMode = pProofingPane-&gt;GetMode();
				if (eMode == ppmSpelling || eMode == ppmGrammar)
					EnableQueuedBBCommands();</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6506">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1304.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1304</LineStart>
<Snippet>			// this replaces both x, y. Overridden by dfromtxtx, y
		case irrbRdxfrtext:
			((PAP *)pprop)-&gt;dxaFromText = valUse;
			((PAP *)pprop)-&gt;dyaFromText = valUse;
			if (ppropGray)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="003550CB6226FB6E2707B4752CD2283C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Cleanup() in osfom.cpp can crash the program by dereferencing a null pointer on line 925.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>osfom.cpp</FileName>
<FilePath>dev/word/client/desktop/osfom.cpp</FilePath>
<LineStart>925</LineStart>
<Snippet>	while(m_lqOsfOmCmd.FDequeue(&amp;pArgs))
		{
		pArgs-&gt;SetErrorResult(ooeShuttingDown);
		pArgs-&gt;CallComplete();
		SafeRelease(pArgs);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="626384FA8B536FAF93466961A0271F68">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaHandlerProp() in obrange.cpp can crash the program by dereferencing a null pointer on line 11464.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>11464</LineStart>
<Snippet>			else
				{
				if (FAILED (hr = HrOaStyleGetChpPap(pfont-&gt;obfmt.pie, &amp;chp, &amp;pap)))
					goto LRet;
				}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6519">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1704.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1704</LineStart>
<Snippet>
		case irrbRtrackmoves:
			((DOP *)pprop)-&gt;fRMTrackMoves = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F67A919FF5BF9E2D058830AC4A9ACC12">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrDispatchWTablePosition() in xmltbl.cpp can crash the program by dereferencing a null pointer on line 4543.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmltbl.cpp</FileName>
<FilePath>dev/word/core/xmltbl.cpp</FilePath>
<LineStart>4543</LineStart>
<Snippet>
	hr = HrTranslateTableAttributeLong(pxin, pxtd, pAttr, 
			xmltkaWTablePosTopFromText, offset(TAP, dyaFromText));

	if (FAILED(hr))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="415319EAA949E5D8E6942C3E6750553D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOamCommandExecBeginCore() in obgenric.cpp can crash the program by dereferencing a null pointer on line 2572.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obgenric.cpp</FileName>
<FilePath>dev/word/client/desktop/obgenric.cpp</FilePath>
<LineStart>2572</LineStart>
<Snippet>			uat	= uatActionRecords;
LBeginUndo:
			if (!FBeginUndoVBACore(uat, fci, psels, *phwwd, obi, dispid))
				{
				return HrFromRerr(rerrCAPIModeError);  // REVIEW cathh (cathh) return appropriate error</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E8EA6C65419231432C1D8287D95D04C4">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FRefineRxvFromPxch() in rxv.cpp can crash the program by dereferencing a null pointer on line 441.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rxv.cpp</FileName>
<FilePath>dev/word/core/rxv.cpp</FilePath>
<LineStart>441</LineStart>
<Snippet>				AssertSzTag(fFalse, &quot;MSORPV.xstzVal exceeds 64K&quot;, 0x002a2503 /* tag_ak8ud */);
				prxv-&gt;cchVal = ushortLast;
				xszValue[ushortLast + 1] = '\0';
				}
			xszValue[0] = (XCHAR)(prxv-&gt;cchVal);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64DB">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 689.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>689</LineStart>
<Snippet>
		case irrbRtaprtl:
			((TAP *)pprop)-&gt;fRTL = fTrue;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F655E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2624.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2624</LineStart>
<Snippet>			break;
		case irrbRtdyaAbsSpec:
			((TAP *)pprop)-&gt;dyaAbs = -valUse;
			if (ppropGray)
				((TAP *)ppropGray)-&gt;dyaAbs = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="0029E60A0894A97F6AFB9691A1DB7E2C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FtcFromPetkPcvsCore() in htmlsupp.cpp can crash the program by dereferencing a null pointer on line 5657.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlsupp.cpp</FileName>
<FilePath>dev/word/core/htmlsupp.cpp</FilePath>
<LineStart>5657</LineStart>
<Snippet>			// Throw away leading and trailing whitespace.
			//
			while (MsoFSpaceWch(*pxch))
				{
				if (++pxch &gt; pxchT)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="A442D3A6F4A6B4FE3D9394E4FAD71073">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDisplay() in acetate.cpp can crash the program by dereferencing a null pointer on line 4820.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>acetate.cpp</FileName>
<FilePath>dev/word/client/desktop/acetate.cpp</FilePath>
<LineStart>4820</LineStart>
<Snippet>	case mSelectedSpan:
		fSelected = fFalse;
		psel-&gt;fDrgSelected = fTrue; // so we know to inval when the selection changes
		break;
	case mSelectedNo:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C75B237921C1DBBCB3E0E30029780C5A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FSwitchHdrsHpr() in disp3.cpp can crash the program by dereferencing a null pointer on line 7433.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>7433</LineStart>
<Snippet>			{
			fSwitched |= FSwitchHdrHpr(pdodHdr,
							CpPlc(pdodHdr-&gt;hplchdd, rgihdd[i]), hpr);
			}
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DA93BEC038AC1B27BB3CCD678E657FA7">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdRuby() in cmd3.cpp can crash the program by dereferencing a null pointer on line 3315.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>3315</LineStart>
<Snippet>		CP		cp;

		if (FAssign(pceruby-&gt;fOldSelect = FPreWord10SelectionBehaviorPsel(psel)))
			{
			pceruby-&gt;caSave = psel-&gt;ca;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="15963D94EF68D33E2B0E41963585AB4F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function NormCp() in disp3.cpp can crash the program by dereferencing a null pointer on line 5401.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>5401</LineStart>
<Snippet>			if (fDrg)
				{
				xwLeft = XwFromXl(hpldr, pdrg-&gt;xl);
				xwRight = XwFromXl(hpldr, pdrg-&gt;xl + pdrg-&gt;dxl);
				xw = xwRight;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="5D9AC28EE0EDEE40465F0B7BD71B1191">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WordGroupEditor() in wordgroupeditor.cpp can crash the program by dereferencing a null pointer on line 45.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>wordgroupeditor.cpp</FileName>
<FilePath>dev/word/core/wdoart/wordgroupeditor.cpp</FilePath>
<LineStart>45</LineStart>
<Snippet>   Art::E2oSelectionInfo* pEsi = NULL;
   GetSelection().QuerySelectionInfo( pEsi );
   if( pDSI &amp;&amp; pEsi-&gt;FContains( pwWordGroupE2o ) )
   {
      //Always select the main DrawingElement</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="1014870878F0137545AB68EFB3EF476C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FillRgtplVrsl() in numdlg.cpp can crash the program by dereferencing a null pointer on line 3868.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>numdlg.cpp</FileName>
<FilePath>dev/word/client/shared/numdlg.cpp</FilePath>
<LineStart>3868</LineStart>
<Snippet>	while (PtplEnum(flgpdMultiLevelGallery | flgpdListStyle, &amp;ptpl) != pNil)
		{
		ptpl-&gt;ilvlApply = ilvlSel;
		ptpl-&gt;ilvlSel = ilvlSel;
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6568">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2980.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2980</LineStart>
<Snippet>
		case irrbRcolno:
			(**hribl).icolCur = valUse &gt;= 1 &amp;&amp; valUse &lt;= ((SEP *)pprop)-&gt;pginfo.ccolM1+1 ? valUse-1 : valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B9127D84779B74A2B76D4D1DF4D6FB38">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdEnvelopesLabels() in envelope.cpp can crash the program by dereferencing a null pointer on line 968.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>envelope.cpp</FileName>
<FilePath>dev/word/client/desktop/envelope.cpp</FilePath>
<LineStart>968</LineStart>
<Snippet>		// we need to copy the envelope address information here. 
LReset:
		if (!pceenvlabel-&gt;fValid
			&amp;&amp; !FInitCeenvlabel(pceenvlabel, hcab, PselFromPcmb(pcmb)))
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="8D7D04A08F5067FA2C1CA29E74E84E2B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDlgPMSetup() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 699.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>699</LineStart>
<Snippet>						if (FRecActive())
							FRecordCab(fciMailMergeQueryOptions, cmb.hcab, tmcOK);
						InitPMSetupDlgWpms(lppmd-&gt;pms.wpms, lppmd-&gt;pms.wpmsdt, fTrue /*fForceUpdate*/);
						ChangeCancelToClose();
						}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DF3E96EAFE328CD6ADB65A4A08E22330">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FcrCalcFltMergeField() in fieldspc.cpp can crash the program by dereferencing a null pointer on line 219.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldspc.cpp</FileName>
<FilePath>dev/word/client/desktop/fieldspc.cpp</FilePath>
<LineStart>219</LineStart>
<Snippet>
	// We overran the database so show empty fields
	if ((lppmd = LppmdFromPdod(PdodMain(doc)))-&gt;grfErr)
		return fcrNormal;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="685B36E40010415DDD28AE90265F448E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdInsPicture() in pic2.cpp can crash the program by dereferencing a null pointer on line 1208.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pic2.cpp</FileName>
<FilePath>dev/word/client/desktop/pic2.cpp</FilePath>
<LineStart>1208</LineStart>
<Snippet>		pcabinspic = (CABINSPIC *)PcabFromHcab(pcmb-&gt;hcab);
		if (pcabinspic-&gt;iPicLink)
			MakeXstzRelativeToDoc(xstzFile, CxchMaxXstz(xstzFile), psel-&gt;ca.pdod);

		AssertTag(pcmb-&gt;tmc == tmcOK, ASSERTTAG('dxgk'));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="311800D596F001D8B40688E3E064481B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FSelectDocNonVisCore() in obhand.cpp can crash the program by dereferencing a null pointer on line 1735.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obhand.cpp</FileName>
<FilePath>dev/word/client/desktop/obhand.cpp</FilePath>
<LineStart>1735</LineStart>
<Snippet>	if (hwwd != hwwdNil  &amp;&amp;  hwwd == vhwwdTemp)
		{
		(*hwwdVBA)-&gt;fWantsVBAPageView = (*hwwd)-&gt;fWantsVBAPageView;
		(*hwwdVBA)-&gt;tvi.grpfvisi.SetGrpfShowResults((*hwwd)-&gt;tvi.grpfvisi.GrpfShowResults());
		(*hwwdVBA)-&gt;tvi.grpfvisi.SetFSeeHidden((*hwwd)-&gt;tvi.grpfvisi.FSeeHidden());</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="021553AAE449A53DC561E4F7B1A6786F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaFormatBorder() in obrange.cpp can crash the program by dereferencing a null pointer on line 18433.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>18433</LineStart>
<Snippet>		{
		AssertTag(pobbs != 0, ASSERTTAG('dqje'));
		if (pobbs-&gt;fChar)
			{
			hr = HrFromEid(eidVBAPropNotAvail);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="FE79A1A88C0A77CBA6167A018971CDA0">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrGetLpodtExtent() in odtcore.cpp can crash the program by dereferencing a null pointer on line 1308.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>odtcore.cpp</FileName>
<FilePath>dev/word/client/win32/odtcore.cpp</FilePath>
<LineStart>1308</LineStart>
<Snippet>			IID_IViewObject2, (void **)&amp;pvobj2)))
		{
		hr = pvobj2-&gt;GetExtent(
			lpodt-&gt;m_fIcon ? DVASPECT_ICON : DVASPECT_CONTENT,
			-1,</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="FF5BE4E083E9C88E541CCEFBB71E7C1D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _FOcxGetValue() in doc.cpp can crash the program by dereferencing a null pointer on line 23796.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>doc.cpp</FileName>
<FilePath>dev/word/core/doc.cpp</FilePath>
<LineStart>23796</LineStart>
<Snippet>		{
		// Scan each implemented interface, looking for bindable properties
		for (iTypeInfo = 0; iTypeInfo &lt; lpTAClass-&gt;cImplTypes; iTypeInfo++)
			{
			int			grfImplType;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="626384FA8B536FAF93466961A0271F69">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaHandlerProp() in obrange.cpp can crash the program by dereferencing a null pointer on line 11475.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>11475</LineStart>
<Snippet>			CHP	chpGray;

			if (FAILED(hr = HrOaListLevelGetChpChpGray(pfont-&gt;obfmt.pie, caPara.pdod, &amp;chp, &amp;chpGray)))
				goto LRet;
			CalcChp(&amp;chp, iftcAscii);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E3C75A0F40A2813B8F353BFD1D9A51CC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FSameBindingsWithBase() in osfmerge.cpp can crash the program by dereferencing a null pointer on line 253.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>osfmerge.cpp</FileName>
<FilePath>dev/word/client/shared/osfmerge.cpp</FilePath>
<LineStart>253</LineStart>
<Snippet>			break;

		if (wcscmp(pob-&gt;ObstrBindingId(), pobBase-&gt;ObstrBindingId()) != 0)
			return fFalse;
		if (pob-&gt;DwContentControlId() != pobBase-&gt;DwContentControlId())</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="0D4050F20F46087749FFCBF20CABB0DA">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FReadHtmlFromPistmCore() in htmlin.cpp can crash the program by dereferencing a null pointer on line 1928.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlin.cpp</FileName>
<FilePath>dev/word/core/htmlin.cpp</FilePath>
<LineStart>1928</LineStart>
<Snippet>						// We read directly from the stream here. We can't wrap this stream
						// in an fn until we find out how big it is.
						pistmBinary-&gt;Read(&amp;htcgh, sizeof(HTCGH), pNil);

						// We want to include the size of the header in the overall size of</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DA93BEC038AC1B27BB3CCD678E657FAA">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdRuby() in cmd3.cpp can crash the program by dereferencing a null pointer on line 3394.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>3394</LineStart>
<Snippet>    if (pcmb-&gt;fCleanupCab)
		{
		if (!pceruby-&gt;fOldSelect)
			DisposeSsel(&amp;pceruby-&gt;ssel);
		FreePv(pceruby);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F654D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2514.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2514</LineStart>
<Snippet>			// this sets BOTH shd and shdRaw; if shdRaw was supposed to
			// be nil, it will have been explicitly written that way
			if (((TAP *)pprop)-&gt;itcMac &lt;= itcMax - 2)
				{
				pshd = &amp;(((TAP *)pprop)-&gt;rgtc[((TAP *)pprop)-&gt;itcMac].shd);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="5C09DDFFEC454645E02A030AE5C75F5E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2033.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2033</LineStart>
<Snippet>		case irrbRlandscape:
			AssertTag (rrb.pgc == pgcDopSep, 0x0035c00d /* tag_an2an */);
			pdopsep-&gt;dmOrientPage = psep-&gt;dmOrientPage = dmOrientLandscape;
			break;
		case irrbRpaperw:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B188C051077D820729895EFBE8A12F1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FInitCeenvlabel() in envelope.cpp can crash the program by dereferencing a null pointer on line 413.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>envelope.cpp</FileName>
<FilePath>dev/word/client/desktop/envelope.cpp</FilePath>
<LineStart>413</LineStart>
<Snippet>			(*hcab)-&gt;docMain = docMain;

		if (FMask(LppmdFromPdod(docMain)-&gt;pms.wpmsdt, wpmsdtEnvelope))
			ceenvlabel.fEnvMerge = fTrue;
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B8EFEC5A28C7E2784206D1D5A9E3715">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function RichEditWndProc() in dlgredt.cpp can crash the program by dereferencing a null pointer on line 1205.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlgredt.cpp</FileName>
<FilePath>dev/word/client/desktop/dlgredt.cpp</FilePath>
<LineStart>1205</LineStart>
<Snippet>				}
			}
		else if ((*lprtec-&gt;hwwd)-&gt;fFormatInspector &amp;&amp; 
					(wParam == VK_UP || wParam == VK_DOWN || wParam == VK_SPACE ||
					wParam == VK_RETURN || wParam == VK_LEFT || wParam == VK_RIGHT) &amp;&amp;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="5C09DDFFEC454645E02A030AE5C75F63">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2058.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2058</LineStart>
<Snippet>			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c016 /* tag_an2aw */);
			AssertTag (rrb.pgc == pgcDopSep, 0x0035c017 /* tag_an2ax */);
			pdopsep-&gt;dxaRight = psep-&gt;pginfo.dxaRight = (uns)valUse;
			break;
		case irrbRmargt: </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64F0">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1084.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1084</LineStart>
<Snippet>				lid = LidFromCpgFE((**hribl).ansicpg);

			((PAP *)pprop)-&gt;anld.nfc = T3NfcFromRtfNfc(valUse, lid);
			if (ppropGray)
				((PAP *)ppropGray)-&gt;anld.nfc = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DEA1F4F7260154CF99866DBA3B95FD9C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IlpOvertype() in insloop.cpp can crash the program by dereferencing a null pointer on line 4624.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>insloop.cpp</FileName>
<FilePath>dev/word/client/shared/insloop.cpp</FilePath>
<LineStart>4624</LineStart>
<Snippet>				else
					{
					xchInsert = xszInput[0];
					}
				}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="5C09DDFFEC454645E02A030AE5C75F64">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2063.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2063</LineStart>
<Snippet>			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c018 /* tag_an2ay */);
			AssertTag (rrb.pgc == pgcDopSep, 0x0035c019 /* tag_an2az */);
			pdopsep-&gt;dyaTop = psep-&gt;pginfo.dyaTop = valUse;
			break;
		case irrbRgutter:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E936DEA3609C939A6523C11530054A35">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaFormatBorder() in obrange.cpp can crash the program by dereferencing a null pointer on line 18537.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>18537</LineStart>
<Snippet>			break;
		case wpropColor:
			rgwopr[cwopr].elk = rgelk2[0][pobb-&gt;ibrc];	//color
			break;
		case wpropLineWeight:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="3C0BE7D00B812510A61D89508593A07B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WbAppShow() in elmisc2.cpp can crash the program by dereferencing a null pointer on line 3687.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>elmisc2.cpp</FileName>
<FilePath>dev/word/client/desktop/elmisc2.cpp</FilePath>
<LineStart>3687</LineStart>
<Snippet>			FExecOnAllSDIFrames(FAppShowCore, &amp;fActivate, hwnd, fasfDefault);
			SetForegroundWindowNT(vhwndApp);	// set the current one foreground
			if (!pmwd-&gt;FInInsitu())
				FAppShowCore(hwnd, &amp;fActivate);
			FEnsureVisibleWordFrame(/*fMinimized*/fFalse, &amp;fShown, /*fActivate*/fFalse);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E936DEA3609C939A6523C11530054A34">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaFormatBorder() in obrange.cpp can crash the program by dereferencing a null pointer on line 18531.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>18531</LineStart>
<Snippet>LSetStyle:
			cwopr++;
			rgwopr[cwopr].elk = rgelk2[1][pobb-&gt;ibrc];	//style
			rgwopr[cwopr].type = TypeLong;
			rgwopr[cwopr].lw = 1;			// For a property put</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="36569EE3C90C307A775285311E990669">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdWarichu() in cmd3.cpp can crash the program by dereferencing a null pointer on line 4420.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>4420</LineStart>
<Snippet>			return cmdError;
		pcmb-&gt;pv = pcefels;
		pcab-&gt;pcefels = pcefels;
		ClearBytes(pcefels, sizeof(CEFELS));
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B4257427C3A9FE376EE2E88626F92385">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HplhtdsReadToolbars() in cdsfile.cpp can crash the program by dereferencing a null pointer on line 891.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cdsfile.cpp</FileName>
<FilePath>dev/word/core/cdsfile.cpp</FilePath>
<LineStart>891</LineStart>
<Snippet>		AssertTag(iInsert &lt;= iMac, ASSERTTAG('b8fb'));
		if (FWordClient())
			(*htds)-&gt;iMac = iInsert;
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="BB2E28E2B88067D0E56019E9F4BFC352">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WordGroupEditor() in wordgroupeditor.cpp can crash the program by dereferencing a null pointer on line 50.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>wordgroupeditor.cpp</FileName>
<FilePath>dev/word/core/wdoart/wordgroupeditor.cpp</FilePath>
<LineStart>50</LineStart>
<Snippet>      Ofc::TReferringPtr&lt; WordE2o &gt; prWordE2o( GetWordE2o() );
      Ofc::TReferringPtr&lt; Dr::DrawingElement &gt; prDrawingElement( prWordE2o-&gt;GetDrawingElement() );
      if( !pDSI-&gt;FSelect( prDrawingElement ) )
         NotReachedTag(0x002a0787 /* tag_ak64h */);
   }</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DF1A20D5C5B43AD5146DD1E9060C135F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdSaveFileEx() in savebin.cpp can crash the program by dereferencing a null pointer on line 2227.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>savebin.cpp</FileName>
<FilePath>dev/word/core/savebin.cpp</FilePath>
<LineStart>2227</LineStart>
<Snippet>		AssertTag(pdodDest != pNil, ASSERTTAG('edsn'));
		AssertTag(pdodDest-&gt;crefLock &gt; 0, ASSERTTAG('edso'));
		--pdodDest-&gt;crefLock;

		if (!(grfSaveOriginal &amp; fSaveWaitEnable))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6573">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 3429.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>3429</LineStart>
<Snippet>
		case irrbRdgvspace:
			((DOP *)pprop)-&gt;dogrid.dyaGrid = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6565">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2861.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2861</LineStart>
<Snippet>			if ((**hribl).rds == rdsStylesheet)
				{
				uint istdSav = ((TAP *)pprop)-&gt;istd;
				StandardTap((TAP *)pprop, fFalse /*fInitTcs*/);
				((TAP *)pprop)-&gt;istd = istdSav;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="7C819F5B8F45D71E5EB342DB792EC46F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FWriteHtmlToMathRunClose() in htmlmath.cpp can crash the program by dereferencing a null pointer on line 1159.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlmath.cpp</FileName>
<FilePath>dev/word/core/htmlmath.cpp</FilePath>
<LineStart>1159</LineStart>
<Snippet>		if (pwhcd != pNil)
			{
			if (pwhcd-&gt;fMathRunParent)
				break;
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="CC1C164C9CF8E05AC6706ED88000A9BA">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TGetNextWordFromPdod() in spell.cpp can crash the program by dereferencing a null pointer on line 1096.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>1096</LineStart>
<Snippet>			}

		xch = *hpxch;

		cpLimSkip = cpFetch + (hpxch - vhpxchFetch);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B96AF731CB7E2C9AA33FB2AF18F119A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TSplScanCore() in spell.cpp can crash the program by dereferencing a null pointer on line 2706.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>2706</LineStart>
<Snippet>						{
							spscSav = *pspsc;
							spldSav = *pspld;
							cpScanNextSav = *lpcpScanNext;
							cpScanLimSav = *lpcpScanLim;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B9BACDBBE92780251DBBD34912E132E1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FillRcwSnapForPrint() in dispbrc.cpp can crash the program by dereferencing a null pointer on line 2757.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dispbrc.cpp</FileName>
<FilePath>dev/word/core/dispbrc.cpp</FilePath>
<LineStart>2757</LineStart>
<Snippet>
		// figure out where we should snap to
		*pgrfbrcSnap = pgblx-&gt;grfbrcPage &amp; fbrcSidesOnly;

		if (pgblx-&gt;grfbrcPage &amp; fbrcTop)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="1F4B8E63FCD4325A6F5A6BDB8CB6DD61">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FSdtLevelsOK() in doccomp_shared.cpp can crash the program by dereferencing a null pointer on line 4220.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>doccomp_shared.cpp</FileName>
<FilePath>dev/word/client/shared/doccomp_shared.cpp</FilePath>
<LineStart>4220</LineStart>
<Snippet>	AssertTag(psdti-&gt;sdtt == sdttRegular, 0x0044b4d7 /* tag_arltx */);

	CachePara(pcaOther-&gt;pdod, pcaOther-&gt;cpFirst);
	if (caPara.cpLim &lt; pcaOther-&gt;cpLim)
		return fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64F4">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1109.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1109</LineStart>
<Snippet>			break;
		case irrbRpni:
			((PAP *)pprop)-&gt;anld.fSetItalic    = fTrue;
			((PAP *)pprop)-&gt;anld.fItalic       = valUse != 0;
			if (ppropGray)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="BE897F7039A21AC973C7FC4196030E74">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FGetEditorInfo() in protect.cpp can crash the program by dereferencing a null pointer on line 230.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>protect.cpp</FileName>
<FilePath>dev/word/client/desktop/protect.cpp</FilePath>
<LineStart>230</LineStart>
<Snippet>		while (pEnum-&gt;Next(1, &amp;pur, NULL) == S_OK)
			{
			if (FAILED(pur-&gt;HrGetUserId(&amp;bstrUser, NULL, &amp;dwType)))
				goto LDoneDrm;
			if (FAILED(pur-&gt;HrGetRights(&amp;grfRights)))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DF20E40CB9E248C9AA505F43C41D2C1B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdEnvelopesLabels() in envelope.cpp can crash the program by dereferencing a null pointer on line 830.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>envelope.cpp</FileName>
<FilePath>dev/word/client/desktop/envelope.cpp</FilePath>
<LineStart>830</LineStart>
<Snippet>		{
		if (!pcmb-&gt;fEnabled ||
				(FMailMergeMainPdod(docMain) &amp;&amp; FLblPmd(LppmdFromPdod(docMain))
					&amp;&amp; FAssign(pcmb-&gt;idsNotAvail = idsMailMergeMainDoc)))
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="851CCF293B98E8245108EEF26EDA1F77">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ImmZoomOverlayWndProc() in appdim.cpp can crash the program by dereferencing a null pointer on line 266.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>appdim.cpp</FileName>
<FilePath>dev/word/client/desktop/appdim.cpp</FilePath>
<LineStart>266</LineStart>
<Snippet>
			MWD *pmwdUsed = reinterpret_cast&lt;MWD*&gt;(GetWindowLongPtr(hwnd, 0));
			FillRect(hdc, &amp;r, (HBRUSH)GetStockObject(pmwdUsed-&gt;BrDim()));
			EndPaint(hwnd, &amp;ps);
			return 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6576">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 3441.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>3441</LineStart>
<Snippet>
		case irrbRdgfollowmargin:
			((DOP *)pprop)-&gt;dogrid.fFollowMargins = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6572">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 3425.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>3425</LineStart>
<Snippet>
		case irrbRdghspace:
			((DOP *)pprop)-&gt;dogrid.dxaGrid = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6509">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1400.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1400</LineStart>
<Snippet>			// temporary move Vietnamese into lidBi slot, to be corrected later
			if (fHaveVal &amp;&amp; valUse == lidVietnamese &amp;&amp; 	(**hribl).fDetectAssocRtfReadSA &amp;&amp; 
				!(**hribl).fInAssocRtfReadSA &amp;&amp; ((CHP*)pprop)-&gt;grf.fComplexScripts) // this can happen only from Word 9 SA
				((CHP *)pprop)-&gt;lidBi = lidVietnamese;
			__fallthrough;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="24C6D361EE239E035D74C0C1CFDE7CAE">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function RulerMarkWndProc() in rulerdrw.cpp can crash the program by dereferencing a null pointer on line 678.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rulerdrw.cpp</FileName>
<FilePath>dev/word/client/desktop/rulerdrw.cpp</FilePath>
<LineStart>678</LineStart>
<Snippet>				SetLeftClickForRuler(lprsd-&gt;hwwd);
			else
				SetRightClickForRuler(lprsd-&gt;hwwd);

			bool fVerticalRuler = lprsd-&gt;hwndRulerVert == hwndMark;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="A776F5B1EFD45C0DF0F215F03F928184">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CanvasSelection() in CanvasSelection.cpp can crash the program by dereferencing a null pointer on line 105.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>CanvasSelection.cpp</FileName>
<FilePath>dev/word/core/wdoart/CanvasSelection.cpp</FilePath>
<LineStart>105</LineStart>
<Snippet>   if( pE2oSelInfo )
   {
      pE2oSelInfo-&gt;Select( m_pwCanvasE2o );
   }
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64F6">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1131.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1131</LineStart>
<Snippet>			break;
		case irrbRpncaps:
			((PAP *)pprop)-&gt;anld.fSetSmallCaps = fTrue;
			((PAP *)pprop)-&gt;anld.fSetCaps      = fTrue;
			((PAP *)pprop)-&gt;anld.fSmallCaps    = fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="253D2F490C0AD9D815A544120180B77D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrDoTransition() in secureReaderHost.cpp can crash the program by dereferencing a null pointer on line 1221.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>secureReaderHost.cpp</FileName>
<FilePath>dev/word/client/desktop/secureReaderHost.cpp</FilePath>
<LineStart>1221</LineStart>
<Snippet>			{
			// Display the smart doc pane (if any)
			if (pdodNew-&gt;pud-&gt;xnsRoot == xnsNil)
				{
				TASR&lt;bool&gt; tasrSmartDoc(&amp;vrf.fAtSmartDocOpen, fTrue);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="0A48B62F0EB460E7A71528E93A9B84BA">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PropToRtfSgcCore() in rtfout.cpp can crash the program by dereferencing a null pointer on line 1124.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfout.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfout.cpp</FilePath>
<LineStart>1124</LineStart>
<Snippet>				break;
			case irrbRf:// font
				rrb.b = cof(_ftcBi);
				rrb.w = -1; // force difference
				break;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="322D40090B18CAAF7B5923D7D002A209">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FConfirmSaveAllDocs() in quit.cpp can crash the program by dereferencing a null pointer on line 1749.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>quit.cpp</FileName>
<FilePath>dev/word/client/desktop/quit.cpp</FilePath>
<LineStart>1749</LineStart>
<Snippet>
					AssertTag(pbsi != pNil, ASSERTTAG('ebfy'));
					pbsi-&gt;fAbort = fTrue;
					pbsi-&gt;fIntentionalAbort = fTrue;
					pbsi-&gt;fBackOutOfSave = fTrue;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="6A89CB44C04DD3B465D5E3AB28022FFA">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcTabs() in tabs.cpp can crash the program by dereferencing a null pointer on line 270.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>tabs.cpp</FileName>
<FilePath>dev/word/client/desktop/tabs.cpp</FilePath>
<LineStart>270</LineStart>
<Snippet>		int i;

		if (!lptdsd-&gt;fValid &amp;&amp; !FInitTdsd(pcmb))
			_TbdFar(lptdsd-&gt;tbdCur).jc = jcLeft;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="893FAEA0D46C5BBEFB9056AB9C78BBDC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FQuickSave() in savefast.cpp can crash the program by dereferencing a null pointer on line 1071.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>savefast.cpp</FileName>
<FilePath>dev/word/core/savefast.cpp</FilePath>
<LineStart>1071</LineStart>
<Snippet>		// REVIEW jayb:  bug 152855, don't set fSrcDirty, set another flag
		// telling us not to regenerate but to still undirty the source document
		PbsiCur()-&gt;fSrcDirty = fTrue;
		}
	if (vpqsib-&gt;hpldsd != hplNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B4E2F8C1C710BEA1E399D24171065842">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2068.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2068</LineStart>
<Snippet>			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c01a /* tag_an2a0 */);
			AssertTag (rrb.pgc == pgcDopSep, 0x0035c01b /* tag_an2a1 */);
			pdopsep-&gt;dzaGutter = psep-&gt;pginfo.dzaGutter = (uns)valUse;
		  	break;
		case irrbRpgnstart:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="44D07355C88CAD4A9F4CEE3D6ED20D72">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdWarichu() in cmd3.cpp can crash the program by dereferencing a null pointer on line 4481.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>4481</LineStart>
<Snippet>			return cmdError;

		ApplyFELayout(pcefels, pcefels-&gt;fels.itypFELayout ? (pcefels-&gt;lID ? pcefels-&gt;lID : LGetFitTextID()) : 0L);

		if (pcefels-&gt;cpSave != cpNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6516">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1689.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1689</LineStart>
<Snippet>
		case irrbRbookfoldrev:
			((DOP *)pprop)-&gt;fReverseFolio = fTrue;
			__fallthrough;
		case irrbRbookfold:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64FB">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1194.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1194</LineStart>
<Snippet>			break;
		case irrbRpnfs:
			((PAP *)pprop)-&gt;anld.hps = valUse;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;anld.hps = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="995EABC399A73C5BBA0971D3B0CD6C3A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrSetDocumentOptions() in pmhclient.cpp can crash the program by dereferencing a null pointer on line 276.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhclient.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhclient.cpp</FilePath>
<LineStart>276</LineStart>
<Snippet>	if ((fci == fciToolsCreateLabels ?
		TmcCreateLabels(&amp;cmb, hNil, lppmd-&gt;docMain, fTrue) :
		TmcCreateEnvelopes(&amp;cmb, lppmd-&gt;docMain, hNil, hNil)) == tmcOK)
		{
		lppmd-&gt;pms.rfs.fMainDocSetup = fTrue;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6531">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1876.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1876</LineStart>
<Snippet>			break;
        case irrbRnfc:
			((SEP *)pprop)-&gt;nfcPgn = NfcRtfNumConvert(valUse, LidFromCpg((**hribl).ansicpg));
			break;
		case irrbRftnstart:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B4E2F8C1C710BEA1E399D2417106583F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2053.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2053</LineStart>
<Snippet>			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c014 /* tag_an2au */);
			AssertTag (rrb.pgc == pgcDopSep, 0x0035c015 /* tag_an2av */);
			pdopsep-&gt;dxaLeft = psep-&gt;pginfo.dxaLeft = (uns)valUse;
			break;
		case irrbRmargr: </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6539">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1909.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1909</LineStart>
<Snippet>		case irrbRpgnstarts:
			AssertTag(valUse &gt;= 0 &amp;&amp; valUse &lt; pgnMax, 0x0035c003 /* tag_an2ad */);
			((SEP *)pprop)-&gt;pgnStart = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F652E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1867.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1867</LineStart>
<Snippet>			break;
		case irrbRepc:
			((DOP *)pprop)-&gt;epc = valUse;
			break;
		case irrbRftnn:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="5C09DDFFEC454645E02A030AE5C75F60">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2043.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2043</LineStart>
<Snippet>			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c010 /* tag_an2aq */);
			AssertTag (rrb.pgc == pgcDopSep, 0x0035c011 /* tag_an2ar */);
			pdopsep-&gt;yaPage = psep-&gt;pginfo.yaPage = (uns)valUse;
			break;
		case irrbRmargb: </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="8D7D04A08F5067FA2C1CA29E74E84E2C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDlgPMSetup() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 715.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>715</LineStart>
<Snippet>					lppmd = LppmdFromPdod(((CABPMSETUP *)PcabFromHcab(HcabDlgCur()))-&gt;docMain);

					fci = ((lppmd-&gt;pms.wpmsdt &amp; wpmsdtLabels) ? fciToolsCreateLabels :
						fciToolsCreateEnvelope);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4D7CF663B5B694175A04E257BA750F8A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FUpdatePrCore() in disp3.cpp can crash the program by dereferencing a null pointer on line 2940.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>2940</LineStart>
<Snippet>				continue;

			if (nSaveDCClip == 0 &amp;&amp; !(*fudb.hwwd)-&gt;pwrt-&gt;FEnablePageElementLayers())
				{
				RC rcwClip;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E4074A3526807FC9933453836AEC7555">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WriteRtfText() in rtfout.cpp can crash the program by dereferencing a null pointer on line 11221.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfout.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfout.cpp</FilePath>
<LineStart>11221</LineStart>
<Snippet>												break;
											}
										lpch = (char *)LpFromHq(hqData);
										FAddSzRtf(prebl, iszRTFdatafield, grfrtfNewDest);
										FlushRebl(prebl);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="96AAEFE2A31857A2BC03977C7A5017B0">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _DrawSdtOrigCharCpElegent() in formatsp.cpp can crash the program by dereferencing a null pointer on line 2181.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>formatsp.cpp</FileName>
<FilePath>dev/word/core/formatsp.cpp</FilePath>
<LineStart>2181</LineStart>
<Snippet>		for (i=1; i&lt;cPntShape; i++)
			{
			pt = rgPntShape[i-1];
			AddPtUV(&amp;pt, rgPntShape[i].x, rgPntShape[i].y, lstflow);
			rgPntShape[i] = pt;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="2D4A717DCBA3B488B2653EFB63B150BD">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdFixSpelling() in spell.cpp can crash the program by dereferencing a null pointer on line 10103.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>10103</LineStart>
<Snippet>
		AssertTag(pspsc-&gt;lidTestWordEx == pspsc-&gt;lidTestWord, 0x00509399 /* tag_aujoz */);
		AssertDoTag(FEnsureACInited(pspsc-&gt;lidTestWordEx), 0x0050939a /* tag_aujo0 */);
		InvalEm();
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F652C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1859.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1859</LineStart>
<Snippet>		case irrbRdn:
			AssertTag(valUse &gt;= 0, 0x0035c002 /* tag_an2ac */);
			((CHP *)pprop)-&gt;hpsPos = -valUse;
			if (ppropGray)
				((CHP *)ppropGray)-&gt;hpsPos = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B51791394DF5CA36536DF501B642F9DE">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FLoadMailMergeTemplate() in pmhclient.cpp can crash the program by dereferencing a null pointer on line 432.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhclient.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhclient.cpp</FilePath>
<LineStart>432</LineStart>
<Snippet>
		lppmd = LppmdFromPdod(pdodMain);
		lppmf = LppmfFromLppmd(lppmd, lppmd-&gt;pms.ipmfFetch);

		if (lppmf-&gt;pIMsoMailMerge)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="9FFC351BB467BFDD8DED49994C160726">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDisplay() in oartDisp.cpp can crash the program by dereferencing a null pointer on line 1542.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartDisp.cpp</FileName>
<FilePath>dev/word/client/shared/oartDisp.cpp</FilePath>
<LineStart>1542</LineStart>
<Snippet>		VSDPRL vsdprl;
		RT &amp;rt = (*hwwd)-&gt;pwrt-&gt;RtGetRt();
		ID2D1RenderTarget *pD2D1RenderTarget = rt.PD2D1RenderTarget();
		if (rt.Rtk() == rtkD2D1 &amp;&amp; pD2D1RenderTarget  == pNil)
			return fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="87A7C97129D9C091C2C7AFF85397FAE0">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdDeleteSdt() in factoid.cpp can crash the program by dereferencing a null pointer on line 5796.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>factoid.cpp</FileName>
<FilePath>dev/word/client/desktop/factoid.cpp</FilePath>
<LineStart>5796</LineStart>
<Snippet>						{
						hcab = (HCABXmlDocMap) GetWindowLongPtr(GetParent(PdodMain2(psel-&gt;ca.pdod)-&gt;pud-&gt;hwndSdtTV), GWLP_USERDATA);
						if ((*hcab)-&gt;ibkfToolbarClick != ibkfNil)
							{
							psdti = PsdtiFromPdodIbkf(psel-&gt;ca.pdod, (*hcab)-&gt;ibkfToolbarClick, pNil);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="BC9AE7C0499EC6348504730415D3B76F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FEvalFieldCondition() in fieldclc.cpp can crash the program by dereferencing a null pointer on line 6760.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldclc.cpp</FileName>
<FilePath>dev/word/core/fieldclc.cpp</FilePath>
<LineStart>6760</LineStart>
<Snippet>				}

			if (fObserveWild &amp;&amp; *pxch2 == chCondMatchOne)
 				{  /* single char wildcard -- say it matches */
				}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="6A89CB44C04DD3B465D5E3AB28022FF7">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcTabs() in tabs.cpp can crash the program by dereferencing a null pointer on line 216.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>tabs.cpp</FileName>
<FilePath>dev/word/client/desktop/tabs.cpp</FilePath>
<LineStart>216</LineStart>
<Snippet>			pxchT = xsz;

			pcabtabs-&gt;iAlignment = IFromJc(_TbdFar(lptdsd-&gt;tbdCur).jc);
			pcabtabs-&gt;iLeader = _TbdFar(lptdsd-&gt;tbdCur).jc == jcBar ?
						uNinchRadio : IFromTlc(_TbdFar(lptdsd-&gt;tbdCur).tlc);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64EE">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1060.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1060</LineStart>
<Snippet>
		case irrbRwrap:	  // spec processing needed only on output
			((PAP *)pprop)-&gt;wr = valUse;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;wr = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="7BA21C5597B0B24DEB5FB66D309A7F18">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function UIMSyncDispAttr() in uim.cpp can crash the program by dereferencing a null pointer on line 1760.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>uim.cpp</FileName>
<FilePath>dev/word/client/shared/uim.cpp</FilePath>
<LineStart>1760</LineStart>
<Snippet>		if (cch == 0)
			{
			prangeProp-&gt;Release();
			prangeProp = pNil;
			continue;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="44D07355C88CAD4A9F4CEE3D6ED20D71">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdWarichu() in cmd3.cpp can crash the program by dereferencing a null pointer on line 4465.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>4465</LineStart>
<Snippet>	if (pcmb-&gt;fDialog)
		{
		FetchCp(pcefels-&gt;ca.pdod, pcefels-&gt;ca.cpFirst, fcmProps);
		pcefels-&gt;fels = vchpFetch.fels;
		pcefels-&gt;lID = vchpFetch.lFELayoutID;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6508">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1334.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1334</LineStart>
<Snippet>		case irrbRspv:
			f = (!fHaveVal ? fTrue : (val != fFalse));
			((CHP *)pprop)-&gt;fSpecVanish = f;
			if (f)
				((CHP *)pprop)-&gt;grf.fVanish = fTrue;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4F05176CD75333D9A52F0BC51CD6A9DE">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _FOcxGetValue() in doc.cpp can crash the program by dereferencing a null pointer on line 23806.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>doc.cpp</FileName>
<FilePath>dev/word/core/doc.cpp</FilePath>
<LineStart>23806</LineStart>
<Snippet>			// Retrieve the referenced type description (if any)
			// Retrieve a TYPEATTR structure containing the attributes of the type description.
			if (FOcxSuccess(OleMethodLp(lpTIClass, GetImplTypeFlags)( iTypeInfo, &amp;grfImplType)) &amp;&amp;
				grfImplType &amp; IMPLTYPEFLAG_FDEFAULT &amp;&amp;
				FOcxSuccess(OleMethodLp(lpTIClass, GetRefTypeOfImplType)( iTypeInfo, &amp;hreftype)) &amp;&amp;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="79EA02646F663E86A43EA45F1928DDD0">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FixupRgtplForBullets() in numdlg.cpp can crash the program by dereferencing a null pointer on line 3614.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>numdlg.cpp</FileName>
<FilePath>dev/word/client/shared/numdlg.cpp</FilePath>
<LineStart>3614</LineStart>
<Snippet>			{
			AssertTag(ptpl-&gt;ilfoSel != ilfoNil, 0x004887c0 /* tag_asi5a */);
		 	ptpl-&gt;iApplyTo = (FBulletsNumberingWord11() || !fWholeList) ? iApplyToSelection : iApplyToWholeList;
			ptpl-&gt;fContinue = fFalse;
			ptpl-&gt;fCarefulHybridBulletRemap = fCarefulHybridBulletRemap;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="294E207EFE4B06C3B2E5A14CE29B7B3C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function UpdateOlePropThumbnail() in thumbnail.cpp can crash the program by dereferencing a null pointer on line 296.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>thumbnail.cpp</FileName>
<FilePath>dev/word/client/win32/thumbnail.cpp</FilePath>
<LineStart>296</LineStart>
<Snippet>			else
				{
				cbData = GetMetaFileBitsEx(lpmfp-&gt;hMF, 0, lpNil);
				short rgs[4];
				// Round up to divisible by 4 (add space for header)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B96AF731CB7E2C9AA33FB2AF18F119C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TSplScanCore() in spell.cpp can crash the program by dereferencing a null pointer on line 2940.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>2940</LineStart>
<Snippet>			// Have sanitized misspelling in pspsc-&gt;xszTestWord
			pspsc-&gt;xszTestWord[cchError] = xchNull;
			if (pspsc-&gt;lidTestWord == lidKorean &amp;&amp; pspld-&gt;fUsingGlueDll)
				{
				char szT[cbMaxSz];</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F648C72FAF44045AE5D3C145352471B0">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FGetMergeFieldList() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 6929.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>6929</LineStart>
<Snippet>	AssertTag(LppmdFromPdod(docMain) != lpNil, ASSERTTAG('cpqn'));

	hsttb = LppmdFromPdod(docMain)-&gt;hsttbMergeFields;

	if (hsttb != hsttbNil &amp;&amp; IbstMacSttb(hsttb) &gt;= 0 &amp;&amp; ibst &lt; (uint)IbstMacSttb(hsttb))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="9C5AE2BCA5D82D159C19654030DC4D94">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FInsertTableCaption() in htmltbl.cpp can crash the program by dereferencing a null pointer on line 5233.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmltbl.cpp</FileName>
<FilePath>dev/word/core/htmltbl.cpp</FilePath>
<LineStart>5233</LineStart>
<Snippet>
	CopyRgb(&amp;vtapFetch.mpibrcwCellPaddingDefault[0], 
			  &amp;tap.mpibrcwCellPaddingDefault[0], sizeof(TAP) - offset(TAP, mpibrcwCellPaddingDefault));

	tap.rgdxaCenter[0] = vtapFetch.rgdxaCenter[0];</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="18A8E31373AB73CAD14FCEC51DCE724A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _UpdateImmedInvalRgnPrDrEdl() in pagevw.cpp can crash the program by dereferencing a null pointer on line 8116.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pagevw.cpp</FileName>
<FilePath>dev/word/client/shared/pagevw.cpp</FilePath>
<LineStart>8116</LineStart>
<Snippet>		AssertTag(prcOld != pNil &amp;&amp; prcNew != pNil, 0x002a36c7 /* tag_ak91h */);

		if (prcOld-&gt;ytBottom &gt; prcNew-&gt;ytBottom)
			dytExtra = piuei-&gt;dytBelowNew;
		else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="5F37B3F41D658EE87BF3A3981FD099E7">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FMergeCascadedStyles() in csscascd.cpp can crash the program by dereferencing a null pointer on line 2250.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>csscascd.cpp</FileName>
<FilePath>dev/word/core/csscascd.cpp</FilePath>
<LineStart>2250</LineStart>
<Snippet>			// a contextual match, record it.
			//
			if (FPsctMatchPcse(psct, *hcse, grfmcs))	// match class, id, ...
				{
				// Verify assumptions.</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="41A0BA5FC5BF8565FDC57D2203BE1CE6">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdGotoW7() in dlgmisc.cpp can crash the program by dereferencing a null pointer on line 415.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlgmisc.cpp</FileName>
<FilePath>dev/word/client/desktop/dlgmisc.cpp</FilePath>
<LineStart>415</LineStart>
<Snippet>			}

		(*hcabReplace)-&gt;sab = sab;

		pcmb-&gt;tmc = TmcReplace(pcmb);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4855574C0364F94FC19474F0542AD1E5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FUpdatePrCore() in disp3.cpp can crash the program by dereferencing a null pointer on line 3018.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>3018</LineStart>
<Snippet>			were some clean way to remove regions/rectangles from an
			update-in-progress (betwee FBeginUpdate and FEndUpdate). */
		pidm-&gt;FDoUpdate(&amp;dmub);
		pidm-&gt;FreeUpdate(&amp;dmub);
		fDmUpdate = fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F653D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2005.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2005</LineStart>
<Snippet>		case irrbRpgwsxn:
			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c006 /* tag_an2ag */);
			((SEP *)pprop)-&gt;pginfo.xaPage = (uns)valUse;
			break;
		case irrbRpghsxn:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6563">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2731.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2731</LineStart>
<Snippet>			// if we got a \cellx for cell 31, itcMac will be set to 31
			// following borders, etc will be tossed out.
			if ((itcMac = ((TAP *)pprop)-&gt;itcMac) &gt; itcMax - 2)
				break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D46F9297ED768E3630C0D8FBC83AECFC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _FTranslateMacWordBkmks() in open.cpp can crash the program by dereferencing a null pointer on line 16255.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>open.cpp</FileName>
<FilePath>dev/word/core/open.cpp</FilePath>
<LineStart>16255</LineStart>
<Snippet>					if (!FReallocHCb(hszHead, cbSzHeadPrev + (cbSz =  (CbOf(long) * cst))))
						goto LOOM;
					pchSzHead = *hszHead + cbSzHeadPrev;
					ClearBytes(pchSzHead, cbSz);
					cbSzHeadPrev += cbSz;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F650A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1412.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1412</LineStart>
<Snippet>			if (ppropGray)
				((CHP *)ppropGray)-&gt;grf.fNoProof = 0;
			((CHP *)pprop)-&gt;grf.fNoProof = valUse == lidNoProof;
			if (valUse != lidNoProof)
				{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E3076A44BA97C2086B44684424A9BC4C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdHyphenate() in dlghyph.cpp can crash the program by dereferencing a null pointer on line 190.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlghyph.cpp</FileName>
<FilePath>dev/word/client/desktop/dlghyph.cpp</FilePath>
<LineStart>190</LineStart>
<Snippet>		pcab = (CABHYPHEN *) *pcmb-&gt;hcab;
		pcab-&gt;dxaHypHotZ = FGoodClientFromWwd(psel-&gt;hwwd) ? uNinch : pdop-&gt;dxaHotZ;
		pcab-&gt;wConsecHypLim = pdop-&gt;cConsecHypLim;
		pcab-&gt;fHypCaps = pdop-&gt;fHyphCapitals;
		pcab-&gt;fAutoHyphenation = pdop-&gt;fAutoHyphen;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DF7AB5C6ED5586E367EA22D5DC337AF7">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcInsDatabase() in pmhdata.cpp can crash the program by dereferencing a null pointer on line 1971.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhdata.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhdata.cpp</FilePath>
<LineStart>1971</LineStart>
<Snippet>
			if (*(RECNUM *)(*hcab)-&gt;iRecFrom == ulNinch)
				lppmd-&gt;iRecFrom = iRecMin;
			else
				lppmd-&gt;iRecFrom = *(RECNUM *)(*hcab)-&gt;iRecFrom;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B8EFEC5A28C7E2784206D1D5A9E3712">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function RichEditWndProc() in dlgredt.cpp can crash the program by dereferencing a null pointer on line 1075.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlgredt.cpp</FileName>
<FilePath>dev/word/client/desktop/dlgredt.cpp</FilePath>
<LineStart>1075</LineStart>
<Snippet>		
		if (msg == WM_IME_STARTCOMPOSITION 
			&amp;&amp; lprtec-&gt;pfnFFocusChgCallBack != pNil)
			{
			lprtec-&gt;pfnFFocusChgCallBack(fRTEditCallBack);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64ED">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1048.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1048</LineStart>
<Snippet>
		case irrbRintbl:
			((PAP *)pprop)-&gt;fInTableW97 = (valUse != 0);
			((PAP *)pprop)-&gt;itap = valUse;
			((PAP *)pprop)-&gt;fInnerTableCell = fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="0F1AC34A3906A24CB1364244F11661D9">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FSetOfficeCenterTypoDefaults() in options.cpp can crash the program by dereferencing a null pointer on line 7693.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>options.cpp</FileName>
<FilePath>dev/word/client/desktop/options.cpp</FilePath>
<LineStart>7693</LineStart>
<Snippet>		pdop-&gt;iLevelOfKinsoku = iLevelOfKinsokuCust;

		if (pcabTypoCustom-&gt;hszStartLineCustom != hNil)
			{
			cch = CxchCopyXsz(XszFromHxsz(pcabTypoCustom-&gt;hszStartLineCustom),</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B412C68E5367D0FB6DEBD9B05A981A94">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CbAppendGrsFromTap() in prm.cpp can crash the program by dereferencing a null pointer on line 10747.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>prm.cpp</FileName>
<FilePath>dev/word/core/prm.cpp</FilePath>
<LineStart>10747</LineStart>
<Snippet>
	/* now generate a grpprl that encodes the contents of *ptap */
	pgrs-&gt;cb += CbGrpprlProp(fFalse, pgrs-&gt;grpprl + pgrs-&gt;cb, pgrs-&gt;cbMax - pgrs-&gt;cb, ptaps, ptapsBase, cwTAPBase,
							 mpiswsxTap);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="12524B41E75CF345A15392BF75A2C867">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FAppShowCore() in elmisc2.cpp can crash the program by dereferencing a null pointer on line 3717.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>elmisc2.cpp</FileName>
<FilePath>dev/word/client/desktop/elmisc2.cpp</FilePath>
<LineStart>3717</LineStart>
<Snippet>	AssertTag(hwnd != hwndNil, ASSERTTAG('daou'));

	if (fWordAppHwnd &amp;&amp; FAssign(pmwd = PmwdFromHwndApp(hwnd)) &amp;&amp; pmwd-&gt;Pitbs())
		{
		ShowSDIFrame(pmwd, pmwd-&gt;ShowCmdVBA() == SW_HIDE ? SW_SHOWNORMAL : pmwd-&gt;ShowCmdVBA());</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6577">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 3445.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>3445</LineStart>
<Snippet>
		case irrbRcwrap:
			((PAP *)pprop)-&gt;fKinsoku = valUse;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;fKinsoku = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="521A49B5CBD5979C8F5C195A06D2DE98">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCloneLprsn() in pmhcore.cpp can crash the program by dereferencing a null pointer on line 1541.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhcore.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhcore.cpp</FilePath>
<LineStart>1541</LineStart>
<Snippet>				}

			lprsnCur-&gt;lprsnT = lprsnNew;
			lprsnCur-&gt;lprsnF = lprsnNewChain;
			fChainLinked = fTrue;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6541">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2021.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2021</LineStart>
<Snippet>		case irrbRmargtsxn:
			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c00a /* tag_an2ak */);
			((SEP *)pprop)-&gt;pginfo.dyaTop = valUse;
			break;
		case irrbRmargbsxn:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B96AF731CB7E2C9AA33FB2AF18F119E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TSplScanCore() in spell.cpp can crash the program by dereferencing a null pointer on line 3054.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>3054</LineStart>
<Snippet>					else
						{
						pspld-&gt;apSib.cch = pspsc-&gt;cchTestWord;
						}
					}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="1B3EE1BA22639F825725DB028B64A06C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function GetLsiLidFromATXstz() in glossary.cpp can crash the program by dereferencing a null pointer on line 3985.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>glossary.cpp</FileName>
<FilePath>dev/word/client/desktop/glossary.cpp</FilePath>
<LineStart>3985</LineStart>
<Snippet>			//  and check explicitly for it
			// a xszSTY of NULL means that it doesn't exist			
			if (prgLeat[iLeat].xszSTY 
					&amp;&amp; FEqNcXsz(XszFromXstz(pxstz), prgLeat[iLeat].xszSTY))
				{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F650E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1642.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1642</LineStart>
<Snippet>			if (valUse != -1)
				{
			 	(**hribl).dxaFitTextRTFLast = ((CHP *)pprop)-&gt;dxaFitText = valUse;
				(**hribl).lFitTextIDRTFLast = ((CHP *)pprop)-&gt;lFitTextID = LGetFitTextID();
				}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="96E9FFD299C350B959F164B14341ABF6">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _GenBanterXstFromBcp() in banter.cpp can crash the program by dereferencing a null pointer on line 5114.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>banter.cpp</FileName>
<FilePath>dev/word/core/banter.cpp</FilePath>
<LineStart>5114</LineStart>
<Snippet>		if (grfOptions &amp; foptDiffMode)
			{
			if (pbndBase-&gt;fOutput == fFalse &amp;&amp; pbndBase-&gt;ipfnTextGen == ipfnFlag)
				{
				pbndBase-&gt;val = !pbnd-&gt;val;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="261C2DD25DFD08C1FBFEA982409CB2B1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PdodOpenFnmCore2() in open.cpp can crash the program by dereferencing a null pointer on line 3383.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>open.cpp</FileName>
<FilePath>dev/word/core/open.cpp</FilePath>
<LineStart>3383</LineStart>
<Snippet>			grfpkmc |= msofpkmcSilent;

		pioldoc-&gt;GetPKMClientEx(grfpkmc, &amp;pipkmclient);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="5C09DDFFEC454645E02A030AE5C75F65">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2068.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2068</LineStart>
<Snippet>			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c01a /* tag_an2a0 */);
			AssertTag (rrb.pgc == pgcDopSep, 0x0035c01b /* tag_an2a1 */);
			pdopsep-&gt;dzaGutter = psep-&gt;pginfo.dzaGutter = (uns)valUse;
		  	break;
		case irrbRpgnstart:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="A44FA22DC5F7A5E5FF33B2AD1790BE5B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PdodOpenFnmCore2() in open.cpp can crash the program by dereferencing a null pointer on line 3445.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>open.cpp</FileName>
<FilePath>dev/word/core/open.cpp</FilePath>
<LineStart>3445</LineStart>
<Snippet>			pdod = pdodNil;
			}
		pdodBkgnd-&gt;pud-&gt;fBkgndSaveGhost = fTrue;
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4488EF8E54B62099166E0E692401A732">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CpLimWord() in select.cpp can crash the program by dereferencing a null pointer on line 12094.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>select.cpp</FileName>
<FilePath>dev/word/client/shared/select.cpp</FilePath>
<LineStart>12094</LineStart>
<Snippet>			}

		if (FTextXch(*hpxch))
			if (fText || !fWhite)
				{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="BD02FDACB82B46568C9725DEE84D876F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcCheckErrors() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 6327.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>6327</LineStart>
<Snippet>
	if (pcmb-&gt;fDefaults)
		((CABPMCHECK *)PcabFromHcab(pcmb-&gt;hcab))-&gt;iCheckError = lppmd-&gt;pms.rfs.grfChkErr;

	if (pcmb-&gt;fDialog)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E440CDC8E5F6F2E03C8EAE0A06A2419B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestTableInsertColRowTE() in TEComponentTests.cpp can crash the program by dereferencing a null pointer on line 1587.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TEComponentTests.cpp</FileName>
<FilePath>dev/word/client/desktop/TEComponentTests.cpp</FilePath>
<LineStart>1587</LineStart>
<Snippet>		MsoUTAssertTag(tiw.cpsaCell.FRegister(selCur.pdod, selCur.cpFirst, fFalse), 0x002e32cc /* tag_al9lm */);
		//pte = new CTableInsertColRowTE(&amp;tiw, fTrue/*fRow*/);
		pte-&gt;OnSingleClick(ir, &amp;fHandled);
		SafeDelete(pte);
		tiw.cpsaCell.Unregister();</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="2D4A717DCBA3B488B2653EFB63B150BA">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdFixSpelling() in spell.cpp can crash the program by dereferencing a null pointer on line 10013.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>10013</LineStart>
<Snippet>			{
			HCULTURE hCulture;
			MsoOleoHrGetHcultureFromLcid(pspsc-&gt;lidTestWord, &amp;hCulture);
			SPLD *pspld = PspldFromLid(pspsc-&gt;lidTestWord, fTrue/*fAssert*/);
			AppLevelProofing::IProofDocument* pIProofDoc = PIProofDocumentFromPspld(pspld);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64F3">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1100.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1100</LineStart>
<Snippet>			break;
		case irrbRpnb:
			((PAP *)pprop)-&gt;anld.fSetBold      = fTrue;
			((PAP *)pprop)-&gt;anld.fBold         = valUse != 0;
			if (ppropGray)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4933791549F79CDA1D0584862E323B61">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrExTypeInfoFromClsid() in ocxclnt.cpp can crash the program by dereferencing a null pointer on line 4636.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ocxclnt.cpp</FileName>
<FilePath>dev/word/client/desktop/ocxclnt.cpp</FilePath>
<LineStart>4636</LineStart>
<Snippet>		goto LReturn;

	hr = pIETL-&gt;AddRefExtendedTypeLibOfClsid(
		clsid, (LPCOLESTR)&amp;kszWord, pExTypeInfo, 0L, 0L, pNil, ppTInfo);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F651C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1716.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1716</LineStart>
<Snippet>
		case irrbRrelyonvml:
			((DOP *)pprop)-&gt;fRelyOnVML_WebOpt = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F652F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1870.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1870</LineStart>
<Snippet>			break;
		case irrbRftnn:
			((DOP *)pprop)-&gt;nfcFtnRef = NfcRtfNumConvert(valUse, LidFromCpg((**hribl).ansicpg));
			break;
		case irrbRaftnn:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6524">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1812.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1812</LineStart>
<Snippet>			//  97 will only output this keyword when we know that 95 will be able to do a
			//  good job of mimicing the document with the limited info we can give it.
			((DOP *)pprop)-&gt;fOldDefineLineBasedOnGrid = fTrue;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="6E3C40B140FB8099165F6D3FA5E1A854">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function GetGlyphHeightForCa() in fsframe.cpp can crash the program by dereferencing a null pointer on line 5656.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fsframe.cpp</FileName>
<FilePath>dev/word/core/fsframe.cpp</FilePath>
<LineStart>5656</LineStart>
<Snippet>				{
				fSuccess =
					(rt.CbGetGlyphOutline(*pwch, GGO_GLYPH_INDEX, &amp;gm, 0, lpNil, &amp;mat2) != -1);
				}
			else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E38762159D3FE46001F2D3DFFBE10395">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function DestroyOtb() in otb.cpp can crash the program by dereferencing a null pointer on line 6809.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>otb.cpp</FileName>
<FilePath>dev/word/client/desktop/otb.cpp</FilePath>
<LineStart>6809</LineStart>
<Snippet>	
				AssertTag(picc != pNil, ASSERTTAG('duva'));
				picc-&gt;Delete();
				}
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="881670DC1B6ADEA35EDC702D7C163EB1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdLstDefault() in numdlg.cpp can crash the program by dereferencing a null pointer on line 2156.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>numdlg.cpp</FileName>
<FilePath>dev/word/client/shared/numdlg.cpp</FilePath>
<LineStart>2156</LineStart>
<Snippet>		} /* if (pcmb-&gt;fSetTool) */

	if (pcmb-&gt;fSetMenu &amp;&amp; !FDefiningStyle() &amp;&amp; psel-&gt;ca.pdod != pdodNil)
		{
		int fVertical;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="8F29FAA3006EE635DDB4BFC5517EBCC9">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CopyAddrCoord() in stmmisc.cpp can crash the program by dereferencing a null pointer on line 316.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stmmisc.cpp</FileName>
<FilePath>dev/word/client/desktop/stmmisc.cpp</FilePath>
<LineStart>316</LineStart>
<Snippet>	for (i = 0; i &lt; caddrinfo; i++)
		{
		int istdEnv = (paddrinfo + i)-&gt;iStdEnv;
		AssertTag((pstdEnvDesc + istdEnv)-&gt;idsName == (paddrinfo + i)-&gt;ids, ASSERTTAG('xtzo'));
		(pstdEnvDesc + istdEnv)-&gt;dxaEnvAbs = (paddrinfo + i)-&gt;dxaEnvAbs;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="24C6D361EE239E035D74C0C1CFDE7CAD">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function RulerMarkWndProc() in rulerdrw.cpp can crash the program by dereferencing a null pointer on line 676.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rulerdrw.cpp</FileName>
<FilePath>dev/word/client/desktop/rulerdrw.cpp</FilePath>
<LineStart>676</LineStart>
<Snippet>
			if (wMessage == WM_LBUTTONDOWN)
				SetLeftClickForRuler(lprsd-&gt;hwwd);
			else
				SetRightClickForRuler(lprsd-&gt;hwwd);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DCE5159C054FABE984F4DFFEA837390B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdKumimoji() in cmd3.cpp can crash the program by dereferencing a null pointer on line 5666.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>5666</LineStart>
<Snippet>			if (!FBeginUndo(uatAutoTracking, fciFormatKumimoji))
				return cmdError;
			if (pcekumi-&gt;cpSave != cpNil)
				SelectIns(psel, pcekumi-&gt;cpSave);
			FInsertKumimoji(psel, &amp;pcekumi-&gt;rbs.caRuby, &amp;pcekumi-&gt;rbs);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F655A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2600.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2600</LineStart>
<Snippet>			break;
		case irrbRtdxaAbsSpec:
			((TAP *)pprop)-&gt;dxaAbs = -valUse;
			if (ppropGray)
				((TAP *)ppropGray)-&gt;dxaAbs = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="3CE5829BBA0131DD0DB2A05BB87E9893">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDefProofDlgProc() in proof2.cpp can crash the program by dereferencing a null pointer on line 781.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>proof2.cpp</FileName>
<FilePath>dev/word/client/desktop/proof2.cpp</FilePath>
<LineStart>781</LineStart>
<Snippet>		// I don't think we got dlmKillDlgFocus for modal dlgs before SDM 3.0
		// Don't do anything here for modals.
		if (pptfs-&gt;fModalDialog)
			break;
		</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="6A89CB44C04DD3B465D5E3AB28022FF6">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcTabs() in tabs.cpp can crash the program by dereferencing a null pointer on line 198.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>tabs.cpp</FileName>
<FilePath>dev/word/client/desktop/tabs.cpp</FilePath>
<LineStart>198</LineStart>
<Snippet>
		if (!FAssign(fNotEmpty = FInitTdsd(pcmb)))
			_TbdFar(lptdsd-&gt;tbdCur).jc = jcLeft;

		/* Get the document properties. dop.dxaTab */</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B4E2F8C1C710BEA1E399D24171065840">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2058.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2058</LineStart>
<Snippet>			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c016 /* tag_an2aw */);
			AssertTag (rrb.pgc == pgcDopSep, 0x0035c017 /* tag_an2ax */);
			pdopsep-&gt;dxaRight = psep-&gt;pginfo.dxaRight = (uns)valUse;
			break;
		case irrbRmargt: </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="609972637AA09C00FDA40A768C8D09AD">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FSameBindingsWithBase() in osfmerge.cpp can crash the program by dereferencing a null pointer on line 253.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>osfmerge.cpp</FileName>
<FilePath>dev/word/client/shared/osfmerge.cpp</FilePath>
<LineStart>253</LineStart>
<Snippet>			break;

		if (wcscmp(pob-&gt;ObstrBindingId(), pobBase-&gt;ObstrBindingId()) != 0)
			return fFalse;
		if (pob-&gt;DwContentControlId() != pobBase-&gt;DwContentControlId())</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="0348C804E401001F6C666CFBD4F3A395">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdModifyDOSel() in drawcmd.cpp can crash the program by dereferencing a null pointer on line 528.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>drawcmd.cpp</FileName>
<FilePath>dev/word/client/shared/drawcmd.cpp</FilePath>
<LineStart>528</LineStart>
<Snippet>		{
		CA ca;
		PcaSetFromPdodArtid(&amp;ca, pdod, partoCur-&gt;Artid());
		cp = ca.cpFirst;
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="307EA0E98653DF797EF5166B23B5D4B6">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDrpSaveOverOriginalWithNoPrompt() in mwd.cpp can crash the program by dereferencing a null pointer on line 3329.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>mwd.cpp</FileName>
<FilePath>dev/word/client/desktop/mwd.cpp</FilePath>
<LineStart>3329</LineStart>
<Snippet>				{
				// local file
				if (MsoINotifyValFromHr(PidnlGet()-&gt;CheckDocAvailableRW(pdrpOrig-&gt;pwzPath)) == msoinotifyvalReadWrite)
					fLocked = fFalse;
				}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="590D6FBA3A55CBAA22F2ED86EDEFFEF9">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function GetState() in oartHost.cpp can crash the program by dereferencing a null pointer on line 8180.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartHost.cpp</FileName>
<FilePath>dev/word/client/shared/oartHost.cpp</FilePath>
<LineStart>8180</LineStart>
<Snippet>				const Art::NonVisualDrawingProps* pdp = paeddsi-&gt;GetNonVisualPropsOfSelection();
				AssertTag(pdp, 0x003c85d7 /* tag_apixx */);
				cs.SetEnabled(pdp &amp;&amp; pdp-&gt;GetHyperlinkClick().FExists());
				}
			else if (fSubSel) // then check sub selection in group/canvas</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64E7">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 812.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>812</LineStart>
<Snippet>			{
			uint istd = _IstdFromIdStyle(hribl, fHaveVal, valUse, stkTable);
			((TAP *)pprop)-&gt;istd = istd;
			if (ppropGray)
				((TAP *)ppropGray)-&gt;istd = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="CA1FA150FA205339CEACE0E4384F40F6">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdRuby() in cmd3.cpp can crash the program by dereferencing a null pointer on line 3345.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>3345</LineStart>
<Snippet>		{
		FillRubyArray(pceruby, &amp;psel-&gt;ca, fFalse, &amp;pceruby-&gt;fRubyFound);
		pcab-&gt;hps = max(pceruby-&gt;rgrbs[0].hps, hpsRubyMin);

		if (pceruby-&gt;cRubyEntry)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="8DDC4FFBDD2F8C58D288E1035D77491A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCanAutoCloseTag() in htmlout.cpp can crash the program by dereferencing a null pointer on line 2764.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlout.cpp</FileName>
<FilePath>dev/word/core/htmlout.cpp</FilePath>
<LineStart>2764</LineStart>
<Snippet>		if (ihtk == msoihtkSpan
			&amp;&amp; pwhcd != pNil
			&amp;&amp; (pwhcd-&gt;fField || pwhcd-&gt;fFtnEdn || pwhcd-&gt;fSpl || pwhcd-&gt;fGram))
			{
			return fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="982A6A312DB49946D9E1A7133D16466D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FPersistColorSchemeMappingToHtml() in htmlout.cpp can crash the program by dereferencing a null pointer on line 10849.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlout.cpp</FileName>
<FilePath>dev/word/core/htmlout.cpp</FilePath>
<LineStart>10849</LineStart>
<Snippet>
LRet:
	pstm-&gt;Release();
	pstm = NULL;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="7902B059EFDEB7D7B28E4F27DA9B074E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FComparePldrsels() in pagevw.cpp can crash the program by dereferencing a null pointer on line 8902.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pagevw.cpp</FileName>
<FilePath>dev/word/client/shared/pagevw.cpp</FilePath>
<LineStart>8902</LineStart>
<Snippet>	for (idrsel = 0; idrsel &lt; idrselMac; idrsel++)
		{
		pdrselOld = PdrselFetchAndFree(hpldrselOld, rgidrselOld[idrsel], &amp;drfOld);
		pdrselNew = PdrselFetch(hpldrselNew, idrsel, &amp;drfNew);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="2BEB09B1B3A80ECA066F83E39F1EE38E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IdOurMessageBoxEidCxt() in prompt.cpp can crash the program by dereferencing a null pointer on line 174.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>prompt.cpp</FileName>
<FilePath>dev/word/client/fastmodel/prompt.cpp</FilePath>
<LineStart>174</LineStart>
<Snippet>	if (mbType == MB_OK)
		{
		MOX::UseDialogManager().DisplayNonBlockingDialog(Mso::ApplicationModel::CurrentAppFrameApp().UseExecutionContext(), *DialogInfo.Get());
		return IDOK;
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="3D8F81ACC26CE881B0D9FB1CAC58E4FF">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WriteRtfTap() in rtfout.cpp can crash the program by dereferencing a null pointer on line 12562.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfout.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfout.cpp</FilePath>
<LineStart>12562</LineStart>
<Snippet>	if (fAlwaysWrite ||
			ptap-&gt;itcMac != itcMac ||
			FNeRgsw(ptap, &amp;vtapFetch, cwTAPBase) ||
			FNeRgch(ptap-&gt;rgdxaCenterPrint, vtapFetch.rgdxaCenterPrint,
				(itcMac + 1) * cbPrlXa) ||</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6533">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1882.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1882</LineStart>
<Snippet>			break;
		case irrbRaftnstart:
			((DOP *)pprop)-&gt;nEdn = valUse;
			break;
		case irrbRftnrestart:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6559">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2595.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2595</LineStart>
<Snippet>			break;
		case irrbRdxaAbsSpec:
			((PAP *)pprop)-&gt;dxaAbs = -valUse;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;dxaAbs = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64F7">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1144.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1144</LineStart>
<Snippet>			break;
		case irrbRpnstrike:
			((PAP *)pprop)-&gt;anld.fSetStrike    = fTrue;
			((PAP *)pprop)-&gt;anld.fStrike       = valUse != 0;
			if (ppropGray)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6530">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1873.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1873</LineStart>
<Snippet>			break;
		case irrbRaftnn:
			((DOP *)pprop)-&gt;nfcEdnRef = NfcRtfNumConvert(valUse, LidFromCpg((**hribl).ansicpg));
			break;
        case irrbRnfc:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D319077B43E126A064CB6B9258690539">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Invoke() in obwrdbas.cpp can crash the program by dereferencing a null pointer on line 1677.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obwrdbas.cpp</FileName>
<FilePath>dev/word/client/desktop/obwrdbas.cpp</FilePath>
<LineStart>1677</LineStart>
<Snippet>	for (i = 0; i &lt; iwoprArgs; i++)
		{
		if (mpWoprDispparams[i] != -1)
			{
			VARIANTARG *pvarg;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="3E1B4923CB2FC15B8B2DE69CE966F954">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FInitFEIMEIID() in imecmd.cpp can crash the program by dereferencing a null pointer on line 98.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>imecmd.cpp</FileName>
<FilePath>dev/word/client/desktop/imecmd.cpp</FilePath>
<LineStart>98</LineStart>
<Snippet>		{
		//bump the ref count since I'll keep the pointer as punk as well...
		punk-&gt;AddRef();
		vPrivIME.punk = punk;
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="17728963AD733B4EEAB501624F9E1937">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdInsPicture() in pic2.cpp can crash the program by dereferencing a null pointer on line 1405.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pic2.cpp</FileName>
<FilePath>dev/word/client/desktop/pic2.cpp</FilePath>
<LineStart>1405</LineStart>
<Snippet>
					ppibT = ppxPibMulti-&gt;PGet(i);
					XszToXstz(*ppxPwchFile-&gt;PGet(i), XstzCxch(xstzFile));
					MakeXstzRelativeToDoc(xstzFile, CxchMaxXstz(xstzFile), psel-&gt;ca.pdod);
					} while (1);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="24C6D361EE239E035D74C0C1CFDE7CAC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function RulerMarkWndProc() in rulerdrw.cpp can crash the program by dereferencing a null pointer on line 633.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rulerdrw.cpp</FileName>
<FilePath>dev/word/client/desktop/rulerdrw.cpp</FilePath>
<LineStart>633</LineStart>
<Snippet>		RC rc;
		GetClientRect(hwndMark, &amp;rc.rect);
		CRulerLayer *pLyr = lprsd-&gt;hwndRuler == hwndMark ? lprsd-&gt;pHRulerLyr : lprsd-&gt;pVRulerLyr;
		if (pLyr != pNil)
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="1A5E597B412EA190F6972DE1A1F070C1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdDrCurs1() in curskeys.cpp can crash the program by dereferencing a null pointer on line 5154.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>curskeys.cpp</FileName>
<FilePath>dev/word/client/shared/curskeys.cpp</FilePath>
<LineStart>5154</LineStart>
<Snippet>/* if inside of a table and we're moving right and we have not exhausted DRs
	in table row, we know proper DR is the table DR to the right. */
		if (fInTable &amp;&amp; fRight &amp;&amp; idr + 1 &lt; (*hpldr)-&gt;idrMac)
			{
			hpldrNextEdl = hpldr;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6544">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2108.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2108</LineStart>
<Snippet>			break;
		case irrbRstylesortmethod:
			((DOP *)pprop)-&gt;ssm = valUse;
			break;
		case irrbRenforceprot:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="A9FE0B11AE4B73358AA03F9F077E0769">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 334.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>334</LineStart>
<Snippet>		{
		if (fHaveVal &amp;&amp; (FRtlFromLidBi(val) || FLidSA(val)))
			rrb.b = cof(lidBi);
		}
		</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="1B77255F6A83877F4FB8156156A3799D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCreateControlsOtb() in otb.cpp can crash the program by dereferencing a null pointer on line 10473.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>otb.cpp</FileName>
<FilePath>dev/word/client/desktop/otb.cpp</FilePath>
<LineStart>10473</LineStart>
<Snippet>				XCHAR xstzCur[ixchMaxXstz];

				picNew = ptcrNew-&gt;pic;
				if (!picc-&gt;FGetControl(iCtl, &amp;tcrCurrent))
					break;		// Oh, well. Rebuild.</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F7D25EC4097B5632750669610AF58459">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdFixGrammar() in spell.cpp can crash the program by dereferencing a null pointer on line 5078.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/desktop/spell.cpp</FilePath>
<LineStart>5078</LineStart>
<Snippet>
			AssertTag(vhwwdCur, ASSERTTAG('gisw'));
			DLLCheckAddUdr(pgrld-&gt;ncl.nlcid, NLUDR_DEFAULT, HwndFromWwd(vhwwdCur), xszT, NL_ADDUDR_NEW_WORD);
			}
		break;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="0F1AC34A3906A24CB1364244F11661DA">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FSetOfficeCenterTypoDefaults() in options.cpp can crash the program by dereferencing a null pointer on line 7761.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>options.cpp</FileName>
<FilePath>dev/word/client/desktop/options.cpp</FilePath>
<LineStart>7761</LineStart>
<Snippet>				fRecord = (FRecordStartLine() &amp;&amp;
							FRecordFci(fciMstOptionsTypography)	&amp;&amp;
							FRecordLong(pcabTypoCustom-&gt;lidKinsoku)	&amp;&amp;
							FRecordXsz(xszFPunct) &amp;&amp;
							FRecordXsz(xszLPunct) &amp;&amp;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64DF">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 727.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>727</LineStart>
<Snippet>			break;
		case irrbRrin:	// logical right indent, 9 style
			((PAP *)pprop)-&gt;dxaRight = valUse;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;dxaRight = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="6F1CD52A373DC4A2A39129DCC672E2EA">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function InitPMSetupDlgWpms() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 1192.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>1192</LineStart>
<Snippet>	// Only show Setup button for envelope/labels when we haven't already
	// setup them up and we have a valid main document.
	if (f &amp;&amp; FMask(wpmsdtNew, (wpmsdtEnvelope | wpmsdtLabels)) &amp;&amp; !lppmd-&gt;pms.rfs.fMainDocSetup)
		{
		SetVisibleTmc(tmcPMSEditMain, fFalse);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F650C">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1630.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1630</LineStart>
<Snippet>			// ZIYIW : let's set the kcd value here anyway, 
			// FormatLineCore() should be adjusted to handle this as well
			((CHP *)pprop)-&gt;kcd = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="182C8E70F7C38F59C3927A4630A3CCE4">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PdodOpenFnmCore2() in open.cpp can crash the program by dereferencing a null pointer on line 2320.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>open.cpp</FileName>
<FilePath>dev/word/core/open.cpp</FilePath>
<LineStart>2320</LineStart>
<Snippet>					UpdateTitlesForDoc(pdod);
				}
			if (((dof2 &amp; dof2NewNativeOnly) &amp;&amp; !FMetroFtyp(pfcb-&gt;ftypStatic))
				|| ((dof &amp; dofNativeOnly) &amp;&amp; (!pfcb-&gt;fHasFib || !FNativeFtyp(pfcb-&gt;ftypStatic))))
				{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DC56B8D06210381726CC9CC73C352022">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TrySelectingE2oAndDrawingElements() in wordgroupeditor.cpp can crash the program by dereferencing a null pointer on line 94.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>wordgroupeditor.cpp</FileName>
<FilePath>dev/word/core/wdoart/wordgroupeditor.cpp</FilePath>
<LineStart>94</LineStart>
<Snippet>      // If the group is NOT selected, the first select attempt will select the group;
      // the second attempt will select the object inside the group.
      pDsi-&gt;FClickSelect( prDrawingElement );

      if ( !pDsi-&gt;FContains ( prDrawingElement ) )</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="626384FA8B536FAF93466961A0271F6A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaHandlerProp() in obrange.cpp can crash the program by dereferencing a null pointer on line 11842.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>11842</LineStart>
<Snippet>							{
							IDTableStyle *pidTableStyle;
							int cnfc = UlOaGenericGetInstanceData(pfont-&gt;obfmt.pie);
									
							if (SUCCEEDED(hr = HrOamGenericGetParent(pfont-&gt;obfmt.pie, &amp;pidTableStyle)))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6564">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2856.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2856</LineStart>
<Snippet>		case irrbRtrleft:
			AssertTag((**hribl).rds != rdsStylesheet, 0x0035c041 /* tag_an2bb */);
			((TAP *)pprop)-&gt;rgdxaCenter[0] = valUse;
			break;
		case irrbRtrowd:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F650F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1647.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1647</LineStart>
<Snippet>			else // Continuation of FitText
				{
			 	((CHP *)pprop)-&gt;dxaFitText = (**hribl).dxaFitTextRTFLast;
	 			((CHP *)pprop)-&gt;lFitTextID = (**hribl).lFitTextIDRTFLast;
				}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="2BEB09B1B3A80ECA066F83E39F1EE38D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IdOurMessageBoxEidCxt() in prompt.cpp can crash the program by dereferencing a null pointer on line 134.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>prompt.cpp</FileName>
<FilePath>dev/word/client/fastmodel/prompt.cpp</FilePath>
<LineStart>134</LineStart>
<Snippet>
	WinRT::ComPtr&lt;MOX::IMsoDialogInformation&gt; DialogInfo;
	MOX::UseDialogManager().CreateDialogInformation(&amp;DialogInfo);

	WinRT::ComPtr&lt;ABI::Windows::Foundation::Collections::IVector&lt;IInspectable*&gt;&gt; ButtonsInfo;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B51791394DF5CA36536DF501B642F9DC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FLoadMailMergeTemplate() in pmhclient.cpp can crash the program by dereferencing a null pointer on line 402.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhclient.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhclient.cpp</FilePath>
<LineStart>402</LineStart>
<Snippet>		{
		lppmd = LppmdFromPdod(pdodMain);
		lppmf = LppmfFromLppmd(lppmd, lppmd-&gt;pms.ipmfFetch);
		pMailMerge = lppmf-&gt;pIMsoMailMerge;
		lppmf-&gt;pIMsoMailMerge = pNil;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4855574C0364F94FC19474F0542AD1E6">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FUpdatePrCore() in disp3.cpp can crash the program by dereferencing a null pointer on line 3087.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>3087</LineStart>
<Snippet>	/* If we still think we have a Display Manager update going, free it. */
	if (fDmUpdate)
		pidm-&gt;FreeUpdate(&amp;dmub);
	(*hpr)-&gt;pfudb = pNil;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="182C8E70F7C38F59C3927A4630A3CCE3">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PdodOpenFnmCore2() in open.cpp can crash the program by dereferencing a null pointer on line 2316.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>open.cpp</FileName>
<FilePath>dev/word/core/open.cpp</FilePath>
<LineStart>2316</LineStart>
<Snippet>			if ((dof &amp; dofReadOnly) != 0 &amp;&amp; !fReadWriteOnSave)
				{
				pfcb-&gt;fReadOnly = fTrue;
				if (pdod != pdodNil)
					UpdateTitlesForDoc(pdod);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F90B2CF361B4172CAF51858FFAF72EDF">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCloneODSO() in pmhwdsocore.cpp can crash the program by dereferencing a null pointer on line 1000.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhwdsocore.cpp</FileName>
<FilePath>dev/word/core/pmhwdsocore.cpp</FilePath>
<LineStart>1000</LineStart>
<Snippet>	if (hr != S_OK ||
			podsoSrc-&gt;QueryInterface(IID_IMsoOdsoPersist,
					(void **)&amp;podsopSrc) != S_OK || podso-&gt;QueryInterface(IID_IMsoOdsoPersist, (void **)&amp;podsop) != S_OK)
		{
		goto LError;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D99B92C97C4802950FDA9FCA838D0746">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BptlHandleSelChange() in proof.cpp can crash the program by dereferencing a null pointer on line 2397.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>proof.cpp</FileName>
<FilePath>dev/word/client/shared/proof.cpp</FilePath>
<LineStart>2397</LineStart>
<Snippet>			//			IP is not in the pending word (staying at cpLim counts), 
			//		reset pending word ca
			if (pcale-&gt;ca.pdod != pdodNil &amp;&amp; 
					(cpFirst != cpLim || 
						pcale-&gt;ca.pdod != doc ||</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6520">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1733.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1733</LineStart>
<Snippet>
		case irrbRshowplaceholdtext:
			((DOP *)pprop)-&gt;fShowPlaceholderText = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DF7AB5C6ED5586E367EA22D5DC337AF6">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcInsDatabase() in pmhdata.cpp can crash the program by dereferencing a null pointer on line 1825.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhdata.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhdata.cpp</FilePath>
<LineStart>1825</LineStart>
<Snippet>			XCHAR **hxszArg;
			int cxch;
			PMFS far *lppmfs = LppmfsFromLppmd(lppmd, ipmfInsData);
			XCHAR xstzFile[cbMaxStz];
			XCHAR *pxch;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="DEFBE24413CA3A254D7E4CB6C4972410">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaHandlerOfficeDrawingWrapShapeAnchor() in obdoc.cpp can crash the program by dereferencing a null pointer on line 12754.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obdoc.cpp</FileName>
<FilePath>dev/word/client/desktop/obdoc.cpp</FilePath>
<LineStart>12754</LineStart>
<Snippet>		{
		MoveRgb(pdispidSrc, pdispidSrc + 1, cdispidSlide * sizeof(DISPID));
		*pdispidSrc = dispidAnchor;
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="0897E17CB0C849138F9CC6F0EEBBCE0B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PnodeAddNewElement() in bibcore.cpp can crash the program by dereferencing a null pointer on line 4669.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>bibcore.cpp</FileName>
<FilePath>dev/word/core/bibcore.cpp</FilePath>
<LineStart>4669</LineStart>
<Snippet>			if (bstr != pNil)
				{
				pnodeT-&gt;put_text(bstr);
				FreeBstr(bstr);
				}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="881670DC1B6ADEA35EDC702D7C163EB2">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdLstDefault() in numdlg.cpp can crash the program by dereferencing a null pointer on line 2228.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>numdlg.cpp</FileName>
<FilePath>dev/word/client/shared/numdlg.cpp</FilePath>
<LineStart>2228</LineStart>
<Snippet>				return cmdError;

			CacheParaCa(&amp;psel-&gt;ca);
			if (IlfoFromCachedPara() == ilfoNil)
				{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4A9798EDB5FC1089C4FF1D4A0FFAEEE8">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FInitOrgListView() in organize.cpp can crash the program by dereferencing a null pointer on line 1117.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>organize.cpp</FileName>
<FilePath>dev/word/client/desktop/organize.cpp</FilePath>
<LineStart>1117</LineStart>
<Snippet>	PDOD pdod = vpdodLego;
	EGS egs;
	HPL hplItems = (*hcab)-&gt;hplItems;

	AssertTag(hcab, ASSERTTAG('2w3p'));	</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C033A4B8C6F77C23071796977C5478E9">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOamXMLMappingSetMappingByNode() in obxml.cpp can crash the program by dereferencing a null pointer on line 8891.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obxml.cpp</FileName>
<FilePath>dev/word/client/desktop/obxml.cpp</FilePath>
<LineStart>8891</LineStart>
<Snippet>		}

	FailHrGoto(pimxsl-&gt;HrCreateXPath(&amp;bstrXPath), LRet);

	FailHrGoto(pimxsl-&gt;HrGetSelectionNamespaces(&amp;bstrPrefixMapping), LRet);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="3372AB5480AED7485CE6780FB89FEA52">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FPopulateBBCalendarDataSource() in sdtsupp.cpp can crash the program by dereferencing a null pointer on line 6288.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>sdtsupp.cpp</FileName>
<FilePath>dev/word/client/desktop/sdtsupp.cpp</FilePath>
<LineStart>6288</LineStart>
<Snippet>				psdti-&gt;iStoreDateFormat = sdfText;
				}
			pist-&gt;Release();
			}
		else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B96AF731CB7E2C9AA33FB2AF18F1199">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TSplScanCore() in spell.cpp can crash the program by dereferencing a null pointer on line 2622.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>2622</LineStart>
<Snippet>			{
			MsoHrResetProofDoc(PIProofDocumentFromPspld(pspld));
			pspld-&gt;apSib.sstate = AppLevelProofing::sstateNew;
			}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="3CE5829BBA0131DD0DB2A05BB87E9891">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDefProofDlgProc() in proof2.cpp can crash the program by dereferencing a null pointer on line 719.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>proof2.cpp</FileName>
<FilePath>dev/word/client/desktop/proof2.cpp</FilePath>
<LineStart>719</LineStart>
<Snippet>			}

		pptfs-&gt;fDialogUp = fTrue;
		if (pptfs-&gt;fDialogUp &amp;&amp; pptfs-&gt;ptlOuter != ptlNil)
		  {</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="6DCD94AF23B60E39FB5886AA54364639">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FEnsurePrinterDrawingInfoCore() in dops.cpp can crash the program by dereferencing a null pointer on line 3781.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dops.cpp</FileName>
<FilePath>dev/word/core/dops.cpp</FilePath>
<LineStart>3781</LineStart>
<Snippet>	lrgmb.poapm = ppj-&gt;poapm;
	for (lrgmb.ilrg = 0; lrgmb.ilrg &lt; ilrgMac; lrgmb.ilrg++, plrg++)
		plrg-&gt;pfnlrg(lrgmPrintP1, &amp;lrgmb, plrg);

	if (fPrintArtos)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="47253FD8EF212A287F9EA5719DEBBF38">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdLabelAction() in label.cpp can crash the program by dereferencing a null pointer on line 322.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>label.cpp</FileName>
<FilePath>dev/word/client/desktop/label.cpp</FilePath>
<LineStart>322</LineStart>
<Snippet>
	if (!((*hcab)-&gt;docMain == pdodNil || (FMailMergeMainPdod((*hcab)-&gt;docMain) &amp;&amp;
		FMask(LppmdFromPdod((*hcab)-&gt;docMain)-&gt;pms.wpmsdt, wpmsdtLabels))))
		return cmdError;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="3D2D237B9C52CA4BDB4BAE0344281137">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FProcessImageArg() in htmlin.cpp can crash the program by dereferencing a null pointer on line 5279.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlin.cpp</FileName>
<FilePath>dev/word/core/htmlin.cpp</FilePath>
<LineStart>5279</LineStart>
<Snippet>
	case msoihtkSrc:
		if (*pwz == pNil)
			{
			*pwz = rpv.wzVal;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6575">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 3437.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>3437</LineStart>
<Snippet>
		case irrbRdgvshow:
			((DOP *)pprop)-&gt;dogrid.dyGridDisplay = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6578">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 3451.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>3451</LineStart>
<Snippet>
		case irrbRwwrap:
			((PAP *)pprop)-&gt;fWordWrap = valUse;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;fWordWrap = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6560">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2635.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2635</LineStart>
<Snippet>			break;
		case irrbRdropcapt:
			_Dcs(((PAP *)pprop)-&gt;dcs).fdct = max(0, min(valUse, fdctLast));
			if (ppropGray)
				((PAP *)ppropGray)-&gt;dcs = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64F9">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1171.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1171</LineStart>
<Snippet>						GetPl((**hribl).hplCv, valUse, &amp;cv);
					}
				((PAP *)pprop)-&gt;anld.cv = cv;
				if (ppropGray)
					((PAP *)ppropGray)-&gt;anld.cv = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D1CF85CBA0259C70DD0CD2EA536132D1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _CpTransPara() in cnvmw.cpp can crash the program by dereferencing a null pointer on line 2656.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cnvmw.cpp</FileName>
<FilePath>dev/word/client/desktop/cnvmw.cpp</FilePath>
<LineStart>2656</LineStart>
<Snippet>			break;
			}
		else if (*hpxch == chFormula &amp;&amp; !vchpFetch.grf.fSpec)
			{
			// We have a formula, we need to turn it into an</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4E9DE60D3BADB6BEE90B632A7CAF3CEC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaCallInvoke() in obgen.cpp can crash the program by dereferencing a null pointer on line 1395.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obgen.cpp</FileName>
<FilePath>dev/word/client/desktop/obgen.cpp</FilePath>
<LineStart>1395</LineStart>
<Snippet>	for (int i = 0; i &lt; cParams; i++, pvarArg--)
		{
		pvarArg-&gt;vt = (i == pomdata-&gt;cParams) ? pomdata-&gt;vtReturn :
				pgen-&gt;m_pgodInstance-&gt;poidata-&gt;rgpopdata[pomdata-&gt;ipopdata][i].vt;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="17728963AD733B4EEAB501624F9E1936">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdInsPicture() in pic2.cpp can crash the program by dereferencing a null pointer on line 1371.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pic2.cpp</FileName>
<FilePath>dev/word/client/desktop/pic2.cpp</FilePath>
<LineStart>1371</LineStart>
<Snippet>
					ppibT = ppxPibMulti-&gt;PGet(i);
					XszToXstz(*ppxPwchFile-&gt;PGet(i), XstzCxch(xstzFile));
					MakeXstzRelativeToDoc(xstzFile, CxchMaxXstz(xstzFile), psel-&gt;ca.pdod);
					} while (1);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="1014870878F0137545AB68EFB3EF476B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FillRgtplVrsl() in numdlg.cpp can crash the program by dereferencing a null pointer on line 3862.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>numdlg.cpp</FileName>
<FilePath>dev/word/client/shared/numdlg.cpp</FilePath>
<LineStart>3862</LineStart>
<Snippet>	while (PtplEnum(flgpdSingleLevelRglvl, &amp;ptpl) != pNil)
		{
		ptpl-&gt;ilvlApply = 0;
		ptpl-&gt;ilvlSel = ilvlSel;
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6567">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2888.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2888</LineStart>
<Snippet>				}

			((TAP *)pprop)-&gt;itcMac = 0;
			(**hribl).itc = 0;
			break;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F653E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2009.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2009</LineStart>
<Snippet>		case irrbRpghsxn:
			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c007 /* tag_an2ah */);
			((SEP *)pprop)-&gt;pginfo.yaPage = (uns)valUse;
			break;
		case irrbRmarglsxn:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D720C7404C627C64FF4F2AA32AA26BF5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcNewDataSource() in pmhdata.cpp can crash the program by dereferencing a null pointer on line 1015.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhdata.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhdata.cpp</FilePath>
<LineStart>1015</LineStart>
<Snippet>			AssertTag(IbstMacSttb(lppmd-&gt;hsttbMergeFields) &gt; 0, ASSERTTAG('dxuk'));

			ibstMac = min(IbstMacSttb(lppmd-&gt;hsttbMergeFields)-1, cchMaxSz/2);

			// We're creating a new data file for a main document that has an</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="5C09DDFFEC454645E02A030AE5C75F61">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2048.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2048</LineStart>
<Snippet>			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c012 /* tag_an2as */);
			AssertTag (rrb.pgc == pgcDopSep, 0x0035c013 /* tag_an2at */);
			pdopsep-&gt;dyaBottom = psep-&gt;pginfo.dyaBottom = valUse;
			break;
		case irrbRmargl: </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="149F4D34CB4161B7911F2BB88A808198">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FArrangePages() in disppage.cpp can crash the program by dereferencing a null pointer on line 1833.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disppage.cpp</FileName>
<FilePath>dev/word/client/shared/disppage.cpp</FilePath>
<LineStart>1833</LineStart>
<Snippet>				bool fAnyInRowShowing = (ppgf == pNil);
				for (int ipgdTest = ipgd; !fAnyInRowShowing &amp;&amp; ipgdTest &lt; ipgdLast; ipgdTest++)
					fAnyInRowShowing |= ppgf-&gt;FShowIpgd(ipgdTest);

				// Only if there's anything to show in that row, take it into account</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="2D4A717DCBA3B488B2653EFB63B150BE">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdFixSpelling() in spell.cpp can crash the program by dereferencing a null pointer on line 10218.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>10218</LineStart>
<Snippet>		{
		SPLD *pspld;
		pspld = PspldFromLid(pspsc-&gt;lidTestWord, !pcmb-&gt;fRedo/*fAssert*/);

		MsoSqmIncrementOne(DATAID_WORDSPELLINGIGNORE);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B51791394DF5CA36536DF501B642F9DD">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FLoadMailMergeTemplate() in pmhclient.cpp can crash the program by dereferencing a null pointer on line 412.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhclient.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhclient.cpp</FilePath>
<LineStart>412</LineStart>
<Snippet>		{
		lppmd = LppmdFromPdod(pdodMain);
		lppmf = LppmfFromLppmd(lppmd, lppmd-&gt;pms.ipmfFetch);

		pMailMerge = lppmf-&gt;pIMsoMailMerge;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6555">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2565.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2565</LineStart>
<Snippet>
		case irrbRtrftsWidthB:
			((TAP *)pprop)-&gt;ftsWidthBefore = FInLimits(valUse, ftsNil, ftsMax) ? valUse : ftsNil;
			if (ppropGray)
				((TAP *)ppropGray)-&gt;ftsWidthBefore = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="A3B6C07E85DF3166FC76DC990317E4F5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FWaitOnDclMacro() in eldde.cpp can crash the program by dereferencing a null pointer on line 512.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>eldde.cpp</FileName>
<FilePath>dev/word/client/desktop/eldde.cpp</FilePath>
<LineStart>512</LineStart>
<Snippet>		while (FAssign(fWaiting = (mpdclhdcld[dcl] != hNil &amp;&amp;
				!(pdcld = PdcldDcl(dcl))-&gt;fResponse)) &amp;&amp;
				!pdcld-&gt;fTermReceived &amp;&amp;
				FWaitDdeMessage (usecTimeOut, usecHourGlass, &amp;fHourGlass, &amp;fAbort));
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F67A919FF5BF9E2D058830AC4A9ACC13">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrDispatchWTablePosition() in xmltbl.cpp can crash the program by dereferencing a null pointer on line 4549.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmltbl.cpp</FileName>
<FilePath>dev/word/core/xmltbl.cpp</FilePath>
<LineStart>4549</LineStart>
<Snippet>
	hr = HrTranslateTableAttributeLong(pxin, pxtd, pAttr, 
			xmltkaWTablePosBottomFromText, offset(TAP, dyaFromTextBottom));

	if (FAILED(hr))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="93DE19FF66C4F1F90165038F7CD5A0D6">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function SortOrgItems() in organize.cpp can crash the program by dereferencing a null pointer on line 834.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>organize.cpp</FileName>
<FilePath>dev/word/client/desktop/organize.cpp</FilePath>
<LineStart>834</LineStart>
<Snippet>{
    HCABORGANIZER hcab = (HCABORGANIZER) GetWindowLongPtr(hwndLV, GWLP_USERDATA);
	HPL hplItems = (*hcab)-&gt;hplItems;
	LEGOREC lr;
	</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="3CE5829BBA0131DD0DB2A05BB87E9894">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDefProofDlgProc() in proof2.cpp can crash the program by dereferencing a null pointer on line 834.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>proof2.cpp</FileName>
<FilePath>dev/word/client/desktop/proof2.cpp</FilePath>
<LineStart>834</LineStart>
<Snippet>			/* make ESC close the dialog */
			AssertTag(!pptfs-&gt;fCleanExit, ASSERTTAG('eanz'));
			pptfs-&gt;fEndDialog = fTrue;
			EndDlg(tmcCancel);
			if (PptfsFromPtl(ptl) != pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B8EFEC5A28C7E2784206D1D5A9E3718">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function RichEditWndProc() in dlgredt.cpp can crash the program by dereferencing a null pointer on line 1477.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlgredt.cpp</FileName>
<FilePath>dev/word/client/desktop/dlgredt.cpp</FilePath>
<LineStart>1477</LineStart>
<Snippet>		EnableErrBeeps();
		// Need to update lprtec-&gt;hwwd when it's dirty!
		if ((*(lprtec-&gt;hwwd))-&gt;fDirty)
			UpdateRTECWwd(lprtec-&gt;hwwd);
		BlinkRTECCursor();</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="29E83EFCBA1613A91B6169D5A9F2A1C5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FRefineRxvFromPxch() in rxv.cpp can crash the program by dereferencing a null pointer on line 374.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rxv.cpp</FileName>
<FilePath>dev/word/core/rxv.cpp</FilePath>
<LineStart>374</LineStart>
<Snippet>
	if (grfrxv &amp; frxvString)
		*pxchValue = 0;

	// If it's not an int, it can't be a unit or a percent</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6528">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1836.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1836</LineStart>
<Snippet>		case irrbRexpnd:
			// dxaSpace emitted in qps.
			((CHP *)pprop)-&gt;dxaSpace = valUse * 5;
			if (ppropGray)
				((CHP *)ppropGray)-&gt;dxaSpace = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="FE0953ADB875A4C7D5EFFACEC2756425">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TrackSplitBar() in splitter.cpp can crash the program by dereferencing a null pointer on line 262.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>splitter.cpp</FileName>
<FilePath>dev/word/client/desktop/splitter.cpp</FilePath>
<LineStart>262</LineStart>
<Snippet>		MFS *pmfsParent = pmfr-&gt;pmfsParent;
		if (pmfsParent &amp;&amp; pmfsParent-&gt;pfsr &amp;&amp; 
				FNeRc(&amp;pmwd-&gt;PmfsRoot()-&gt;rcLast, &amp;rcMwd))
			{ 
			// load the pfsn sizes into the rcLast cache for easy access</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F651A">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1708.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1708</LineStart>
<Snippet>
		case irrbRtrackformatting:
			((DOP *)pprop)-&gt;fRMTrackFormatting = valUse;
			break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="7E2D1114E995E31454901F5CEAB8A7C5">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _RotateApoObjects() in dlglook1.cpp can crash the program by dereferencing a null pointer on line 936.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlglook1.cpp</FileName>
<FilePath>dev/word/client/shared/dlglook1.cpp</FilePath>
<LineStart>936</LineStart>
<Snippet>			if (tBegin != tNo)
				{
				fArm = pidg-&gt;FApplyPropertiesToShape(figucaen.figuExt.spa.hsp,
				rgspp, sizeof(rgspp)/sizeof(rgspp[0]),
				msofasppShapes | msofasppGroups);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="BD02FDACB82B46568C9725DEE84D8771">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcCheckErrors() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 6357.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>6357</LineStart>
<Snippet>	if (pcmb-&gt;fAction)
		{
		if (lppmd-&gt;pms.rfs.grfChkErr == fChkErrReport)
			lppmd-&gt;pms.rfs.grfChkErr = fChkErrPause; // T3_NEW BUG# 8484
		lppmd-&gt;fCheckErrors = fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="4B96AF731CB7E2C9AA33FB2AF18F11A0">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TSplScanCore() in spell.cpp can crash the program by dereferencing a null pointer on line 3150.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/shared/spell.cpp</FilePath>
<LineStart>3150</LineStart>
<Snippet>								{
								AssertTag(pspsc-&gt;xszTestWord[pspsc-&gt;cchTestWord] == xchNull, 0x003d159c /* tag_aprw2 */);
								pspld-&gt;apSib.cchUse = pspld-&gt;apSib.cch = CchXsz(pspld-&gt;xszInput);
								}
							else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="3484FA71CD5DA1FEC751DFB9739D0B5D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FcrCalcFltAddressBlock() in fieldspc.cpp can crash the program by dereferencing a null pointer on line 678.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldspc.cpp</FileName>
<FilePath>dev/word/client/desktop/fieldspc.cpp</FilePath>
<LineStart>678</LineStart>
<Snippet>	AssertTag(fShowData &amp;&amp; LppmdFromPdod(PdodMain(doc)) != lpNil, ASSERTTAG('hzcg'));
	// We overran the database so show empty fields
	if ((lppmd = LppmdFromPdod(PdodMain(doc)))-&gt;grfErr)
		return fcrNormal;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="7BA21C5597B0B24DEB5FB66D309A7F19">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function UIMSyncDispAttr() in uim.cpp can crash the program by dereferencing a null pointer on line 1860.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>uim.cpp</FileName>
<FilePath>dev/word/client/shared/uim.cpp</FilePath>
<LineStart>1860</LineStart>
<Snippet>		if (prangeProp)
			{
			prangeProp-&gt;Release();
			prangeProp = pNil;
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="625C06FE5B588DD25783099F6DD309AD">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _ForegroundCheckDocumentForFactoids() in factoid.cpp can crash the program by dereferencing a null pointer on line 3664.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>factoid.cpp</FileName>
<FilePath>dev/word/client/desktop/factoid.cpp</FilePath>
<LineStart>3664</LineStart>
<Snippet>LFinish:
		if (fResetThread)
			pftdld-&gt;pifs-&gt;ResetThreadPriority();

		// if a factoid executes a run action, then for safety we will stop executing all</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E3076A44BA97C2086B44684424A9BC4E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdHyphenate() in dlghyph.cpp can crash the program by dereferencing a null pointer on line 275.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlghyph.cpp</FileName>
<FilePath>dev/word/client/desktop/dlghyph.cpp</FilePath>
<LineStart>275</LineStart>
<Snippet>					return cmdError;

				phyphundo-&gt;fAutoHyphen = pdop-&gt;fAutoHyphen;
				phyphundo-&gt;fHyphCapitals = pdop-&gt;fHyphCapitals;
				phyphundo-&gt;cConsecHypLim = pdop-&gt;cConsecHypLim;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="107130AF0FB1980FB70D3DB0DAD7669E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdToggleFormsDesign() in ocxclnt.cpp can crash the program by dereferencing a null pointer on line 2939.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ocxclnt.cpp</FileName>
<FilePath>dev/word/client/desktop/ocxclnt.cpp</FilePath>
<LineStart>2939</LineStart>
<Snippet>		// If we're coming out of design mode, save placeholder text. This can stop
		// the rest of the operation if it fails, so do it up front.
		if (pdod-&gt;pud-&gt;fDesignMode)
			{
			int eid = eidNil;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64D8">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 500.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>500</LineStart>
<Snippet>	case rrbaInt:
	case rrbaUInt:
		*(int *)(pprop + rrb.b) = valUse;
		if (ppropGray)
			*(int *)(ppropGray + rrb.b) = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64F8">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1153.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1153</LineStart>
<Snippet>			break;
		case irrbRpnkul:
			((PAP *)pprop)-&gt;anld.fSetKul       = fTrue;
			((PAP *)pprop)-&gt;anld.kul = valUse;
			if (ppropGray)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="826F8DA014EDBA6FF8EB62C103146A93">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdEncloseChar() in cmd3.cpp can crash the program by dereferencing a null pointer on line 13011.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>13011</LineStart>
<Snippet>	if (pcmb-&gt;fCheck)
		{
		if (FRtRangeError(pcab-&gt;iStyle, ecNone, ecText)
				|| FRtRangeError(pcab-&gt;iEnclosure, kecCircle, kecDiamond))
			return cmdError;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="76A75CB8C0D449F90BB0E8DB39CCDE8D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FToggleMergeView() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 9642.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>9642</LineStart>
<Snippet>	AssertTag(lppmd != lpNil, ASSERTTAG('cprk'));

	if (lppmd-&gt;pms.rfs.fShowData != fShowData)
		{
		lppmd-&gt;pms.rfs.fShowData = fShowData;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6551">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2539.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2539</LineStart>
<Snippet>			break;
		case irrbRtpcHorz:
			((TAP *)pprop)-&gt;pc.pcHorz = valUse;
			if (ppropGray)
				((TAP *)ppropGray)-&gt;pc.pcHorz = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="0FD15BE13FA6D0DBBF3783354CB87EDB">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FIsLetterFileName() in dlgopen.cpp can crash the program by dereferencing a null pointer on line 7143.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlgopen.cpp</FileName>
<FilePath>dev/word/client/desktop/dlgopen.cpp</FilePath>
<LineStart>7143</LineStart>
<Snippet>	for (i = 0; i &lt; crgxszSub; i++)
		{
		if (LpxchInLpxch(rgxszSub[i], CchXsz(rgxszSub[i]), xszNameUpper,
				cchName) != pNil)
			return fTrue;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6503">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1246.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1246</LineStart>
<Snippet>				// cause bad wartcolor sprms (cv and wartcolor are union'd)
				// for additive styles.  See o14 #63496.
				ClearBytes(&amp;((CHP *)pprop)-&gt;wartColor, cbWartColor);
				
				COLORREF cv = cvAuto;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="8DDC4FFBDD2F8C58D288E1035D77491B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCanAutoCloseTag() in htmlout.cpp can crash the program by dereferencing a null pointer on line 2775.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlout.cpp</FileName>
<FilePath>dev/word/core/htmlout.cpp</FilePath>
<LineStart>2775</LineStart>
<Snippet>	if (pwhcd != pNil)
		{
		if (pwhcd-&gt;fSdtParent)
			return fFalse;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="A9FE0B11AE4B73358AA03F9F077E0768">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 322.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>322</LineStart>
<Snippet>			break;
		case irrbRf:				// font code
			rrb.b = cof(_ftcBi);
			rrb.w = FtcFromLidBi(lidBiDi);
			break;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="BA7410E11F9214E01641935267269A34">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdLabelOptions() in label.cpp can crash the program by dereferencing a null pointer on line 162.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>label.cpp</FileName>
<FilePath>dev/word/client/desktop/label.cpp</FilePath>
<LineStart>162</LineStart>
<Snippet>				return cmdOK;

			if (TmcCreateLabels(&amp;cmb, hNil, lppmd-&gt;docMain, fTrue) == tmcOK)
				{
				lppmd-&gt;pms.rfs.fMainDocSetup = fTrue;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="7A3F72ED39C76F9147802FCE7D041CC9">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FOpenODSOPmd() in pmhodso.cpp can crash the program by dereferencing a null pointer on line 478.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhodso.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhodso.cpp</FilePath>
<LineStart>478</LineStart>
<Snippet>		}

	pIMsoOdso-&gt;SetClientSite(&amp;vCOdsoClientSite);

	if (pIMalloc == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="3CE5829BBA0131DD0DB2A05BB87E9892">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDefProofDlgProc() in proof2.cpp can crash the program by dereferencing a null pointer on line 764.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>proof2.cpp</FileName>
<FilePath>dev/word/client/desktop/proof2.cpp</FilePath>
<LineStart>764</LineStart>
<Snippet>		ShowInsertLine(psel);		

		if (!pptfs-&gt;fWillBeModal)
			ApplyModalTcg(tciSdm);
		break;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="05B2BC4032FF6BEE82BD544280D9CADD">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PdodFromNonRteSelCur() in docobj.cpp can crash the program by dereferencing a null pointer on line 589.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>docobj.cpp</FileName>
<FilePath>dev/word/client/desktop/docobj.cpp</FilePath>
<LineStart>589</LineStart>
<Snippet>	// if I am inside an RTE (spelling dlg), get the pdod of the document
	if (vfRichEdit &amp;&amp; FAssign(pmwd = PmwdFromHwndApp(vhwndApp)))
		return pmwd-&gt;Pdod();
	else
		return selCur.ca.pdod;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="103F70011B80D73183A1F5A709F4B139">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcFormatEnvFonts() in envelope.cpp can crash the program by dereferencing a null pointer on line 6403.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>envelope.cpp</FileName>
<FilePath>dev/word/client/desktop/envelope.cpp</FilePath>
<LineStart>6403</LineStart>
<Snippet>	if (fDialog)
		{
		if ((*hceenvlabel)-&gt;fVertical)
			{
			PDOD docT = FSenderIve((*hceenvlabel)-&gt;iveField) ?</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="8DAAF54FF6D1997878B719AB82BD9CAA">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListMergeField() in cmdpmh.cpp can crash the program by dereferencing a null pointer on line 6887.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdpmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/cmdpmh.cpp</FilePath>
<LineStart>6887</LineStart>
<Snippet>		if (LppmdFromPdod(docMain) != lpNil)
			{
			if ((hsttb = LppmdFromPdod(docMain)-&gt;hsttbMergeFields) != hsttbNil)
				{
				for (isz = 0, iszMac = (ILBE_SDM)IbstMacSttb(hsttb); isz &lt; iszMac; isz++)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6549">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2469.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2469</LineStart>
<Snippet>		case irrbRtrpat:
		case irrbRtrpct:
			pshd = &amp;(((TAP *)pprop)-&gt;shdTableDef);
			SetShdForIrrb(pshd, irrbProp, valUse, hribl);
			if (ppropGray)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="F67A919FF5BF9E2D058830AC4A9ACC11">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrDispatchWTablePosition() in xmltbl.cpp can crash the program by dereferencing a null pointer on line 4537.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmltbl.cpp</FileName>
<FilePath>dev/word/core/xmltbl.cpp</FilePath>
<LineStart>4537</LineStart>
<Snippet>
	hr = HrTranslateTableAttributeLong(pxin, pxtd, pAttr, 
			xmltkaWTablePosRightFromText, offset(TAP, dxaFromTextRight));

	if (FAILED(hr))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B4E2F8C1C710BEA1E399D2417106583D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2043.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2043</LineStart>
<Snippet>			AssertSzTag(fHaveVal, &quot;fHaveVal&quot;, 0x0035c010 /* tag_an2aq */);
			AssertTag (rrb.pgc == pgcDopSep, 0x0035c011 /* tag_an2ar */);
			pdopsep-&gt;yaPage = psep-&gt;pginfo.yaPage = (uns)valUse;
			break;
		case irrbRmargb: </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D720C7404C627C64FF4F2AA32AA26BF6">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcNewDataSource() in pmhdata.cpp can crash the program by dereferencing a null pointer on line 1123.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhdata.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhdata.cpp</FilePath>
<LineStart>1123</LineStart>
<Snippet>
		// Store New Data/Header file information
		lppmd-&gt;pms.wpms |= WpmsFromIpmf(ipmf);

		// T3 BUG 10190: Invalidate Data Source if we just created a new header source</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="3B70BAC0666ACD069657BEF2B5E8592E">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FcrCalcFltGreetingLine() in fieldspc.cpp can crash the program by dereferencing a null pointer on line 828.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldspc.cpp</FileName>
<FilePath>dev/word/client/desktop/fieldspc.cpp</FilePath>
<LineStart>828</LineStart>
<Snippet>	AssertTag(fShowData &amp;&amp; LppmdFromPdod(PdodMain(doc)) != lpNil, ASSERTTAG('hzch'));
	// We overran the database so show empty fields
	if ((lppmd = LppmdFromPdod(PdodMain(doc)))-&gt;grfErr)
		return fcrNormal;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="595ABDBAC3E3D18C9000DA589DD7B1AD">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcTabs() in tabs.cpp can crash the program by dereferencing a null pointer on line 353.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>tabs.cpp</FileName>
<FilePath>dev/word/client/desktop/tabs.cpp</FilePath>
<LineStart>353</LineStart>
<Snippet>			}

		stFGrpprl[0] = (CHAR) (1 + CchGenGrpprlTabs(lptdsd, (BYTE *)&amp;stFGrpprl[2], cbMax - 2));
		stFGrpprl[1] = (CHAR) (lptdsd-&gt;fClearAll);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="626384FA8B536FAF93466961A0271F6F">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaHandlerProp() in obrange.cpp can crash the program by dereferencing a null pointer on line 12071.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>12071</LineStart>
<Snippet>				} /* switch (iprop) */

			hr = HrOaListLevelApplyPrl(pfont-&gt;obfmt.pie, grsr.grpprl, grsr.cb);
			} /* if (fParentIsListLevel) */
		else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6512">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1666.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1666</LineStart>
<Snippet>				if (irrbProp == irrbRtny)
					{
					((CHP *)pprop)-&gt;fels.fTNY = fTrue;
					((CHP *)pprop)-&gt;fels.fTNYCompress = (valUse == 1);
					}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B8EF4C7BED45CBFF11B7BD08766A4FAC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IOleObjectClose() in ole2srvr.cpp can crash the program by dereferencing a null pointer on line 1391.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ole2srvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ole2srvr.cpp</FilePath>
<LineStart>1391</LineStart>
<Snippet>		if(vrf.fInDyadic &amp;&amp; selCur.ca.pdod == doc)
			{
			doc-&gt;crefLock++;
			if (!FCloseAllWinsOfDoc(doc, acSave, fcsVerifyForeign))
				hr = E_FAIL;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="54A836F22A214552A7EC7F10BC191A65">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FReplaceLpxchRM() in afmt.cpp can crash the program by dereferencing a null pointer on line 5801.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>afmt.cpp</FileName>
<FilePath>dev/word/client/shared/afmt.cpp</FilePath>
<LineStart>5801</LineStart>
<Snippet>		if (lpxch != pNil)
			{
			BOOL fBiDiContext = FBidiContext(lpxch, cch, pchp-&gt;grf.fBiDi);
			LID lid = fBiDiContext ? (FRtlFromLidBi(pchp-&gt;lidBi) ? pchp-&gt;lidBi : LidDefaultRtl()) :
				(FRtlFromLidBi(pchp-&gt;lid) ? lidAmerican : pchp-&gt;lid);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F655B">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 2607.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>2607</LineStart>
<Snippet>			/* values &gt; 0 are biased by 1 internally */
			/* avoid special values */
			((PAP *)pprop)-&gt;dyaAbs = DyaAbsBumpDyaAbs(valUse + 1);
			if (ppropGray)
				((PAP *)ppropGray)-&gt;dyaAbs = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64E4">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 758.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>758</LineStart>
<Snippet>			else
				{
				((PAP *)pprop)-&gt;lspd.dyaLine = NBound(valUse, -czaMax, czaMax);
				((PAP *)pprop)-&gt;lspd.fMultLinespace = fFalse;
				}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="92384A41EF8D11BA65C48AEB87D755DF">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IbnFramesetGizmo() in frameset.cpp can crash the program by dereferencing a null pointer on line 2919.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>frameset.cpp</FileName>
<FilePath>dev/word/client/desktop/frameset.cpp</FilePath>
<LineStart>2919</LineStart>
<Snippet>	ClientToScreen(hwnd, &amp;pt);
	ScreenToClient(HwndFromDlgCur(), &amp;pt);
	iSel = NFramesetMouseSelected(&amp;pt, pfrib-&gt;rgrc, pfrib-&gt;crc);
	return (iSel == iNil ? ibnNil : iSel);
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F6500">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1219.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1219</LineStart>
<Snippet>			break;
		case irrbRpnacross:
			((PAP *)pprop)-&gt;anld.fNumberAcross = fTrue;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;anld.fNumberAcross = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="7101B0AEA3813A4A2E8361DC52FFF240">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function EidWritePistmHtmlCore() in htmlout.cpp can crash the program by dereferencing a null pointer on line 8053.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlout.cpp</FileName>
<FilePath>dev/word/core/htmlout.cpp</FilePath>
<LineStart>8053</LineStart>
<Snippet>	pohepd-&gt;hppr = hppr;

	fRet = pihe-&gt;FInitExport();
	cpg = pihe-&gt;Phecd()-&gt;cp;
	if (cpg != doc-&gt;pud-&gt;cpgLastSave)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="04970268558E1A81CC04051BB67077EC">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BuildBlockRemoveLines() in disp3.cpp can crash the program by dereferencing a null pointer on line 16022.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disp3.cpp</FileName>
<FilePath>dev/word/client/shared/disp3.cpp</FilePath>
<LineStart>16022</LineStart>
<Snippet>		AssertTag(phts-&gt;drk == drkText, 0x003c819f /* tag_apig5 */);
	
		if ((*hpldrInner)-&gt;hpldrBack == hNil)
			{ // non table cell area!
			if (fBeginningRow)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="B28B05E51AC341D5763D1360DB261D88">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Invoke() in obwrdbas.cpp can crash the program by dereferencing a null pointer on line 1610.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obwrdbas.cpp</FileName>
<FilePath>dev/word/client/desktop/obwrdbas.cpp</FilePath>
<LineStart>1610</LineStart>
<Snippet>				{
				if ((elk = ElkFromFciLid((FCI) idMember, i, LidInstall())) == elkNil)
					elk = lpeldi-&gt;rgelfd[dispid].elk;
					
				if (elk == elk_)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="9BC711450995E736ADFF6847641316D7">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdInsPicAtSel() in grutil.cpp can crash the program by dereferencing a null pointer on line 3264.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>grutil.cpp</FileName>
<FilePath>dev/word/core/grutil.cpp</FilePath>
<LineStart>3264</LineStart>
<Snippet>	if (fCanvas)
		{
		pidgsl-&gt;FSelectShape(msogrfdgslNil, hspSel);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="1D22121291F5DB486F2D00D350216D22">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrRangeCreateShapeRange() in obrange.cpp can crash the program by dereferencing a null pointer on line 10414.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>10414</LineStart>
<Snippet>			{
			AssertTag(pidgsl != pNil, ASSERTTAG('4pvu'));
			if (!pidgsl-&gt;FSelectShape(msogrfdgslNil, figucaen.figuExt.spa.hsp))
				{
				hr = HrFromEid(eidVBAObjNotAvail);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="6D0481D00C08CBD97102217A7A3E63C1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCkPrintMargins() in print1.cpp can crash the program by dereferencing a null pointer on line 230.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>print1.cpp</FileName>
<FilePath>dev/word/client/desktop/print1.cpp</FilePath>
<LineStart>230</LineStart>
<Snippet>					{
					AssertTag(LppmdFromPdod(PdodMain(doc)) != lpNil, ASSERTTAG('dzpg'));
					LppmdFromPdod(PdodMain(doc))-&gt;fUserAbort = fTrue;
					}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="80B147065D1575D4AE43F04B36B66216">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FOpenHtmlTagsForHctr() in htmlout.cpp can crash the program by dereferencing a null pointer on line 3249.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlout.cpp</FileName>
<FilePath>dev/word/core/htmlout.cpp</FilePath>
<LineStart>3249</LineStart>
<Snippet>
	AssertTag(phedHtml, ASSERTTAG('dhto'));
	phedHtml-&gt;pgrsTag = &amp;grsrPropsFont;
	phedHtml-&gt;pgrsTagRestore = &amp;grsrFontRestore;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="5A8AECC698D82FC9ADB5DC8766A07571">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WbwMailMergeGotoRecord() in elmisc2.cpp can crash the program by dereferencing a null pointer on line 1550.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>elmisc2.cpp</FileName>
<FilePath>dev/word/client/desktop/elmisc2.cpp</FilePath>
<LineStart>1550</LineStart>
<Snippet>		return static_cast&lt;LONG_PTR&gt;(iRecNil);

	return (IRecCurPmd(LppmdFromPdod(docMain)));
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="CD0C4C96FF5A745B9C64C53894F9C61D">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListStyles() in stylecmd.cpp can crash the program by dereferencing a null pointer on line 8384.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stylecmd.cpp</FileName>
<FilePath>dev/word/client/desktop/stylecmd.cpp</FilePath>
<LineStart>8384</LineStart>
<Snippet>				// Show &quot;(Underlying Properties)&quot; or &quot;(No Style)&quot; as first item,
				// regardless of rest of list
				XszFromIds(pcesty-&gt;stk == stkChar ?
					idsUnderlyingProps : idsNoStyle, xsz, ixchMax-cchExtraXsz);
				pbd-&gt;idrb = idrbNil;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="05D43DF95E1AE63D38584A562804E528">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaCreateObjectEnumVARIANTCore1() in obutil.cpp can crash the program by dereferencing a null pointer on line 768.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obutil.cpp</FileName>
<FilePath>dev/word/client/desktop/obutil.cpp</FilePath>
<LineStart>768</LineStart>
<Snippet>	if (poev-&gt;m_pile)
		{
		RegisterPile(pileNew-&gt;ppileHead, pileNew, pileNew-&gt;pfnOnEvent, fTrue);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="D4CD608F17F5B90B2C02E76CBC172059">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FEnsureInitSttbFontSub() in syschg.cpp can crash the program by dereferencing a null pointer on line 1004.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>syschg.cpp</FileName>
<FilePath>dev/word/core/syschg.cpp</FilePath>
<LineStart>1004</LineStart>
<Snippet>	AssertBiImpliesTag(*phsttbKeyT == hNil, *phsttbResultT == hNil, ASSERTTAG('itvb'));

	if (*phsttbKeyT == hNil)
		{
		if ((*phsttbKeyT = HsttbInitXstShort()) != hNil</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C5EF9476CA066F01C1DDC0873303E174">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function GetMaskablePicture() in picturee2o.cpp can crash the program by dereferencing a null pointer on line 1748.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>picturee2o.cpp</FileName>
<FilePath>dev/word/core/wdoart/picturee2o.cpp</FilePath>
<LineStart>1748</LineStart>
<Snippet>   m_selection.QuerySelectionInfo( pESI );
   AssertTag( pESI , 0x00310359 /* tag_amqnz */);
   if( !pESI || pESI-&gt;NumSelE2os() != 1 )
      return Ofc::TReferringPtr&lt; Art::IPictureMaskingModifier &gt;::NULLPtr();
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="E77BA24B9B15E4157D3980C65A4FEB34">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FOpenHtmlTagsForHctr() in htmlout.cpp can crash the program by dereferencing a null pointer on line 3160.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlout.cpp</FileName>
<FilePath>dev/word/core/htmlout.cpp</FilePath>
<LineStart>3160</LineStart>
<Snippet>					&amp;phepd-&gt;htoPara), ASSERTTAG('dhtm'));
				StandardChpHtmlOut(&amp;upd.chp, doc);
				if (pwhcd-&gt;grpprl &amp;&amp; pwhcd-&gt;cbGrpprl)
					ApplyPrlChpHtml(pwhcd-&gt;grpprl, pwhcd-&gt;cbGrpprl, &amp;upd.chp, pNil/*pchpGray*/);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="5BB858077C1277C9B3D2825B0EB63B41">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDefineUndefinedStyles() in csscutil.cpp can crash the program by dereferencing a null pointer on line 515.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>csscutil.cpp</FileName>
<FilePath>dev/word/core/csscutil.cpp</FilePath>
<LineStart>515</LineStart>
<Snippet>				}

			if (IMacPl(hplcbs) &gt; 0)
				{
				CBS *pcbs = (CBS *)PInPl(hplcbs, IMacPl(hplcbs)-1);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="72ADA870CB723B4A788D55E34E3A1B00">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function DoPreview() in ole2srvr.cpp can crash the program by dereferencing a null pointer on line 5661.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ole2srvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ole2srvr.cpp</FilePath>
<LineStart>5661</LineStart>
<Snippet>			FailHrGotoAssert(E_OUTOFMEMORY, _LRet);

		ShowWindow(PmwdFromHwndApp(m_hWndEditor)-&gt;Hwnd(), SW_SHOWNA);
		}
	else if ( hwndParent == vhwndApp || hwndParent == m_hWndParent)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="28C15903A4D90724B2170800EA889B09">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _EidSaveFile() in savebin.cpp can crash the program by dereferencing a null pointer on line 6248.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>savebin.cpp</FileName>
<FilePath>dev/word/core/savebin.cpp</FilePath>
<LineStart>6248</LineStart>
<Snippet>	/* this will pre-allocate space in the stream.  If it fails, let
		the save continue and let the save code error out. */
	if (FDocfileFcb(pfcb) &amp;&amp; !FOxFtyp(ftyp))
		FPresizeFn(fn, doc);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FDE123D1-00F8-A0F5-E54C-B20080EE8025" iid="C83FB41A7BEB63FC1E8158FC947F64F1">
                            <Category>Null Dereference</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyPropChange() in rtfin2.cpp can crash the program by dereferencing a null pointer on line 1091.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin2.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin2.cpp</FilePath>
<LineStart>1091</LineStart>
<Snippet>
		case irrbRpnjc:
			((PAP *)pprop)-&gt;anld.jc = valUse;
			if (ppropGray)
				((PAP *)ppropGray)-&gt;anld.jc = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 476</ExternalCategory>
                        </Issue>
                    </GroupingSection>
                    <GroupingSection count="372">
                        <groupTitle>Memory Leak</groupTitle>
                        <MajorAttributeSummary>
                            <MetaInfo>
<Name>Abstract</Name>
<Value>Memory is allocated but never freed.</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Explanation</Name>
<Value>Memory leaks have two common and sometimes overlapping causes:

- Error conditions and other exceptional circumstances.

- Confusion over which part of the program is responsible for freeing the memory.

Most memory leaks result in general software reliability problems, but if an attacker can intentionally trigger a memory leak, the attacker might be able to launch a denial of service attack (by crashing the program) or take advantage of other unexpected program behavior resulting from a low memory condition [1].

Example 1: The following C function leaks a block of allocated memory if the call to read() fails to return the expected number of bytes:


  char* getBlock(int fd) {
  char* buf = (char*) malloc(BLOCK_SIZE);
  if (!buf) {
    return NULL;
  }
  if (read(fd, buf, BLOCK_SIZE) != BLOCK_SIZE) {
    return NULL;
  }
  return buf;
}
</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Recommendations</Name>
<Value>Because memory leaks can be difficult to track down, you should establish a set of memory management patterns and idioms for your software. Do not tolerate deviations from your conventions.

One good pattern for addressing the error handling mistake in the example is to use forward-reaching goto statements so that the function has a single well-defined region for handling errors, as follows:


  char* getBlock(int fd) {
  char* buf = (char*) malloc(BLOCK_SIZE);
  if (!buf) {
    goto ERR;
  }
  if (read(fd, buf, BLOCK_SIZE) != BLOCK_SIZE) {
    goto ERR;
  }
  return buf;

  ERR:
  if (buf) {
    free(buf);
  }
  return NULL;
}
</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Tips</Name>
<Value>1. Managed pointer objects, such as C++ auto_ptr and Boost smart pointers, are used to ensure that referenced memory allocations are freed. However, memory leaks can still occur when auto_ptrs or certain types of Boost smart pointers are used to reference arrays, Boost array pointers reference individual objects, and the auto_ptr release method is used.</Value>
                            </MetaInfo>
                            <AttributeValue>
<Name>&lt;Unaudited&gt;</Name>
<Count>372</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Not an Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Reliability Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Bad Practice</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Suspicious</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Exploitable</Name>
<Count>0</Count>
                            </AttributeValue>
                        </MajorAttributeSummary>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="148BFC0A67BF2F954EEFD84036B8FE3F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestStrikeout() in TestCharacterFormat.cpp allocates memory on line 538 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestCharacterFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestCharacterFormat.cpp</FilePath>
<LineStart>538</LineStart>
<Snippet>	try
		{
		return new CharacterFormatClass(&amp;test, fciStrikeout, L&quot;TestStrikeout&quot;);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="82796F6665AE1787F1081937327F07A3">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FConnectPrinterCancellable() in prdev.cpp allocates memory on line 221 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>prdev.cpp</FileName>
<FilePath>dev/word/client/win32/prdev.cpp</FilePath>
<LineStart>312</LineStart>
<Snippet>
	if (pccpr != pNil)
		pccpr-&gt;Release();
	if (ptcpr != pNil)
		ptcpr-&gt;Release();</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="2F4F552C69A08C505B2F629BAC56B96C">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrCreateGlow() in obrange.cpp allocates memory on line 28515 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>28519</LineStart>
<Snippet>		return E_FAIL;
	
	return HrOaCreateGenericObject(pNil, *RefiidFromObi(obiGlowFormat), (void **)ppid, 
		PgodFromObi(obiGlowFormat), grfAdviseAll, ptxtglow, punkParent);
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="108E8C867A30D41D9B34A834B9AA173C">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FOpenOtField() in otfield.cpp allocates memory on line 3316 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>otfield.cpp</FileName>
<FilePath>dev/word/core/otfield.cpp</FilePath>
<LineStart>3316</LineStart>
<Snippet>	// will be correctly decremented.
	case fltHyperlink:
		potfw = new OTFWHYPR(pxot, pxofd, pdod);
		break;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="8447D9099659D63528492B44D051B108">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FSelectDocNonVisCore() in obhand.cpp allocates memory on line 1633 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obhand.cpp</FileName>
<FilePath>dev/word/client/desktop/obhand.cpp</FilePath>
<LineStart>1633</LineStart>
<Snippet>		// This creates vpmwdVBA
		OffsetRc(&amp;rc, -rc.xpRight, -rc.ypBottom);
		if (!FCreateMwd(doc, wkVBA, pNil, &amp;rc, fcmcNil) || vpmwdVBA == pmwdNil)
			return fFalse;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="3C633B0E7CD68DABAA05A571C8F23820">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOamRangePutId() in obrange.cpp allocates memory on line 14856 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>14856</LineStart>
<Snippet>	iuhiCur = IuhiCur(msohflInBody, ca.pdod, ca.cpFirst, pNil);

	if ((uhi.ppxetkUnhandledTag = new MSOPXETK) == pNil)
		FailHrGoto(E_OUTOFMEMORY, LRet);
	if (!uhi.ppxetkUnhandledTag-&gt;FInit(1, 1)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="B486BBDED8262F2546E2073835CB3C9C">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function MmrSetupMergeToDoc() in pmh.cpp allocates memory on line 667 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmh.cpp</FilePath>
<LineStart>667</LineStart>
<Snippet>	PdopPdod(docResult)-&gt;fNoMargPgvwSaved = vwpref.FNoMargPgvw();
	PdopPdod(docResult)-&gt;fDispBkSpSaved = vwpref.FDispBkSp();
	if (!FCreateMwd(docResult, wkDoc, NULL, NULL, fcmcVis))
		return mmrCantOpenWnd;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="70FD6B2C-AFC9-4CED-88E0-54DBDE577574" iid="7C8D24A3DC837E7E425775B23FC8338A">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FFnToGhsz() in filecvt.cpp allocates memory on line 718 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>filecvt.cpp</FileName>
<FilePath>dev/word/client/desktop/filecvt.cpp</FilePath>
<LineStart>718</LineStart>
<Snippet>		int cb = (CxchXstz(xstzFile) + cxchExtraXsz) * cbXchar;

		if (!WinGlobRealloc(ghsz, (DWORD)cb, GMEM_MOVEABLE))
			return fFalse;
		AssertDoAssign(lpxsz = (XCHAR *)WinGlobLock(ghsz));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="B4B9E13469A11A05ADE2A920CB4F6161">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function UpdateXmlTree() in xmlmappingpane.cpp allocates memory on line 1376 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmlmappingpane.cpp</FileName>
<FilePath>dev/word/client/desktop/xmlmappingpane.cpp</FilePath>
<LineStart>1376</LineStart>
<Snippet>					continue;

				XmlNodeWithFlexDS *pxnfChild = new XmlNodeWithFlexDS();
				if (pxnfChild == pNil)
					{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E326FA6C72AA72428540389CEF1C93C9">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestInsertPasteUndoRedoCloseReopenLinkOLE() in TestOLE.cpp allocates memory on line 384 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestOLE.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestOLE.cpp</FilePath>
<LineStart>384</LineStart>
<Snippet>	InProcTaskLib::TestDoc *ptdNew;

	ptdNew = test.PtdCreateEmptyVisible();
	test.FailIf(ptdNew == pNil,
		L&quot;ptdNew should not be nil in TestInsertPasteUndoRedoCloseReopenLinkOLE&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="8EA5D5B85B30F5116A39B5811F6D5853">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrScriptPlaceOpenType() in rtd2d_cs.cpp allocates memory on line 1669 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>1669</LineStart>
<Snippet>		}

	pGlyphProperties = PtAllocIfNeeded(cGlyphs, RgC(rgGlyphProperties), fFalse /*fAssertOnAlloc*/);
	if (pGlyphProperties == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="42194E2101CF3796D8B4B41979618D46">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FArrangePages() in disppage.cpp allocates memory on line 1561 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disppage.cpp</FileName>
<FilePath>dev/word/client/shared/disppage.cpp</FilePath>
<LineStart>1884</LineStart>
<Snippet>		}

	while ((lbc = LbcArrangePageRow(hwwd, &amp;aps, ppgf, iAlign)) == lbcNil)
		{
		ihprFirst = min(ihprFirst, aps.ihprRow);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="8B30AD3EA0703BB42D5EBB7F88AF1C3C">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestVisibleDocument() in TaskLibDesktop.cpp allocates memory on line 1141 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>1141</LineStart>
<Snippet>	if (ptd == pNil)
		goto _LEnd;
	ptd2 = test.PtdCreateEmptyVisible();
	if (ptd2 == pNil)
		goto _LEnd; // test.FEnd will free pdod.</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E7C90457E131983E62040C2A2F58AF46">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function MmrSetupMailMergePmd() in pmh.cpp allocates memory on line 421 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmh.cpp</FilePath>
<LineStart>421</LineStart>
<Snippet>
				// Create an Mwd for the cloned doc to host the envelope
				if (!FCreateMwd(ppmrd-&gt;pdodHTMLMail, wkDoc, NULL, NULL, fcmcNil))
					goto LRet;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="1DA4E206962D8A9AF537B69A2FC477CE">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function EmergencyExitDMTimerProc() in layer.cpp allocates memory on line 842 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>layer.cpp</FileName>
<FilePath>dev/word/client/desktop/layer.cpp</FilePath>
<LineStart>842</LineStart>
<Snippet>					prlyr-&gt;HandleViewportMove(&amp;hvmp);
				else
					ChainFci(fciAirSpaceNotification, reinterpret_cast&lt;WPARAM&gt;(new CDelayedViewportMove(hwwd, hvmp)));
				}
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="45BB92EB266A4A6939A311AF95250F6F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrScriptBreakCore() in rtd2d_cs.cpp allocates memory on line 2626 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>2626</LineStart>
<Snippet>		}

	pGlyphProperties = PtAllocIfNeeded(cMaxGlyphs, RgC(rgGlyphProperties), fFalse /*fAssertOnAlloc*/);
	if (pGlyphProperties == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E9C2577B30DBB406226BF3BCDEBC6A47">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestDesktopTest() in TaskLibDesktop.cpp allocates memory on line 860 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>860</LineStart>
<Snippet>	testParent.FailIf(selCur.pdod == pdodOrig,
		L&quot;PtdCreateEmptyVisible failed to move selCur.pdod&quot;);
	ptd2 = ptest-&gt;PtdCreateEmptyVisible();
	testParent.FailIf(ptd2 == pNil,
		L&quot;DesktopTest failed to create second visible pdod&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="365FFCF80CFBAE85E6A31F1BE1C39B19">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function RTIMRGN() in rtimrgn.cpp allocates memory on line 46 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtimrgn.cpp</FileName>
<FilePath>dev/word/core/rtimrgn.cpp</FilePath>
<LineStart>46</LineStart>
<Snippet>	try
		{
		m_pgfxrgn = new Gfx::Region(rc);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="1BF59DBBA14E7E9B7D64607D1A5DA1D0">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XpDisplayRgxchCS() in fieldfmt.cpp allocates memory on line 6159 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldfmt.cpp</FileName>
<FilePath>dev/word/core/fieldfmt.cpp</FilePath>
<LineStart>6159</LineStart>
<Snippet>			|| (pwLogClust = new WORD[cMaxGlyphs]) == pNil
			|| (pGlyphProps = new SCRIPT_GLYPHPROP[cMaxGlyphs]) == pNil
			|| (pCharProps = new SCRIPT_CHARPROP[cch]) == pNil)
		goto FailedShapeRgxch;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="F227EE03FC8ED6AB39695F0CE3C7AD9F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrCreateReflection() in obrange.cpp allocates memory on line 28579 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>28583</LineStart>
<Snippet>		return E_FAIL;
	
	return HrOaCreateGenericObject(pNil, *RefiidFromObi(obiReflectionFormat), (void **)ppid, 
		PgodFromObi(obiReflectionFormat), grfAdviseAll, ptxtreflection, punkParent);
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="16F430D1BD763EC385E7BA67D3B4978C">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestOrientation() in TestPageSetup.cpp allocates memory on line 36 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestPageSetup.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestPageSetup.cpp</FilePath>
<LineStart>36</LineStart>
<Snippet>		return; 
	
	ptd = test.PtdCreateEmptyVisible();
	if (ptd == pNil)
		return; </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="EB89CD3D11EE35A8E5CE36B5696B5735">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestInsertBufferBasic() in TestInsertBuffer.cpp allocates memory on line 30 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestInsertBuffer.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestInsertBuffer.cpp</FilePath>
<LineStart>30</LineStart>
<Snippet>		return; 
	
	ptd = test.PtdCreateEmptyVisible();
	if (ptd == pNil)
		return;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="0D4F567BC3DAA3379E2173A4F567F092">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrScriptTextOutSubPixel() in rtd2d_cs.cpp allocates memory on line 2005 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>2005</LineStart>
<Snippet>		}

	pGlyphProperties = PtAllocIfNeeded(cGlyphs, RgC(rgGlyphProperties), fFalse /*fAssertOnAlloc*/);
	if (pGlyphProperties == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="4946871AD3E56BEF5773081FA8CE67D6">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestAlignLeft() in TestParagraphFormat.cpp allocates memory on line 216 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestParagraphFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestParagraphFormat.cpp</FilePath>
<LineStart>216</LineStart>
<Snippet>	try
		{
		return new LeftParaTestClass(&amp;test, fciLeftPara);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="F4A3A930833928B6BB38DC77B8B7AC17">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCreateSchemeGallery() in oartHost.cpp allocates memory on line 2443 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartHost.cpp</FileName>
<FilePath>dev/word/client/desktop/oartHost.cpp</FilePath>
<LineStart>2443</LineStart>
<Snippet>			if (m_psmgc == pNil)
				{
				m_psmgc = CreateWordStyleMatrixGalleryClient(m_psaui.GetRaw());
#ifdef MEMMARKING
				m_dbgsmgc.Set(*m_psmgc);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="4D3699C2B0469DC05B75E8DC91E97933">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrGetForeColor() in obeffects.cpp allocates memory on line 4320 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obeffects.cpp</FileName>
<FilePath>dev/word/client/desktop/obeffects.cpp</FilePath>
<LineStart>4325</LineStart>
<Snippet>	pca = m_pcaf-&gt;GetPca();
	ptfc-&gt;SetPca(pca-&gt;pdod, pca-&gt;cpFirst, pca-&gt;cpLim);
	return HrOaCreateGenericObject(
				pNil, *RefiidFromObi(obiColorFormat), (void **)pidcf, PgodFromObi(obiColorFormat),
					grfAdviseAll, (OMOAC*)ptfc, OMB::m_pidActive);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E40708092CDDBE59FEE50E2A14A23E61">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function InitLoggingForEndpoint() in LoggingUtilities.cpp allocates memory on line 31 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>LoggingUtilities.cpp</FileName>
<FilePath>dev/word/wal/win/win32/LoggingUtilities.cpp</FilePath>
<LineStart>31</LineStart>
<Snippet>{
	// Init Word loggers - the constructors do the work
	IWordLogger *rgpiwl[] = {
		new CWordLoggerEtw(),
		new CWordLoggerUls(),</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="38FFA53F39944A788AA2C6A6982FF179">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FBreakLinkPmd() in pmhfetch.cpp allocates memory on line 5265 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhfetch.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhfetch.cpp</FilePath>
<LineStart>5265</LineStart>
<Snippet>		if ((docData = DocCreateEmptyTitled(xstzEmpty, grfdcdNil,
			&amp;docDot, pNil, &amp;eid, &amp;fErrPostponed)) == pdodNil ||
			!FCreateMwd(docData, wkDoc, pNil, pNil, fcmcVis))
			{
			if (docData != pdodNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="C1E08C919F82E7DB6A7068357068E3B1">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function LaunchSpecialEffectsDialog() in oartHost.cpp allocates memory on line 5810 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartHost.cpp</FileName>
<FilePath>dev/word/client/desktop/oartHost.cpp</FilePath>
<LineStart>5810</LineStart>
<Snippet>	try
		{
		Ofc::TOwningPtr&lt;Art::IFormatObjectUISite&gt; poTextUISite(new AFOUIS(fTargetsText));
		PWAUI pwaui = AUIH::GetOArtUIHost().Pwaui();
		Ofc::TReferringPtr&lt;Art::UserInterface&gt;(pwaui)-&gt;GetCurrentView(true/*fEnsure*/);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="D8650383248E289AAE0B27243E943174">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function UpdateXmlTree() in xmlmappingpane.cpp allocates memory on line 1349 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmlmappingpane.cpp</FileName>
<FilePath>dev/word/client/desktop/xmlmappingpane.cpp</FilePath>
<LineStart>1349</LineStart>
<Snippet>			for (int iattr = 0; iattr &lt; cattr; iattr++)
				{
				XmlNodeWithFlexDS *pxnfAttr = new XmlNodeWithFlexDS();
				if (pxnfAttr == pNil)
					{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="D13AE3ABA626D9962BF1EFBDD6FD117E">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestWordUnderline() in TestCharacterFormat.cpp allocates memory on line 500 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestCharacterFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestCharacterFormat.cpp</FilePath>
<LineStart>500</LineStart>
<Snippet>	try
		{
		return new CharacterFormatClass(&amp;test, fciWordUnderline, L&quot;TestWordUnderline&quot;);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="1F79CF1535A91B07D2450547F8141C5D">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCreateMetroProgress() in metroin.cpp allocates memory on line 192 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>metroin.cpp</FileName>
<FilePath>dev/word/core/metroin.cpp</FilePath>
<LineStart>196</LineStart>
<Snippet>	if (pcmp &amp;&amp; SUCCEEDED(pcmp-&gt;QueryInterface(IID_IMetroProgress, (void **)ppip)))
		{
		pcmp-&gt;Release();
		return fTrue;
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="1213FC1BAEB08AE9F57DECC0099EA0C7">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrCreateOtMopr() in otout.cpp allocates memory on line 286 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>otout.cpp</FileName>
<FilePath>dev/word/core/otout.cpp</FilePath>
<LineStart>292</LineStart>
<Snippet>	// set current xftyp to xftypOt
	SetXftyp(pmop-&gt;pmot, xftypOt, pNil);
	hr = pmop-&gt;HrCreateMopr(pmopr, grfcmop, pNil, pNil);
	UnsetXftyp(pmop-&gt;pmot, fTrue /*fSet*/);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="D2F4D9BBA8B16A7F40D7B86655909F61">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IlfoDefineFromListStyle() in oartodf.cpp allocates memory on line 11468 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartodf.cpp</FileName>
<FilePath>dev/word/core/oartodf.cpp</FilePath>
<LineStart>11468</LineStart>
<Snippet>		try
			{
			poListStyle.AttachP(new Art::OdfListStyle);
			if (poListStyle == pNil ||
				!podc-&gt;GetAutomaticStyles(fInContentXml).GetListStyleManager().FGetResolved(Ofc::CVarStr(pxszListStyle), *poListStyle))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E40708092CDDBE59FEE50E2A14A23E62">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function InitLoggingForEndpoint() in LoggingUtilities.cpp allocates memory on line 31 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>LoggingUtilities.cpp</FileName>
<FilePath>dev/word/wal/win/win32/LoggingUtilities.cpp</FilePath>
<LineStart>31</LineStart>
<Snippet>{
	// Init Word loggers - the constructors do the work
	IWordLogger *rgpiwl[] = {
		new CWordLoggerEtw(),
		new CWordLoggerUls(),</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="218D71416F973760CBEABC42B74855E0">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ExpireDiscardableCache() in power.cpp allocates memory on line 395 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>power.cpp</FileName>
<FilePath>dev/word/client/desktop/power.cpp</FilePath>
<LineStart>395</LineStart>
<Snippet>void CIdleListener::ExpireDiscardableCache(void *pvCacheId, eDiscardableCacheEventType eEventType) throw0
{
	ILrmDiscardableCacheCommand *pildcc = PildccAlloc(pvCacheId);
	if (pildcc == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E675647F88B689B80ECFAAC552FDF908">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestInsertCloseReopenOCX() in TestOCX.cpp allocates memory on line 155 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestOCX.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestOCX.cpp</FilePath>
<LineStart>155</LineStart>
<Snippet>		goto _LEnd; // FBegin should complain to the logs if it fails.
	
	ptd = test.PtdCreateEmptyVisible();
	test.FailIf(ptd == pNil,
		L&quot;Ptd should not be nil at TestInsertCloseReopenOCX&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="D99CECF7DA7D971F8A220503904FB97D">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FConnectPrinterCancellable() in prdev.cpp allocates memory on line 220 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>prdev.cpp</FileName>
<FilePath>dev/word/client/win32/prdev.cpp</FilePath>
<LineStart>314</LineStart>
<Snippet>		pccpr-&gt;Release();
	if (ptcpr != pNil)
		ptcpr-&gt;Release();
	if (pitm != pNil)
		pitm-&gt;Release();</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="5B5E568F89C962CCDAA3C3D8167B39B8">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestExpandCaCache() in TestLserrFetchPap.cpp allocates memory on line 382 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestLserrFetchPap.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestLserrFetchPap.cpp</FilePath>
<LineStart>382</LineStart>
<Snippet>	try
		{
		return new LserrFetchPapClass(&amp;test, L&quot;TestExpandCaCache&quot;, &amp;LserrFetchPapClass::TestExpandCaCache);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="DB51929550141595ED41D15AE8906DF6">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestUndoRedoBothAlignment() in TestFormatPara.cpp allocates memory on line 306 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestFormatPara.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestFormatPara.cpp</FilePath>
<LineStart>306</LineStart>
<Snippet>	try
		{
		return new FormatParagraphClass(&amp;test, jcBoth);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="18F9DFCE264DD41D8DA96024134B0281">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrStartPrefixMappingCore() in myx.cpp allocates memory on line 429 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>myx.cpp</FileName>
<FilePath>dev/word/core/myx.cpp</FilePath>
<LineStart>429</LineStart>
<Snippet>
	// create a new MYXNPM
	MYXNPM *pmyxnpm = new MYXNPM(xns, pxstz, (grfmyxnmspm &amp; myxnmspmAttrOnly) == myxnmspmAttrOnly);
	if (pmyxnpm == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="CEF08E4B32AEC3AB35B6E1990ECB926F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrScriptBreakCore() in rtd2d_cs.cpp allocates memory on line 2612 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>2612</LineStart>
<Snippet>		}

	pOutGlyphs = PtAllocIfNeeded(cMaxGlyphs, RgC(rgOutGlyphs), fFalse /*fAssertOnAlloc*/);
	if (pOutGlyphs == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="01E204C2AFC0CE944E703DE53331B4A5">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function endCDATA() in myx.cpp allocates memory on line 2768 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>myx.cpp</FileName>
<FilePath>dev/word/core/myx.cpp</FilePath>
<LineStart>2768</LineStart>
<Snippet>STDMETHODIMP MYX::endCDATA() throw0
{
	MYXLRV *pmyxr = MYXLRV::PmyxrCreate(&amp;ISAXLexicalHandler::endCDATA);
	if (pmyxr == pNil)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="EF098323A62552CB7D87D5C7AA0A6716">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestInsertDefaultTable() in TestTables.cpp allocates memory on line 140 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestTables.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestTables.cpp</FilePath>
<LineStart>140</LineStart>
<Snippet>	try
		{
		return new InsertDefaultTableTestClass(&amp;test);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="44451DD475BC790078D8870345E41F28">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestVisibleDocument() in TaskLibDesktop.cpp allocates memory on line 1244 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>1244</LineStart>
<Snippet>	// TEST: Verify that TestDoc::FSaveAs can save to DOCX
	// Verify that DesktopTest::PtdLoad can load the document back again
	ptd = test.PtdCreateEmptyVisible();
	if (ptd == pNil)
		goto _LEnd;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="FE8AFFB608A814A927858DA87E2BA045">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestGRFCommandParsing() in WordGRF.cpp allocates memory on line 1148 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>WordGRF.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/WordGRF.cpp</FilePath>
<LineStart>1151</LineStart>
<Snippet>	test.FailIf(pHandler != pNil,
		L&quot;verifying that the parse failed&quot;);
	SafeRelease(pHandler); // just in case

	// TEST: a well-formed inProcTest element without a set attribute fails</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="806549D79A5D426168FF891F0CE2B1D0">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCreateSchemeGallery() in oartHost.cpp allocates memory on line 2509 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartHost.cpp</FileName>
<FilePath>dev/word/client/desktop/oartHost.cpp</FilePath>
<LineStart>2509</LineStart>
<Snippet>			if (m_psooc == pNil)
				{
				m_psooc = CreateSchemeExecuteActionClientBase();
#ifdef MEMMARKING
				m_dbgsooc.Set(*m_psooc);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="5D0CE76CEBF1C3F1A2C4F56BD61A4B07">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdFilterRevisionByDttm() in acetate.cpp allocates memory on line 7612 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>acetate.cpp</FileName>
<FilePath>dev/word/client/desktop/acetate.cpp</FilePath>
<LineStart>7612</LineStart>
<Snippet>			FlexUI::FlexDialogSP spdlg;
			TimeFilteringDialogSP spTimeFiltering;
			TFDEH* ptfdeh = TFDEH::Create(pcmb);

			if (FAILED(MsoHrInitNetUI()))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="04725CD68CE58F408BE899D6C170C189">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCreateSchemeGallery() in oartHost.cpp allocates memory on line 2498 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartHost.cpp</FileName>
<FilePath>dev/word/client/desktop/oartHost.cpp</FilePath>
<LineStart>2498</LineStart>
<Snippet>			if (m_pbftc == pNil)
				{
				m_pbftc = CreateSchemeExecuteActionClientBase();
#ifdef MEMMARKING
				m_dbgbftc.Set(*m_pbftc);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="BAF745F6182150E409383A4422E7A198">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrScriptBreakCore() in rtd2d_cs.cpp allocates memory on line 2619 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>2619</LineStart>
<Snippet>		}

	pTextProperties = PtAllocIfNeeded(cInChars, RgC(rgTextProperties), fFalse /*fAssertOnAlloc*/);
	if (pTextProperties == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="A0A571422728D67B51B439B84FF7B9A0">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOurScriptTextOut() in rtd2d_cs.cpp allocates memory on line 1847 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>1847</LineStart>
<Snippet>		NotReachedReturnTag(E_FAIL, 0x0048c6d3 /* tag_asm1t */);

	pGlyphOffset = PtAllocIfNeeded(cGlyphs, RgC(rgGlyphOffset), fFalse /*fAssertOnAlloc*/);
	if (pGlyphOffset == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="611CEE52A64926955130AF68EB9F9A5D">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function endEntity() in myx.cpp allocates memory on line 2729 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>myx.cpp</FileName>
<FilePath>dev/word/core/myx.cpp</FilePath>
<LineStart>2729</LineStart>
<Snippet>STDMETHODIMP MYX::endEntity(const XCHAR *pxchName, int cchName) throw0
{
	MYXLRPXCH1 *pmyxr = MYXLRPXCH1::PmyxrCreate(&amp;ISAXLexicalHandler::endEntity, pxchName, cchName);
	if (pmyxr == pNil)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="1EABE36D4E12C2692B589FD40DA979BE">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrCreateHyperlinksPca() in obdoc.cpp allocates memory on line 8338 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obdoc.cpp</FileName>
<FilePath>dev/word/client/desktop/obdoc.cpp</FilePath>
<LineStart>8374</LineStart>
<Snippet>	InitCale(&amp;pobhls-&gt;cale, &amp;ca);

	HRESULT hr = HrOaCreateGenericObject(pNil, *RefiidFromObi(obiHlinks), ppv,
		PgodFromObi(obiHlinks), grfAdviseAll, pobhls, punkParent);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="D51681FE2EC5DCE6BDA4F4CDB2C5A8AE">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrGetColor() in obeffects.cpp allocates memory on line 1364 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obeffects.cpp</FileName>
<FilePath>dev/word/client/desktop/obeffects.cpp</FilePath>
<LineStart>1371</LineStart>
<Snippet>	ptgc-&gt;SetPca(pca-&gt;pdod, pca-&gt;cpFirst, pca-&gt;cpLim);
	
	return HrOaCreateGenericObject(
				pNil, *RefiidFromObi(obiColorFormat), (void **)pidcf, PgodFromObi(obiColorFormat),
					grfAdviseAll, (OMOAC*)ptgc, OMB::m_pidActive);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="DFF96715286031FFC487B4060B929356">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestHittester() in TestInputStack.cpp allocates memory on line 477 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestInputStack.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestInputStack.cpp</FilePath>
<LineStart>477</LineStart>
<Snippet>	try
		{
		return new HittesterTestClass(&amp;test);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="8A92665B170694B22D6A818D1F7F4385">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PaxibstAuthorsPdod() in fcc.cpp allocates memory on line 829 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fcc.cpp</FileName>
<FilePath>dev/word/client/desktop/fcc.cpp</FilePath>
<LineStart>829</LineStart>
<Snippet>	const int *pidpciRev = &amp;_rgidpciRevs[0];

	if ((paxibst = new AXIBST) == pNil
			|| !paxibst-&gt;FInit(CGlobalAuthorEntries()))
		return pNil;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="5BA68B6D667DF80D3AF634ABD302D8DF">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdToggleNavPane() in findwinrt.cpp allocates memory on line 296 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>findwinrt.cpp</FileName>
<FilePath>dev/word/client/fastmodel/findwinrt.cpp</FilePath>
<LineStart>296</LineStart>
<Snippet>		if ((*hwwd)-&gt;pifbvu == nullptr)
			{
			CFindBarWinRT *pfbrt = new CFindBarWinRT();

			if (pfbrt != nullptr)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="192D62B1A477359E5C2A3B631F0DAD13">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrScriptTextOutSubPixel() in rtd2d_cs.cpp allocates memory on line 2062 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>2062</LineStart>
<Snippet>		}

	pJustifiedGlyphOffset = PtAllocIfNeeded(cJustifiedGlyphs, RgC(rgJustifiedGlyphOffset), fFalse /*fAssertOnAlloc*/);
	if (pJustifiedGlyphOffset == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="F453AB673165A7AE95B04098A473953B">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestFormatFromTo() in TestLserrFetchPap.cpp allocates memory on line 318 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestLserrFetchPap.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestLserrFetchPap.cpp</FilePath>
<LineStart>318</LineStart>
<Snippet>	try
		{
		return new LserrFetchPapClass(&amp;test, L&quot;TestFormatFromTo&quot;, &amp;LserrFetchPapClass::TestFormatFromTo);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="03AC2369804B140DC6CC414EE9719542">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestToggleReadingMode() in TestReadingMode.cpp allocates memory on line 148 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestReadingMode.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestReadingMode.cpp</FilePath>
<LineStart>148</LineStart>
<Snippet>	try
	{
		return new ReadingModeClass(&amp;test);
	}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="70BC4B7ED89900DD4074FC04026CC15B">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FPopulateBBDDDataSource() in sdtsupp.cpp allocates memory on line 6721 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>sdtsupp.cpp</FileName>
<FilePath>dev/word/client/desktop/sdtsupp.cpp</FilePath>
<LineStart>6721</LineStart>
<Snippet>	spdd.SetSelectedIndex(-1);

	pbbddpcl = new BBDDPCL;

	if (pbbddpcl == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="93C2925F234765FB4C61A9FD7A83DDF4">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PortrgnExtCreateRegion() in rtrgn.cpp allocates memory on line 130 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtrgn.cpp</FileName>
<FilePath>dev/word/client/fastmodel/rtrgn.cpp</FilePath>
<LineStart>130</LineStart>
<Snippet>	try
		{
		pgfxrgn = new Gfx::Region(reinterpret_cast&lt;const RECT *&gt;(pRgnData-&gt;Buffer), pRgnData-&gt;rdh.nCount);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="3AAEF9544CF0756174985305C3EA0923">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CreateSaveAsSpecifiedType() in TestOpenSave.cpp allocates memory on line 60 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestOpenSave.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestOpenSave.cpp</FilePath>
<LineStart>60</LineStart>
<Snippet>
	// Reopen the doc
	ptd = test.PtdLoad(xszFileName);
	test.FailIf(ptd == pNil,
		L&quot;PtdLoad failed after saving and closing&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="9D814FEFB90CD544C5F20492B8ABA2D6">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FNotifyLrgCoax() in acetate.cpp allocates memory on line 3585 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>acetate.cpp</FileName>
<FilePath>dev/word/client/shared/acetate.cpp</FilePath>
<LineStart>3585</LineStart>
<Snippet>			}
		
		drg.pv = pcoax = PcoaxClone(pcoax);
		if (pcoax == pNil)
			return fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="F2DA9DDA46CDCBA5B13E94A3885FC456">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestInsertPageNumberField() in TestFields.cpp allocates memory on line 126 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestFields.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestFields.cpp</FilePath>
<LineStart>126</LineStart>
<Snippet>	try
		{
		return new TestInsertField(&amp;test, fltPage, L&quot;TestInsertPageNumberField&quot;, L&quot;PAGE&quot;);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="85708B27F2F9AE4D09BD9964FEBD9533">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrCreate() in metroout.cpp allocates memory on line 208 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>metroout.cpp</FileName>
<FilePath>dev/word/core/metroout.cpp</FilePath>
<LineStart>208</LineStart>
<Snippet>		return E_FAIL;

	pmop = new MOP();
	if (!pmop)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="4A5764D635F41D0B7C93D0653720A344">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrLoadArtoFromByteStream() in trust.h allocates memory on line 992 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>trust.h</FileName>
<FilePath>C:/office/dev/otools/inc/oart/private/trust.h</FilePath>
<LineStart>189</LineStart>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="3501962721772454120C5E230099248B">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CreateDataSourceFromTcid() in outspace.cpp allocates memory on line 1940 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>outspace.cpp</FileName>
<FilePath>dev/word/client/desktop/outspace.cpp</FilePath>
<LineStart>1940</LineStart>
<Snippet>	case msotcidOutDocState:
		{
		OSDS *posds = new OSDS;
		if (posds != pNil)
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="EEEB45E015213B240C10521C6D406FEE">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CreateDocument() in applicationdocumentsuser.cpp allocates memory on line 379 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>applicationdocumentsuser.cpp</FileName>
<FilePath>dev/word/client/fastmodel/applicationdocumentsuser.cpp</FilePath>
<LineStart>379</LineStart>
<Snippet>		IMetroProgress &amp;mp(documentOperation.UseMetroProgress());

		WinRT::ComPtr&lt;CSaveStreamManager&gt; spssm = new CSaveStreamManager(&amp;appDocDesc, &amp;mp);
		if (spssm == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="ADC3731CE8F86BB2A893394BD1420C26">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FAddDodListEntry() in TaskLibCore.cpp allocates memory on line 338 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibCore.cpp</FileName>
<FilePath>dev/word/core/comptest/TaskLibCore.cpp</FilePath>
<LineStart>338</LineStart>
<Snippet>
	// register for auto-dispose so we can tell if the caller disposed it or not
	DDLE *pddle = new DDLE();
	if (pddle == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="37577680CBED1915010E7E26699F2484">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function startDocument() in myx.cpp allocates memory on line 2360 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>myx.cpp</FileName>
<FilePath>dev/word/core/myx.cpp</FilePath>
<LineStart>2360</LineStart>
<Snippet>{
	AssertTag(m_axpimyxr.IMac() == 0, ASSERTTAG('99qp'));
	MYXCRV *pmyxr = MYXCRV::PmyxrCreate(&amp;ISAXContentHandler::startDocument);
	if (pmyxr == pNil)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="0FF672B5CDAB9CFF403139BF5D6BAA2F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestOArtBvt() in TestOArt.cpp allocates memory on line 44 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestOArt.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestOArt.cpp</FilePath>
<LineStart>44</LineStart>
<Snippet>		return; // FBegin should complain to the logs if it fails.
	
	ptd = test.PtdCreateEmptyVisible();
	if (ptd == pNil)
		return; // PtdCreateEmptyVisible should complain to the logs if it fails</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="9ADEB3D12F95D124C450239AC2485D9D">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FRegisterListener() in xmlmappingpane.cpp allocates memory on line 456 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmlmappingpane.cpp</FileName>
<FilePath>dev/word/client/desktop/xmlmappingpane.cpp</FilePath>
<LineStart>456</LineStart>
<Snippet>	HRESULT hr = S_OK;

	if ((pxmppl = new CXMPPropertyListener(this)) == pNil)
		return fFalse;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="CF41DBF586069716462B107A0AD44D23">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCreateSchemaBuggedList() in docserver.cpp allocates memory on line 192 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>docserver.cpp</FileName>
<FilePath>dev/word/endpoints/srv/wordsrv/docserver.cpp</FilePath>
<LineStart>192</LineStart>
<Snippet>
	// if we made one successfully, then return it to the caller.
	if ((psbl = new ServerSchemaBuggedList()) != pNil)
		{
		*ppsbl = psbl;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="B367FA873D7A6F722EE21F8B78389148">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FConvertMWNextDoc() in openclient.cpp allocates memory on line 455 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>openclient.cpp</FileName>
<FilePath>dev/word/client/desktop/openclient.cpp</FilePath>
<LineStart>455</LineStart>
<Snippet>				{
				hwwdOld = vhwwdCur;
			  	if (FCreateMwd(docMaster, wkDoc, pNil, pNil, !(dof &amp; dofOleRequest) ? fcmcVis : fmcNil))
					{
					CmdExecFci(fciChapterMode);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E40708092CDDBE59FEE50E2A14A23E63">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function InitLoggingForEndpoint() in LoggingUtilities.cpp allocates memory on line 30 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>LoggingUtilities.cpp</FileName>
<FilePath>dev/word/wal/win/winrt/LoggingUtilities.cpp</FilePath>
<LineStart>30</LineStart>
<Snippet>{
	// Init Word loggers - the constructors do the work
	IWordLogger *rgpiwl[] = {
		new CWordLoggerEtw(),
		new CWordLoggerUls(),</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="BDC95EFD3DA3C3D9CC2775E343008689">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrCreateOxMoprCore() in metroout.cpp allocates memory on line 2678 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>metroout.cpp</FileName>
<FilePath>dev/word/core/metroout.cpp</FilePath>
<LineStart>2685</LineStart>
<Snippet>
	SetXftyp(pmop-&gt;pmot, xftypOx, pNil);
	hr = pmop-&gt;HrCreateMopr(pmopr, grfcmop, pxszName, pistg);
	UnsetXftyp(pmop-&gt;pmot, fTrue /*fSet*/);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E206408040432ED440A722E3B173A16A">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestInsertDateField() in TestFields.cpp allocates memory on line 110 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestFields.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestFields.cpp</FilePath>
<LineStart>110</LineStart>
<Snippet>	try
		{
		return new TestInsertField(&amp;test, fltDate, L&quot;TestInsertDateField&quot;, L&quot;DATE&quot;);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E3CF4C34EB7E67114D9EF13A03FA7BB9">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaWindowAdd() in obwindow.cpp allocates memory on line 3721 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obwindow.cpp</FileName>
<FilePath>dev/word/client/desktop/obwindow.cpp</FilePath>
<LineStart>3721</LineStart>
<Snippet>		}

	if (!FCreateMwd(PdodMain2(pdod), wkDoc, psels, pNil, fcmcSaveSel | fcmcVis))
		{
		if (vmerr.FMemFail())</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="B25995751A042A34F1139D8E89F809AB">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDlgUiCust() in uicust.cpp allocates memory on line 1074 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>uicust.cpp</FileName>
<FilePath>dev/word/client/desktop/uicust.cpp</FilePath>
<LineStart>1074</LineStart>
<Snippet>	case dlmCreate:
		{
		CCATMAN *pccatman = new CCATMAN;
		if (pccatman == pNil)
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="69CE53AE10C565E0D72A4B24A877B705">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrScriptPlaceOpenType() in rtd2d_cs.cpp allocates memory on line 1676 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>1676</LineStart>
<Snippet>		}

	pGlyphOffset = PtAllocIfNeeded(cGlyphs, RgC(rgGlyphOffset), fFalse /*fAssertOnAlloc*/);
	if (pGlyphOffset == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="CFF2A6A049399A3B928BB75964424807">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrScriptTextOutSubPixel() in rtd2d_cs.cpp allocates memory on line 2055 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>2055</LineStart>
<Snippet>	AssertTag(cGlyphs &lt;= cJustifiedGlyphs, 0x0048c6d5 /* tag_asm1v */);

	pfltJustifiedAdvance = PtAllocIfNeeded(cJustifiedGlyphs, RgC(rgfltJustifiedAdvance), fFalse /*fAssertOnAlloc*/);
	if (pfltJustifiedAdvance == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="1BC9A6F5ACB8DB1F87CCDAA2E65486A1">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CreateGraphic() in oartodf.cpp allocates memory on line 412 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartodf.cpp</FileName>
<FilePath>dev/word/core/oartodf.cpp</FilePath>
<LineStart>412</LineStart>
<Snippet>		AssertTag(prDrElem-&gt;GetId() != NULL , 0x002518ce /* tag_ajr9o */);

		new Art::CleanHostAppContentDuo(m_trans, prCallback, prDrElem, msotxid);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="369C18CB03C9500AA624B07B4E55D705">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaCreateGenericObject() in obgenric.cpp allocates memory on line 1045 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obgenric.cpp</FileName>
<FilePath>dev/word/client/desktop/obgenric.cpp</FilePath>
<LineStart>1052</LineStart>
<Snippet>	if (FAILED(hr))
		{
		pgeneric-&gt;Release();
		*ppvResult = pNil;
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="021EF42629EAC3EFE4B158F2673DD8FB">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestInsertTableAndTextInsideTable() in TestTables.cpp allocates memory on line 235 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestTables.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestTables.cpp</FilePath>
<LineStart>235</LineStart>
<Snippet>	try
		{
		return new InsertTableAndTextInsideTableTestClass(&amp;test);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="11096556A0D3261D1C2975AA8CBD6FF0">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function SetPdodStyleCurCore() in bibliorg.cpp allocates memory on line 2092 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>bibliorg.cpp</FileName>
<FilePath>dev/word/client/desktop/bibliorg.cpp</FilePath>
<LineStart>2092</LineStart>
<Snippet>	if (grfundo &amp; fundoRecordUndo)
		{
		CBDSUB *pcbdsub = new CBDSUB;
		AssertTag(pcbdsub != pNil, ASSERTTAG('5o8w'));
		</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="DD120BE2044A2EF05D6E69E0DD071920">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function SetNextDayTimer() in dttmacmp.cpp allocates memory on line 110 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dttmacmp.cpp</FileName>
<FilePath>dev/word/client/shared/dttmacmp.cpp</FilePath>
<LineStart>110</LineStart>
<Snippet>	if (vptptAcmp == pNil)
		{
		CreateThreadPoolTimer(&amp;vptptAcmp, new ACMPTC, ulAcmpTimerFlags);
		// Not going to get up-to-date auto-complete strings...shrug...
		if (vptptAcmp == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="DC8F28888F145C4F68DC14C71725A89B">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestSuperScript() in TestCharacterFormat.cpp allocates memory on line 633 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestCharacterFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestCharacterFormat.cpp</FilePath>
<LineStart>633</LineStart>
<Snippet>	try
		{
		return new CharacterFormatClass(&amp;test, fciSuperScript, L&quot;TestSuperScript&quot;);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="937D47B0AA0A20ECD0051087B8F10E76">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestSubScript() in TestCharacterFormat.cpp allocates memory on line 614 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestCharacterFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestCharacterFormat.cpp</FilePath>
<LineStart>614</LineStart>
<Snippet>	try
		{
		return new CharacterFormatClass(&amp;test, fciSubScript, L&quot;TestSubScript&quot;);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="94AB63AFE860A4294E52A5C0E21D9273">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CreateDataSourceFromTcid() in outspace.cpp allocates memory on line 1876 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>outspace.cpp</FileName>
<FilePath>dev/word/client/desktop/outspace.cpp</FilePath>
<LineStart>1876</LineStart>
<Snippet>	case msotcidSlabDocPermissions:
		{
		PSDS *ppsds = new PSDS;
		if (ppsds != pNil)
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="DF2C0B7FC64D01F12C7D5B93CFB08F7F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCreateLabelsDoc() in label.cpp allocates memory on line 707 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>label.cpp</FileName>
<FilePath>dev/word/client/desktop/label.cpp</FilePath>
<LineStart>707</LineStart>
<Snippet>
		vwpref.SetFVisiDrawTableDrs(fTrue);
		FCreateMwd(doc, wkDoc, pNil /*psels*/, pNil /*prcMw*/, fcmcVis);
		vwpref.SetFVisiDrawTableDrs(!!fDrawTableDrsSave);
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="B5C188CC8D123CB7BBC20D7C1941FE4C">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrScriptShapeOpenType() in rtd2d_cs.cpp allocates memory on line 1449 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>1449</LineStart>
<Snippet>		NotReachedReturnTag(E_FAIL, 0x0048c6d0 /* tag_asm1q */);

	pTextProperties = PtAllocIfNeeded(cChars, RgC(rgTextProperties), fFalse /*fAssertOnAlloc*/);
	if (pTextProperties == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="9EAB7951E1B54F988447B5376C670646">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FRegisterListener() in navpane.cpp allocates memory on line 6799 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>navpane.cpp</FileName>
<FilePath>dev/word/client/desktop/navpane.cpp</FilePath>
<LineStart>6799</LineStart>
<Snippet>{
	AssertSzTag(m_nvpds != pNil, &quot;NVP Not yet inited&quot;, ASSERTTAG('jcsj'));
	NVPPCL* pnvppcl = new NVPPCL(this);

	if (pnvppcl == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="70FD6B2C-AFC9-4CED-88E0-54DBDE577574" iid="2BE72EA4BC6776482ADD72269EF66A9C">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PchBltHxSz() in metrocnvproxy.cpp allocates memory on line 530 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>metrocnvproxy.cpp</FileName>
<FilePath>dev/word/endpoints/converters/wordcnvpxy/metrocnvproxy.cpp</FilePath>
<LineStart>530</LineStart>
<Snippet>
	int cch = CchSz(sz) + cchExtraSz;
	if (GlobalReAlloc(ghsz, cch, GMEM_MOVEABLE) == hNil)
		return;
	if ((lpsz = (char FAR *)GlobalLock(ghsz)) == NULL)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="18E9EA94B4F2CCF92F39B174FB0D916F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XpDisplayRgxchCS() in fieldfmt.cpp allocates memory on line 6155 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldfmt.cpp</FileName>
<FilePath>dev/word/core/fieldfmt.cpp</FilePath>
<LineStart>6155</LineStart>
<Snippet>		}
	if ((pwGlyphs = new WORD[cMaxGlyphs]) == pNil
			|| (piAdvance = new int[cMaxGlyphs]) == pNil 
			|| (pGoffset = new GOFFSET[cMaxGlyphs]) == pNil
			|| (pwLogClust = new WORD[cMaxGlyphs]) == pNil</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="1F105D448104C58BB2EBD13B78FB1943">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestRowColumn_Delete() in TestTables.cpp allocates memory on line 509 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestTables.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestTables.cpp</FilePath>
<LineStart>509</LineStart>
<Snippet>	try
		{
		return new RowColumn_DeleteTestClass(&amp;test);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="2CB2A2D446129BE6F71094BADCC3EA8D">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdStyleBulNumDlg() in numdlg.cpp allocates memory on line 15459 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>numdlg.cpp</FileName>
<FilePath>dev/word/client/desktop/numdlg.cpp</FilePath>
<LineStart>15474</LineStart>
<Snippet>			}

		pbnbfeh-&gt;Release();
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="EC9BB0F34D35A02841BCC44472ACFD80">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdOptions() in options.cpp allocates memory on line 10707 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>options.cpp</FileName>
<FilePath>dev/word/client/desktop/options.cpp</FilePath>
<LineStart>10707</LineStart>
<Snippet>
		// We'll dupe the plex
		MSOTPX&lt;DATASOURCEMAP&gt; *ppxdsmClone = new MSOTPX &lt;DATASOURCEMAP&gt;;
		if (ppxdsmClone == pNil)
			return cmdNoMemory;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="20F17427D017CE14A94C46BDECF2E4F9">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function comment() in myx.cpp allocates memory on line 2792 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>myx.cpp</FileName>
<FilePath>dev/word/core/myx.cpp</FilePath>
<LineStart>2792</LineStart>
<Snippet>STDMETHODIMP MYX::comment(const XCHAR *pxchChars, int cchChars) throw0
{
	MYXLRPXCH1 *pmyxr = MYXLRPXCH1::PmyxrCreate(&amp;ISAXLexicalHandler::comment, pxchChars, cchChars);
	if (pmyxr == pNil)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="F255D8EB91B3427CAC83103BCE2CF482">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdOptions() in options.cpp allocates memory on line 10544 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>options.cpp</FileName>
<FilePath>dev/word/client/desktop/options.cpp</FilePath>
<LineStart>10544</LineStart>
<Snippet>		CodeMarker(perfWordOfficeCenterBootStart);

		MSOTPX&lt;DATASOURCEMAP&gt; *ppxdsm = new MSOTPX &lt;DATASOURCEMAP&gt;;

		// Figure one doc open at at time, so start with 2 items (doc + global).</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="55611EE3FDE1C6C02621527B84C7C4BD">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestUndoRedoCenterAlignment() in TestFormatPara.cpp allocates memory on line 268 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestFormatPara.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestFormatPara.cpp</FilePath>
<LineStart>268</LineStart>
<Snippet>	try
		{
		return new FormatParagraphClass(&amp;test, jcCenter);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="4D21BA3CD0AD8AABA77C80E1DF82D951">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CreateDataSourceFromTcid() in outspace.cpp allocates memory on line 1917 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>outspace.cpp</FileName>
<FilePath>dev/word/client/desktop/outspace.cpp</FilePath>
<LineStart>1917</LineStart>
<Snippet>	case msotcidSlabSecureReader:
		{
		WDocSecureSlab *pdsrs = new WDocSecureSlab;
		if (pdsrs != pNil)
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="18803D5B5B9E54BD2EF7932E8DA4486B">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Create() in oartHost.cpp allocates memory on line 2115 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartHost.cpp</FileName>
<FilePath>dev/word/client/desktop/oartHost.cpp</FilePath>
<LineStart>2115</LineStart>
<Snippet>
	Ofc::TCntPtr&lt;WDSP&gt; pwdspnew;
	pwdspnew.Attach(new WDSP(paui));
	if (pwdspnew == pNil || !pwdspnew-&gt;FSetControl(ofsc))
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="B6A82152190378EFD04D6020B8D9558D">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function GetFormatObjectUISite() in oartHost.cpp allocates memory on line 1592 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartHost.cpp</FileName>
<FilePath>dev/word/client/desktop/oartHost.cpp</FilePath>
<LineStart>1592</LineStart>
<Snippet>#endif

	poFormatObjectUISite = new AFOUIS( fDialogTargetsText );
#else
	metrocnv_stub_assert;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="A1E4446C8E87B51BE843D876694EDEB4">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FEditFilePmd() in pmhfetch.cpp allocates memory on line 1021 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhfetch.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhfetch.cpp</FilePath>
<LineStart>1021</LineStart>
<Snippet>			vpmwdVBASave = vpmwdCur;
		}
	else if (!FCreateMwd(docData, wkDoc, NULL, NULL, fcmcVis))
		return fFalse;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="51F2856D0451C2AE2BFE76FE952C8146">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function StbTextHighlight() in TestTextHighlight.cpp allocates memory on line 271 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestTextHighlight.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestTextHighlight.cpp</FilePath>
<LineStart>271</LineStart>
<Snippet>	try
		{
		return new TextHighlightClass(&amp;test);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E015AEF8D5B65283DD8BCCDF2E583C78">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PcvdShowCommentPopout() in atnpopout.cpp allocates memory on line 395 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>atnpopout.cpp</FileName>
<FilePath>dev/word/client/fastmodel/atnpopout.cpp</FilePath>
<LineStart>395</LineStart>
<Snippet>{
	DOD *pdod = (*hwwd)-&gt;pdod;
	CCommentPopoutViewUIWinRT *pcpvui = new CCommentPopoutViewUIWinRT();

	// A note on hiding ... In desktop, the current toolbar item for the comment popout</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="112151F97B80D511745260010F96B4C7">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FApplySprmToGrs() in htmlsty.cpp allocates memory on line 8612 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlsty.cpp</FileName>
<FilePath>dev/word/core/htmlsty.cpp</FilePath>
<LineStart>8612</LineStart>
<Snippet>			uint cbData = CbBigSprmData(sprm); // size of data
			uint cbChunk = CbBigSprm(cbData); // size of entire big sprm
			rgbBigSprmDataOld = new BYTE[cbData];

			if (rgbBigSprmDataOld == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="62324A3DDBED791C703F4487F5001131">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrScriptBreakCore() in rtd2d_cs.cpp allocates memory on line 2605 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>2605</LineStart>
<Snippet>	DWRITE_SHAPING_GLYPH_PROPERTIES rgGlyphProperties[512];

	pLogClust = PtAllocIfNeeded(cMaxGlyphs, RgC(rgLogClust), fFalse /*fAssertOnAlloc*/);
	if (pLogClust == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="FB80B3E6467FF204D7AF17943DA18EC9">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestUndoRedoRightAlignment() in TestFormatPara.cpp allocates memory on line 287 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestFormatPara.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestFormatPara.cpp</FilePath>
<LineStart>287</LineStart>
<Snippet>	try
		{
		return new FormatParagraphClass(&amp;test, jcRight);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="BAC27B11AF441F6E7DADD88E8469C5E6">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdTrustCenter() in options.cpp allocates memory on line 11868 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>options.cpp</FileName>
<FilePath>dev/word/client/desktop/options.cpp</FilePath>
<LineStart>11868</LineStart>
<Snippet>		{
		FlexDialogSP spFlexDialog;
		pbfeh = TrustCenterBFEH::Create(pcmb);	

		if (pbfeh == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="8B1483E1BF67648B62716F4CFA029774">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function OpenDocument() in applicationdocumentsuser.cpp allocates memory on line 467 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>applicationdocumentsuser.cpp</FileName>
<FilePath>dev/word/client/fastmodel/applicationdocumentsuser.cpp</FilePath>
<LineStart>467</LineStart>
<Snippet>		IMetroProgress &amp;mp(documentOperation.UseMetroProgress());
		
		WinRT::ComPtr&lt;CSaveStreamManager&gt; spssm = new CSaveStreamManager(&amp;appDocDesc, &amp;mp);
		if (spssm == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="625FB3AC55EB878B2BCEFB10974F7BCA">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestInprocFrameworkBasic() in TestInprocFramework.cpp allocates memory on line 49 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestInprocFramework.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestInprocFramework.cpp</FilePath>
<LineStart>49</LineStart>
<Snippet>	try
		{
		return new InprocFrameworkBasicTestClass(&amp;test);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="97D02E103C2E2DB802CF32E88B848DC4">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FUpdateShadowDocForTbIncremental() in e2osync.cpp allocates memory on line 979 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>e2osync.cpp</FileName>
<FilePath>dev/word/client/shared/e2osync.cpp</FilePath>
<LineStart>979</LineStart>
<Snippet>				return fFalse;
				}
			AWTP *pawtp = new AWTP();
			AssertTag(pawtp != pNil, 0x0039b5c1 /* tag_ao1xb */);
			if (pawtp == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="A9D2C9BB43C4713E8C548B9AC7A089FE">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestAlignRight() in TestParagraphFormat.cpp allocates memory on line 312 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestParagraphFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestParagraphFormat.cpp</FilePath>
<LineStart>312</LineStart>
<Snippet>	try
		{
		return new RightParaTestClass(&amp;test, fciRightPara);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="58DD06B75875BAE6C591D86BCAB3CB35">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdTrustCenter() in options.cpp allocates memory on line 11868 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>options.cpp</FileName>
<FilePath>dev/word/client/desktop/options.cpp</FilePath>
<LineStart>11951</LineStart>
<Snippet>LRet:
	if (pbfeh != pNil)
		pbfeh-&gt;Release();

	return cmdRet;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="756F46158796F250E1453E99A43E1B14">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function characters() in myx.cpp allocates memory on line 2316 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>myx.cpp</FileName>
<FilePath>dev/word/core/myx.cpp</FilePath>
<LineStart>2316</LineStart>
<Snippet>STDMETHODIMP MYX::characters(const XCHAR *pxchChars, int cchChars) throw0
{
	MYXCRPXCH1 *pmyxr = MYXCRPXCH1::PmyxrCreate(&amp;ISAXContentHandler::characters, pxchChars, cchChars);
	if (pmyxr == pNil)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E315985ABBD12FA11BA6B8AB8A2469A4">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestUndoRedoLineSpacing() in TestFormatPara.cpp allocates memory on line 249 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestFormatPara.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestFormatPara.cpp</FilePath>
<LineStart>249</LineStart>
<Snippet>	try
		{
		return new FormatParagraphClass(&amp;test, -1);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="5B86A1AB5D6011AEDDEAAA41DAFEC44B">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function UpdateCropMarks() in layer.cpp allocates memory on line 9379 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>layer.cpp</FileName>
<FilePath>dev/word/client/shared/layer.cpp</FilePath>
<LineStart>9380</LineStart>
<Snippet>			{
			ppelyr = new CPageElementLayer(txtkSolid, fFalse/*fUseCommandList*/, rcwDrawDest, m_ppelyrBackground, pelyrtCropMark, pNil/*pvData*/);
			if (ppelyr == pNil || !ppelyr-&gt;FInit())
				{
				SafeDelete(ppelyr);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="FD642E708522052767FC1EFEAACE6E08">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FireSelectionChangedToOsfControls() in osfhost.cpp allocates memory on line 1618 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>osfhost.cpp</FileName>
<FilePath>dev/word/client/desktop/osfhost.cpp</FilePath>
<LineStart>1623</LineStart>
<Snippet>				return;
			s_spwohSingleton-&gt;FireEvent(pohed);
			SafeRelease(pohed);

#ifdef DEBUG</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="C4B20D70B2209E21FAEEC3E0B46A6590">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FserrAddCoAuthLrg() in acetate.cpp allocates memory on line 3648 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>acetate.cpp</FileName>
<FilePath>dev/word/client/shared/acetate.cpp</FilePath>
<LineStart>3648</LineStart>
<Snippet>	int ibkfSdt = iNil;
	
	if ((pcoax = new COAX) == pNil)
		return fserrOutOfMemory;
	</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="3E8149A70CB06435CFF2B14D5B6AA289">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestVisibleDocument() in TaskLibDesktop.cpp allocates memory on line 1387 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>1387</LineStart>
<Snippet>	test.FailIf(!ptest-&gt;FBegin(L&quot;Select Idoc test&quot;),
		L&quot;new test failed FBegin&quot;);
	ptd = ptest-&gt;PtdCreateEmptyVisible();
	test.FailIf(ptd == pNil,
		L&quot;PtdCreateEmptyVisible returned pNil&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="13F7E52FCF258C495E2CA0C1E672F6A6">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestAddSpaceAbove() in TestParagraphFormat.cpp allocates memory on line 569 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestParagraphFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestParagraphFormat.cpp</FilePath>
<LineStart>569</LineStart>
<Snippet>	try
		{
		return new AddSpaceAboveParaTestClass(&amp;test, fciOpenParaAbove);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="BC2FCAAD97D83D15203ABD8CFA53B901">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrStartElementCore() in myx.cpp allocates memory on line 3009 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>myx.cpp</FileName>
<FilePath>dev/word/core/myx.cpp</FilePath>
<LineStart>3009</LineStart>
<Snippet>HRESULT MYX::HrStartElementCore(MYXE **ppmyxe) throw0
{
	MYXCRSE *pmyxr = MYXCRSE::PmyxrCreate(*ppmyxe);
	if (pmyxr == pNil)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="6FB26556FAE8A911B8A0079463D4A52F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ApplyLayoutRgxchCS() in bidi.cpp allocates memory on line 267 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>bidi.cpp</FileName>
<FilePath>dev/word/core/bidi.cpp</FilePath>
<LineStart>267</LineStart>
<Snippet>	OPENTYPE_TAG rgScriptTags[2048];
	// pScriptTags doesn't need a terminal item, so we can just use cMaxItems.
	pScriptTags = PtAllocIfNeeded(cMaxItems, RgC(rgScriptTags), fFalse /*fAssertOnAlloc*/);

	AssertTag(cMaxItems &gt; cxchBuf, ASSERTTAG('ioid'));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="2FCE6CBD5FF9FCF4D4D7BA717A0C4806">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestOArtBvt() in TestOArt.cpp allocates memory on line 115 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestOArt.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestOArt.cpp</FilePath>
<LineStart>115</LineStart>
<Snippet>
	// Reopen the doc
	ptd = test.PtdLoad(xszFileName);
	test.FailIf(ptd == pNil,
		L&quot;PtdLoad failed after saving and closing&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="D92789D632C149F7317D8D6C76E6B4F6">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CreateWordStyleMatrixGalleryApplyCommand() in schmpick.cpp allocates memory on line 655 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>schmpick.cpp</FileName>
<FilePath>dev/word/client/desktop/schmpick.cpp</FilePath>
<LineStart>655</LineStart>
<Snippet>	try
		{
		return new TSchemeGalleryApplyCommand&lt; Art::StyleMatrix &gt;( infoCommand );
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="D2802EA82902383E9CA8DB5F24BAAE91">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FGetE2oConvertInfo() in oartodf.cpp allocates memory on line 2529 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartodf.cpp</FileName>
<FilePath>dev/word/core/oartodf.cpp</FilePath>
<LineStart>2529</LineStart>
<Snippet>			{
			Ofc::TReferringPtr&lt;const WordDr::CanvasE2o&gt; prCanvasE2o(prE2o.down_cast&lt;const WordDr::CanvasE2o&gt;());
			poConvertInfo = new Art::GroupDrawingElementOdfE2oConvertInfo(prCanvasE2o-&gt;GetPatriarch());
			return true;
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="44451DD475BC790078D8870345E41F26">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestVisibleDocument() in TaskLibDesktop.cpp allocates memory on line 1188 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>1188</LineStart>
<Snippet>		XCHAR rgxchGoal[] = {xchTable, xchTable, xchTable, xchEop};

		ptd = test.PtdCreateEmptyVisible();
		if (ptd == pNil)
			goto _LEnd;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="44451DD475BC790078D8870345E41F25">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestVisibleDocument() in TaskLibDesktop.cpp allocates memory on line 1138 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>1138</LineStart>
<Snippet>	// TEST: verify that we can use DcpInsertXsz to add text to a non-foreground document
	// and still undo it (once we've moved selection back, of course).
	ptd = test.PtdCreateEmptyVisible();
	if (ptd == pNil)
		goto _LEnd;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E169986C965060CC8BD27C446AD0E1B8">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdBBPropertiesDlg() in sdtsupp.cpp allocates memory on line 6965 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>sdtsupp.cpp</FileName>
<FilePath>dev/word/client/desktop/sdtsupp.cpp</FilePath>
<LineStart>6993</LineStart>
<Snippet>		// otherwise we may have ref-count problems.  (maybe a bug in DS code).
		pcab-&gt;pids = pds;
		pbbbfeh-&gt;Release();
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="46939F5876E77EC1D69671FD417277A6">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IddtCreateDdtWithPmwd() in olesubs2.cpp allocates memory on line 545 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>olesubs2.cpp</FileName>
<FilePath>dev/word/client/desktop/olesubs2.cpp</FilePath>
<LineStart>545</LineStart>
<Snippet>				return iddtNil;
			}
		if ((lpddt = new CDDT) == lpNil)
			return iddtNil;
		AssertTag(IMacPl(vfdt.hpllpddt) &lt; IMaxPl(vfdt.hpllpddt), ASSERTTAG('dtre'));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="724925ACB5197DEA4CE6479D80411707">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FPushPotcp() in otin.cpp allocates memory on line 575 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>otin.cpp</FileName>
<FilePath>dev/word/core/otin.cpp</FilePath>
<LineStart>575</LineStart>
<Snippet>		}
	
	OTCP *potcpNew = new OTCP(&amp;potcp-&gt;grs, &amp;potcp-&gt;otdp);
	
	return IAddToPl(hplpotcp, &amp;potcpNew) != iNil;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="FE8AFFB608A814A927858DA87E2BA046">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestGRFCommandParsing() in WordGRF.cpp allocates memory on line 1164 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>WordGRF.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/WordGRF.cpp</FilePath>
<LineStart>1167</LineStart>
<Snippet>	test.FailIf(pHandler != pNil,
		L&quot;verifying that the parse failed&quot;);
	SafeRelease(pHandler); // just in case

	// TEST: a well-formed inProcTest element with another nested element fails</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="AB91C2368AA372E5D7A83F6D68BFEF19">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestLoadSmartTags() in TestSmartTags.cpp allocates memory on line 138 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestSmartTags.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestSmartTags.cpp</FilePath>
<LineStart>138</LineStart>
<Snippet>			return; 
	InProcTaskLib::TestDoc *ptd;
	ptd = test.PtdCreateEmptyVisible();
	test.FailIf(ptd == pNil, 
		L&quot;Creation of Empty document creation failed.&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="95D79FB32A863F8FEF50191987BA8CB9">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestVisibleDocument() in TaskLibDesktop.cpp allocates memory on line 1287 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>1287</LineStart>
<Snippet>	test.FailIf(!InProcTaskLib::FTextAtCpIs(ptd-&gt;Pdod(), 0 /*cp*/, L&quot;repeat load test&quot;),
		L&quot;repeat load test failed to find the right text after load&quot;);
	ptd2 = ptest-&gt;PtdLoad(xszFileName);
	test.FailIf(ptd2 != pNil,
		L&quot;PtdLoad succeeded loading the same file twice. It should have failed&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="DF58716EB77C06F9BBD751DB19064B3D">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function SignalWwdReady() in FastImmersiveZoomUIImpl.cpp allocates memory on line 192 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>FastImmersiveZoomUIImpl.cpp</FileName>
<FilePath>dev/word/endpoints/metro/dll/ui/FastImmersiveZoomUIImpl.cpp</FilePath>
<LineStart>192</LineStart>
<Snippet>	spSilhouette-&gt;OpenPane(spImmersiveZoomPaneContent.Get(), &amp;spPane);

	m_pizv-&gt;SetModel(new CImmersiveZoomModel(&amp;self));

	// Register for app size changes and visibility changes to dismiss IZ</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="1A9867B057A82D2CCE7AA15541A13A94">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CreateDataSourceFromTcid() in outspace.cpp allocates memory on line 1838 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>outspace.cpp</FileName>
<FilePath>dev/word/client/desktop/outspace.cpp</FilePath>
<LineStart>1838</LineStart>
<Snippet>	case msotcidSaveDocumentTask:
		{
		SATDS *psatds = new SATDS;
		if (psatds != pNil)
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="B3FAB7084579464F0192BC0009B29090">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestSmallCaps() in TestCharacterFormat.cpp allocates memory on line 595 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestCharacterFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestCharacterFormat.cpp</FilePath>
<LineStart>595</LineStart>
<Snippet>	try
		{
		return new CharacterFormatClass(&amp;test, fciSmallCaps, L&quot;TestSmallCaps&quot;);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="8BF57AA3BCA1B65A771C1F0BE653622E">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PiwpuiAlloc() in CImWordProgressUI.cpp allocates memory on line 74 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>CImWordProgressUI.cpp</FileName>
<FilePath>dev/word/client/fastmodel/CImWordProgressUI.cpp</FilePath>
<LineStart>74</LineStart>
<Snippet>	try
		{
		piwpuiRet = new CImWordProgressUI();
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="D1119B0B070B723ABB83DBC49C065B63">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrScriptShapeOpenType() in rtd2d_cs.cpp allocates memory on line 1456 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>1456</LineStart>
<Snippet>		}

	pGlyphProperties = PtAllocIfNeeded(cMaxGlyphs, RgC(rgGlyphProperties), fFalse /*fAssertOnAlloc*/);
	if (pGlyphProperties == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="851730AE45E571D046D2CAAEACDAECF2">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _FEqualRgn() in rtimrgn.cpp allocates memory on line 374 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtimrgn.cpp</FileName>
<FilePath>dev/word/core/rtimrgn.cpp</FilePath>
<LineStart>374</LineStart>
<Snippet>		{
		Gfx::Region *pgfxrgn = reinterpret_cast&lt;RTIMRGN *&gt;(&amp;rtrgn2)-&gt;m_pgfxrgn;
		Gfx::Region *pgfxrgnTemp = new Gfx::Region(*pgfxrgn);
	
		if (pgfxrgnTemp == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="25BBBAA8F16D21DB2D5B0677B0461553">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaCreateObjectClassFactory() in obapp.cpp allocates memory on line 2429 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obapp.cpp</FileName>
<FilePath>dev/word/client/desktop/obapp.cpp</FilePath>
<LineStart>2450</LineStart>
<Snippet>
	hr = pocf-&gt;QueryInterface(piid, ppv);
	pocf-&gt;Release();

	return hr;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="354F63D5B261B068988C2D1E865836D8">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PrepareForgottenAttachmentDetectorOnCompose() in olkedit.cpp allocates memory on line 5977 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>olkedit.cpp</FileName>
<FilePath>dev/word/client/desktop/olkedit.cpp</FilePath>
<LineStart>5981</LineStart>
<Snippet>				{
				AssertDoTag(SUCCEEDED(TpHrRunCallbackOnThread(pfadlc, TP_CALLBACK_SINGLETON | TP_PRIORITY_BG)), 0x0021c251 /* tag_ai2jr */);
				pfadlc-&gt;Release();
				}
			break;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="F6736CEE49CBB8ADD6F626702E0BBC18">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrGetRunCharKerning() in rtd2d_cs.cpp allocates memory on line 2419 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>2419</LineStart>
<Snippet>
	piGlyphs = PtAllocIfNeeded(cwchRun, RgC(rgiGlyphs), fFalse /*fAssertOnAlloc*/);
	pCodePoints = PtAllocIfNeeded(cwchRun, RgC(rgCodePoints), fFalse /*fAssertOnAlloc*/);

	if (piGlyphs == pNil || pCodePoints == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="AD5CE35EF0F52C38031616B7FBCDA57C">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestPageNumberBasic() in TestPageNumber.cpp allocates memory on line 42 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestPageNumber.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestPageNumber.cpp</FilePath>
<LineStart>42</LineStart>
<Snippet>		return; 
	
	ptd = test.PtdCreateEmptyVisible();
	if (ptd == pNil)
		return; </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="70FD6B2C-AFC9-4CED-88E0-54DBDE577574" iid="6D5FBD6E453A3FF9B7F7D8CCE19F48CB">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HGetOleClipboardData() in clipbrd2.cpp allocates memory on line 1334 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>clipbrd2.cpp</FileName>
<FilePath>dev/word/client/desktop/clipbrd2.cpp</FilePath>
<LineStart>1334</LineStart>
<Snippet>				DWORD lcb = WinGlobSize(stg.hGlobal);

				hg = WinGlobAlloc(GMEM_MOVEABLE, lcb);
				if (hg != NULL)
					{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="B9686A200CD3E6F5C4E526EB39661B78">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function EidSendHtmlMail() in cmd3.cpp allocates memory on line 8186 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>8186</LineStart>
<Snippet>
	// Create an Mwd for the cloned doc to host the envelope
	if (!FCreateMwd(pdodClone, wkDoc, NULL, NULL, fcmcNil))
		goto LRet;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="4A1C8C62F3B1D2206F72B1AB30CA9AC0">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestInsertTimeField() in TestFields.cpp allocates memory on line 142 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestFields.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestFields.cpp</FilePath>
<LineStart>142</LineStart>
<Snippet>	try
		{
		return new TestInsertField(&amp;test, fltTime, L&quot;TestInsertTimeField&quot;, L&quot;TIME&quot;);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="EEE6775AE73E82321E524CA3A0F3748F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FInitWwdFromWkRc() in clipbord.cpp allocates memory on line 10747 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>clipbord.cpp</FileName>
<FilePath>dev/word/client/desktop/clipbord.cpp</FilePath>
<LineStart>10747</LineStart>
<Snippet>		Debug(RC rcT = rc);		// make sure they don't change our rc
		sels.ca.pdod = pdodNil;
		if (!FCreateMwd(pdod, wk, &amp;sels, &amp;rc, fcmcVis))
			return fFalse;
		AssertTag(EqualRect(&amp;rc.rect, &amp;rcT.rect), ASSERTTAG('comj'));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="FE7D9E393E1964D0E61F903768860DC1">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XAdd() in oartconv.cpp allocates memory on line 9060 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartconv.cpp</FileName>
<FilePath>dev/word/core/oartconv.cpp</FilePath>
<LineStart>9060</LineStart>
<Snippet>	uint seq = SeqFromTxid(txid);

	HSPC *phspc = HspcForItxbxs(itxbxs);
	if (phspc == pNil)
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="D828974B5B632BFACC873F8FD2053C35">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function DecodeStrings() in sdtsupp.cpp allocates memory on line 1316 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>sdtsupp.cpp</FileName>
<FilePath>dev/word/client/desktop/sdtsupp.cpp</FilePath>
<LineStart>1316</LineStart>
<Snippet>			*cTokens = cStrings;

			result = new XCHAR*[cStrings];
			pxchStringPos = pxchStart + (pxchEnd - pxchStart);
			AssertTag(pxchStringPos == pxchEnd, 0x0024b5d0 /* tag_ajlxq */);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="FD3C7C69EA64EDC039E33C38D3E4C6A6">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function InitAllUI() in oartTextWrapCallout.cpp allocates memory on line 817 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartTextWrapCallout.cpp</FileName>
<FilePath>dev/word/client/desktop/oartTextWrapCallout.cpp</FilePath>
<LineStart>817</LineStart>
<Snippet>	Debug(MsoDebugShutdownLazyScope dbg;)

	m_pTextWrapGalleryUser.Attach(new TextWrapGalleryUser(spAlternateLayoutsGallery, *this));

	if ((m_pTextWrapGalleryUser == NULL))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="B096ECD95CC24183C44D59ADB28C96E3">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrGet_NewEnum() in obcoauth.cpp allocates memory on line 906 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obcoauth.cpp</FileName>
<FilePath>dev/word/client/desktop/obcoauth.cpp</FilePath>
<LineStart>906</LineStart>
<Snippet>	if (!FOaCoAuthPidSetCa(pidParent, &amp;caT))
		return E_FAIL;
	IUOIENUM *piuoiEnum = new IUOIENUM;
	piuoiEnum-&gt;cp = cp0;
	piuoiEnum-&gt;cple.icpMac = 1;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="6E4348867EEA3D0B76212974649156BE">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FPushPgrs() in otin.cpp allocates memory on line 595 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>otin.cpp</FileName>
<FilePath>dev/word/core/otin.cpp</FilePath>
<LineStart>595</LineStart>
<Snippet>		}
	
	GRS *pgrsNew = new GRS;
	FInitGrs(pgrsNew);
	FCopyGrs(pgrs, pgrsNew);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E9C2577B30DBB406226BF3BCDEBC6A46">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestDesktopTest() in TaskLibDesktop.cpp allocates memory on line 760 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>760</LineStart>
<Snippet>	testParent.FailIf(selCur.pdod != ptd-&gt;Pdod(),
		L&quot;PtdCreateEmptyVisible did not set selCur.pdod = m_pdod&quot;);
	ptd2 = ptest-&gt;PtdCreateEmptyVisible();
	testParent.FailIf(ptd2 == pNil,
		L&quot;PtdCrateEmptyVisible failed&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="F7D6C3DA50A2C82B60C95FCF7D50683E">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrCreateBod() in blogout.cpp allocates memory on line 249 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>blogout.cpp</FileName>
<FilePath>dev/word/client/desktop/blogout.cpp</FilePath>
<LineStart>249</LineStart>
<Snippet>	BOD *pbod;
	
	if ((pbod = new BOD) == pNil)
		return E_FAIL;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="9F836BBE2E11759B9BAF3DFF3B9EEA40">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _DrawInsertWidget() in wproc.cpp allocates memory on line 6167 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>wproc.cpp</FileName>
<FilePath>dev/word/client/desktop/wproc.cpp</FilePath>
<LineStart>6167</LineStart>
<Snippet>					break;
				case tiwkRow:
					AssertDoTag(FCreateDrselTableMarks(tiw.hpr, &amp;tiw.drcw, drselkTableInsertRow, grfdrsel, new TIW(tiw)), 0x0049a589 /* tag_as0wj */);
					break;
				default:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="5D564F0613940DF8F6C3E296DBD97C8A">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PwwndCreateExtern() in wwnd.cpp allocates memory on line 259 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>wwnd.cpp</FileName>
<FilePath>dev/word/client/desktop/wwnd.cpp</FilePath>
<LineStart>259</LineStart>
<Snippet>	try
		{
		pwwnd = PO&lt;CWordWindow&gt;(new CWordWindow(hwwd, hwnd, fFalse));
		if (pwwnd == pNil)
			return pNil;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="01BBAFFC55477422E654E96C02F9E286">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function startEntity() in myx.cpp allocates memory on line 2705 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>myx.cpp</FileName>
<FilePath>dev/word/core/myx.cpp</FilePath>
<LineStart>2705</LineStart>
<Snippet>STDMETHODIMP MYX::startEntity(const XCHAR *pxchName, int cchName) throw0
{
	MYXLRPXCH1 *pmyxr = MYXLRPXCH1::PmyxrCreate(&amp;ISAXLexicalHandler::startEntity, pxchName, cchName);
	if (pmyxr == pNil)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="9C0F144590333A082278EE8BE9C3A91E">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XpDisplayRgxchCS() in fieldfmt.cpp allocates memory on line 6154 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldfmt.cpp</FileName>
<FilePath>dev/word/core/fieldfmt.cpp</FilePath>
<LineStart>6154</LineStart>
<Snippet>		goto FailedShapeRgxch;
		}
	if ((pwGlyphs = new WORD[cMaxGlyphs]) == pNil
			|| (piAdvance = new int[cMaxGlyphs]) == pNil 
			|| (pGoffset = new GOFFSET[cMaxGlyphs]) == pNil</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="68645263D0DD98848976B961ACB74A6F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestAddComment() in TestComments.cpp allocates memory on line 107 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestComments.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestComments.cpp</FilePath>
<LineStart>107</LineStart>
<Snippet>	try
		{
		return new CommentsClass(&amp;test);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="83318364F0E3E12AC526CD51D2794E96">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ChangeAllConfirmDlg() in chgall.cpp allocates memory on line 1958 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>chgall.cpp</FileName>
<FilePath>dev/word/client/desktop/chgall.cpp</FilePath>
<LineStart>1965</LineStart>
<Snippet>	if ((hcab = HcabAllocSbDds(cabiCABChgAllConfirm)) == hNil)
		{
		pbnbfeh-&gt;Release();
		return cmdError;
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="70FD6B2C-AFC9-4CED-88E0-54DBDE577574" iid="F9969902A465C5B4AF2ED3DCC387C6E7">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function LRefillRtfBuffer() in cwordconv.cpp allocates memory on line 795 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cwordconv.cpp</FileName>
<FilePath>dev/word/endpoints/converters/wordconv/cwordconv.cpp</FilePath>
<LineStart>795</LineStart>
<Snippet>	if (cbToRead == 0) // Done reading RTF
		return 0;
	if (GlobalReAlloc(vghBuff, cbToRead, GMEM_MOVEABLE) == hNil)
		return -1;
	if ((pbBuff = (BYTE *)GlobalLock(vghBuff)) == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="3AF0590725470C4A500322002BCE3D9B">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PfmodClone() in WebScalingFetchModifier.cpp allocates memory on line 57 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>WebScalingFetchModifier.cpp</FileName>
<FilePath>dev/word/client/shared/WebScalingFetchModifier.cpp</FilePath>
<LineStart>57</LineStart>
<Snippet>	if (PaxcrstrGet() != pNil)
		{
		AXCRSTR *paxcrstrClone = new TAXC&lt;RSTR&gt;();
		if (paxcrstrClone == pNil)
			return pNil;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="0D65CDC840C98AE896D17A25795C48B2">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestBasicCutCopyPaste() in TestCutCopyPaste.cpp allocates memory on line 145 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestCutCopyPaste.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestCutCopyPaste.cpp</FilePath>
<LineStart>145</LineStart>
<Snippet>	try
		{
		return new CutCopyPasteClass(&amp;test);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="40CAE9F9B7160CB2402A54B93C651621">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function InsertFtnEdn() in testFootnoteEndnote.cpp allocates memory on line 204 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>testFootnoteEndnote.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/testFootnoteEndnote.cpp</FilePath>
<LineStart>204</LineStart>
<Snippet>
	InProcTaskLib::TestDoc *ptd;
	ptd = test.PtdCreateEmptyVisible();
	if (ptd == pNil)
		return; </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="0EE6515DCD64B9A8CBCF4AC748EACA45">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestToggleWebScalingMode() in TestWebScalingMode.cpp allocates memory on line 132 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestWebScalingMode.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestWebScalingMode.cpp</FilePath>
<LineStart>132</LineStart>
<Snippet>	try
	{
		return new WebScalingModeClass(&amp;test);
	}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="AFBE3B6432D6813A9EA0DE9679DFDA93">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestUnderline() in TestCharacterFormat.cpp allocates memory on line 462 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestCharacterFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestCharacterFormat.cpp</FilePath>
<LineStart>462</LineStart>
<Snippet>	try
		{
		return new CharacterFormatClass(&amp;test, fciUnderline, L&quot;TestUnderline&quot;);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="E27AD0D18706660FECD6C40C84CCE3BB">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrGetRunCharKerning() in rtd2d_cs.cpp allocates memory on line 2418 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>2418</LineStart>
<Snippet>	UINT rgCodePoints[ixchMaxRgxch];

	piGlyphs = PtAllocIfNeeded(cwchRun, RgC(rgiGlyphs), fFalse /*fAssertOnAlloc*/);
	pCodePoints = PtAllocIfNeeded(cwchRun, RgC(rgCodePoints), fFalse /*fAssertOnAlloc*/);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="05BBEB5C7BF3FAF940BC805F3D4C8870">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestInsertPasteUndoRedoCloseReopenLinkOLE() in TestOLE.cpp allocates memory on line 367 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestOLE.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestOLE.cpp</FilePath>
<LineStart>367</LineStart>
<Snippet>		goto _LEnd; // FBegin should complain to the logs if it fails.

	ptd = test.PtdCreateEmptyVisible();
	test.FailIf(ptd == pNil,
		L&quot;ptd should not be nil in TestInsertPasteUndoRedoCloseReopenLinkOLE&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E6F431F2F9EF4175F2FD495AE11C68D7">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestDesktopTest() in TaskLibDesktop.cpp allocates memory on line 745 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>745</LineStart>
<Snippet>	testParent.FailIf(!ptest-&gt;FBegin(L&quot;TestDesktopTest&quot;),
		L&quot;DesktopTest::FBegin returned failure&quot;);
	ptd = ptest-&gt;PtdCreateEmptyVisible();
	testParent.FailIf(ptd == pNil,
		L&quot;PtdCreateEmptyVisible failed&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="830F8272B910D45D589A7913EE445085">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrCreateColor() in obrange.cpp allocates memory on line 28891 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>28894</LineStart>
<Snippet>	if (pomfc == pNil)
		return E_FAIL;
	return HrOaCreateGenericObject(
				pNil, *RefiidFromObi(obiColorFormat), (void **)ppid, PgodFromObi(obiColorFormat),
					grfAdviseAll, pomfc, punkParent);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="603904165718DC5DCA0F7692FC15B1FB">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XpDisplayRgxchCS() in fieldfmt.cpp allocates memory on line 6157 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldfmt.cpp</FileName>
<FilePath>dev/word/core/fieldfmt.cpp</FilePath>
<LineStart>6157</LineStart>
<Snippet>			|| (piAdvance = new int[cMaxGlyphs]) == pNil 
			|| (pGoffset = new GOFFSET[cMaxGlyphs]) == pNil
			|| (pwLogClust = new WORD[cMaxGlyphs]) == pNil
			|| (pGlyphProps = new SCRIPT_GLYPHPROP[cMaxGlyphs]) == pNil
			|| (pCharProps = new SCRIPT_CHARPROP[cch]) == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="83318364F0E3E12AC526CD51D2794E97">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ChangeAllConfirmDlg() in chgall.cpp allocates memory on line 1958 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>chgall.cpp</FileName>
<FilePath>dev/word/client/desktop/chgall.cpp</FilePath>
<LineStart>1987</LineStart>
<Snippet>		FreeCabSbDds(hcab);
	if (pNil != pbnbfeh)
		pbnbfeh-&gt;Release();
	return cmdResult;
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="33658852D6DFC8550F6C285D1A749265">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaCreateToe() in obtable.cpp allocates memory on line 1150 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obtable.cpp</FileName>
<FilePath>dev/word/client/desktop/obtable.cpp</FilePath>
<LineStart>1183</LineStart>
<Snippet>	if (SUCCEEDED(hr))
		hr = ptoe-&gt;QueryInterface(piid, ppv);
	ptoe-&gt;Release();

	return hr;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="7EFB9E924FCD405BC010B77AE2EE0DB6">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BBDDAddModifyDlg() in sdtsupp.cpp allocates memory on line 5684 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>sdtsupp.cpp</FileName>
<FilePath>dev/word/client/desktop/sdtsupp.cpp</FilePath>
<LineStart>5709</LineStart>
<Snippet>LRet:
	if (pbbddbfeh != pNil)
		pbbddbfeh-&gt;Release();
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="63FE8277A5E31E844991A14535BF1AB3">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrScriptTextOutSubPixel() in rtd2d_cs.cpp allocates memory on line 2071 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>2071</LineStart>
<Snippet>	if (cJustifiedGlyphs &gt; cGlyphs)
		{
		pwJustifiedGlyphs = PtAllocIfNeeded(cJustifiedGlyphs, RgC(rgwJustifiedGlyphs), fFalse /*fAssertOnAlloc*/);
		if (pwJustifiedGlyphs == pNil)
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="C7811BB216A9BFEA8D9A8CB581EEBFB8">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCreateAndAddDocDS() in options.cpp allocates memory on line 4412 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>options.cpp</FileName>
<FilePath>dev/word/client/desktop/options.cpp</FilePath>
<LineStart>4412</LineStart>
<Snippet>	if (idDSD == CABOptionsDoc::TypeID)
		{
		PCLDO *pPCLDoc = new PCLDO;
		if (pPCLDoc == pNil)
			return fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="D2802EA82902383E9CA8DB5F24BAAE8F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FGetE2oConvertInfo() in oartodf.cpp allocates memory on line 2517 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartodf.cpp</FileName>
<FilePath>dev/word/core/oartodf.cpp</FilePath>
<LineStart>2517</LineStart>
<Snippet>			{
			Ofc::TReferringPtr&lt;const WordDr::WordE2o&gt; prWordE2o(prE2o.down_cast&lt;const WordDr::WordE2o&gt;());
			poConvertInfo = new Art::DrawingElementOdfE2oConvertInfo(prWordE2o-&gt;GetDrawingElement());
			return true;
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="13DC440EF00B38FAE5DE491C9A5EAB30">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestRemoveSpaceBelow() in TestParagraphFormat.cpp allocates memory on line 528 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestParagraphFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestParagraphFormat.cpp</FilePath>
<LineStart>528</LineStart>
<Snippet>	try
		{
		return new RemoveSpaceBelowParaTestClass(&amp;test, fciCloseParaBelow);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="2BF3FA7012D03C4652A3BB82BA13EECF">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WinMain() in word.cpp allocates memory on line 38 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>word.cpp</FileName>
<FilePath>dev/word/endpoints/metro/lib/word.cpp</FilePath>
<LineStart>38</LineStart>
<Snippet>	UNREFERENCED_PARAMETER(hInstance);

	CWordApplicationUser* pAppUser = new CWordApplicationUser();

	if (!pAppUser)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="6DD51C472BE54C6822885115F7861043">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FPopulateXmlTreeHelperAttr() in xmlmappingpane.cpp allocates memory on line 982 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmlmappingpane.cpp</FileName>
<FilePath>dev/word/client/desktop/xmlmappingpane.cpp</FilePath>
<LineStart>982</LineStart>
<Snippet>bool CXmlMappingPane::FPopulateXmlTreeHelperAttr(int iattr, XmlNodeWithFlexDS *pxnfLocal, IMsoXmlDataStoreLocator **ppimxslAttr, TAX&lt;XmlNodeWithFlexDS *&gt; *ptaxpxnfStack) throw0
{
	XmlNodeWithFlexDS *pxnfAttr = new XmlNodeWithFlexDS();
	if (pxnfAttr == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="2063621B4B4E2A9BFCD4D61BB845B77D">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function OnNotification() in layer.cpp allocates memory on line 6426 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>layer.cpp</FileName>
<FilePath>dev/word/client/shared/layer.cpp</FilePath>
<LineStart>6426</LineStart>
<Snippet>				HandleViewportMove(&amp;hvmp);
			else if (notification == AirSpace::Notification::ScrollerViewportMoved)
				ChainFci(fciAirSpaceNotification, reinterpret_cast&lt;WPARAM&gt;(new CDelayedViewportMove(HwwdGet(), hvmp)));
			}
		break;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="5785166C7530A31E9924A49F04D5BE86">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function InsertFtnEdn() in testFootnoteEndnote.cpp allocates memory on line 308 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>testFootnoteEndnote.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/testFootnoteEndnote.cpp</FilePath>
<LineStart>308</LineStart>
<Snippet>
	// Re-open it
	ptd = test.PtdLoad(xszFileName);	
	
	test.FailIf(ptd == pNil,</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="4A9C626191371A706AA1519BCA9C3D34">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function skippedEntity() in myx.cpp allocates memory on line 2561 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>myx.cpp</FileName>
<FilePath>dev/word/core/myx.cpp</FilePath>
<LineStart>2561</LineStart>
<Snippet>STDMETHODIMP MYX::skippedEntity(const XCHAR *pxchName, int cchName) throw0
{
	MYXCRPXCH1 *pmyxr = MYXCRPXCH1::PmyxrCreate(&amp;ISAXContentHandler::characters, pxchName, cchName);
	if (pmyxr == pNil)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="8AA8EBF6A7C592C1617AB2085205BD40">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XpDisplayRgxchCS() in fieldfmt.cpp allocates memory on line 6156 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldfmt.cpp</FileName>
<FilePath>dev/word/core/fieldfmt.cpp</FilePath>
<LineStart>6156</LineStart>
<Snippet>	if ((pwGlyphs = new WORD[cMaxGlyphs]) == pNil
			|| (piAdvance = new int[cMaxGlyphs]) == pNil 
			|| (pGoffset = new GOFFSET[cMaxGlyphs]) == pNil
			|| (pwLogClust = new WORD[cMaxGlyphs]) == pNil
			|| (pGlyphProps = new SCRIPT_GLYPHPROP[cMaxGlyphs]) == pNil</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="8DE05B5C27EF240D7E37CE8A513DD5F3">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FPopulateBBCalendarDataSource() in sdtsupp.cpp allocates memory on line 6318 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>sdtsupp.cpp</FileName>
<FilePath>dev/word/client/desktop/sdtsupp.cpp</FilePath>
<LineStart>6318</LineStart>
<Snippet>		return fFalse;
	
	BBDTLPCL *pbbdtlpcl = new BBDTLPCL;

	if (pbbdtlpcl == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="6D56C45EFECB81F60FDCD592C9C30474">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function StbTextInTableHighlight() in TestTextHighlight.cpp allocates memory on line 308 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestTextHighlight.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestTextHighlight.cpp</FilePath>
<LineStart>308</LineStart>
<Snippet>	try
		{
		return new TextInTableHighlightClass(&amp;test);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="EF53B21F156B66BDAE87EF62EB64C1F1">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrCreateInlineShape() in obdoc.cpp allocates memory on line 16297 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obdoc.cpp</FileName>
<FilePath>dev/word/client/desktop/obdoc.cpp</FilePath>
<LineStart>16297</LineStart>
<Snippet>	// allocate the object instance data
	OBIS *pobis;
	if ((pobis = new OBIS) == pNil)
		return HrFromRerr(rerrOutOfMemory);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E6D5FD5FE4512FB52EA4F999B07182C9">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CreateECPointerChangedListener() in acetate.cpp allocates memory on line 8829 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>acetate.cpp</FileName>
<FilePath>dev/word/client/desktop/acetate.cpp</FilePath>
<LineStart>8829</LineStart>
<Snippet>	if (pecman != pNil)
		{
		ECPointerModeChangedListener *pecpmcl = new ECPointerModeChangedListener(pecman);
		if (pecpmcl != pNil)
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="BAF3F190FD9786E8E2C7BA3B50CE57E3">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrCreateLocks() in obcoauth.cpp allocates memory on line 111 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obcoauth.cpp</FileName>
<FilePath>dev/word/client/desktop/obcoauth.cpp</FilePath>
<LineStart>115</LineStart>
<Snippet>		return E_OUTOFMEMORY;

	HRESULT hr = HrOaCreateGenericObjectObi(obiCoAuthLocks, pNil, *RefiidFromObi(obiCoAuthLocks),
		(void **)ppid, PgodFromObi(obiCoAuthLocks), grfAdviseAll, poclc, pid);
	if (FAILED(hr))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="782754486716954F0404D8691298B352">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestRemoveSpaceAbove() in TestParagraphFormat.cpp allocates memory on line 487 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestParagraphFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestParagraphFormat.cpp</FilePath>
<LineStart>487</LineStart>
<Snippet>	try
		{
		return new RemoveSpaceAboveParaTestClass(&amp;test, fciCloseParaAbove);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="2871AF78F5F0FDC05DF1725540D11580">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Create() in mwd.cpp allocates memory on line 482 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>mwd.cpp</FileName>
<FilePath>dev/word/core/mwd.cpp</FilePath>
<LineStart>484</LineStart>
<Snippet>	MWD *pmwd = new MWD(fSystem);

	if (pmwd == nullptr || !pmwd-&gt;FInit())
		return nullptr;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="7522C57BFC0EB195E361D9CE88795868">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function OnNotification() in layer.cpp allocates memory on line 10096 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>layer.cpp</FileName>
<FilePath>dev/word/client/shared/layer.cpp</FilePath>
<LineStart>10096</LineStart>
<Snippet>					prlyr-&gt;HandleViewportMove(&amp;hvmp);
				else if (notification == AirSpace::Notification::ScrollerViewportMoved)
					ChainFci(fciAirSpaceNotification, reinterpret_cast&lt;WPARAM&gt;(new CDelayedViewportMove(prlyr-&gt;HwwdGet(), hvmp)));
				}
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="2AFE029D8B3D4ECEAFE8BF81C442A72E">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdMathOptionsDlg() in mathui.cpp allocates memory on line 4130 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>mathui.cpp</FileName>
<FilePath>dev/word/client/desktop/mathui.cpp</FilePath>
<LineStart>4258</LineStart>
<Snippet>
	if (pbfeh)
		pbfeh-&gt;Release();

	return cmdRet;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="15C6924A7B9455DF7F324900D83AFCDF">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XpDisplayRgxchCS() in fieldfmt.cpp allocates memory on line 6158 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldfmt.cpp</FileName>
<FilePath>dev/word/core/fieldfmt.cpp</FilePath>
<LineStart>6158</LineStart>
<Snippet>			|| (pGoffset = new GOFFSET[cMaxGlyphs]) == pNil
			|| (pwLogClust = new WORD[cMaxGlyphs]) == pNil
			|| (pGlyphProps = new SCRIPT_GLYPHPROP[cMaxGlyphs]) == pNil
			|| (pCharProps = new SCRIPT_CHARPROP[cch]) == pNil)
		goto FailedShapeRgxch;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E6F431F2F9EF4175F2FD495AE11C68D8">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestDesktopTest() in TaskLibDesktop.cpp allocates memory on line 804 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>804</LineStart>
<Snippet>	testParent.FailIf(!ptest-&gt;FBegin(L&quot;TestDesktopTest&quot;),
		L&quot;DesktopTest::FBegin returned failure&quot;);
	ptd = ptest-&gt;PtdCreateEmptyVisible();
	testParent.FailIf(ptd == pNil,
		L&quot;PtdCreateEmptyVisible failed&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="3CA9D95051EC3AFB83808371F685EFD1">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CreateWordColorSchemeGalleryApplyCommand() in schmpick.cpp allocates memory on line 613 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>schmpick.cpp</FileName>
<FilePath>dev/word/client/desktop/schmpick.cpp</FilePath>
<LineStart>613</LineStart>
<Snippet>	try
		{
		return new TSchemeGalleryApplyCommand&lt; Art::ColorSchemeAndMapping &gt;( infoCommand );
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="5B44D1DBAF0163B6BBFF8A881514ADD9">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrGetRunCharKerning() in rtd2d_cs.cpp allocates memory on line 2441 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>2441</LineStart>
<Snippet>	if (SUCCEEDED(hr))
		{
		pdxKernRaw = PtAllocIfNeeded(cwchRun, RgC(rgdxKernRaw), fFalse /*fAssertOnAlloc*/);
		if (pdxKernRaw == pNil)
			hr = E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="FA1214EC6B3219D452CA4D5F9D1A93E9">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PdodOpenFnmCore2() in open.cpp allocates memory on line 3182 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>open.cpp</FileName>
<FilePath>dev/word/core/open.cpp</FilePath>
<LineStart>3182</LineStart>
<Snippet>			if (pfcb)
				pfcb-&gt;cRef++;
			pmwd = MWD::PmwdCreateCore(pdod, wkDoc, &amp;sels, prcMw, grfcmc, pioldoc, pNil, hwndNil, pNil /*pfawcpapp*/ DEBUGPARAMS_TOP);
			if (pfcb)
				pfcb-&gt;cRef--;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="46FDE2DDC6B72386BB7F0222B0E32C19">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function UpdateXmlTree() in xmlmappingpane.cpp allocates memory on line 1263 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmlmappingpane.cpp</FileName>
<FilePath>dev/word/client/desktop/xmlmappingpane.cpp</FilePath>
<LineStart>1263</LineStart>
<Snippet>
	if (FAILED(m_pimxsi-&gt;HrSelectSingleNode(L&quot;/&quot;, &amp;pimxsl)) ||
		!taxpxnfStack.FInit(cListSize) ||
		(pxnf = new XmlNodeWithFlexDS()) == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E3575CD3F8F21380CFCF5334FA406DA6">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _FDecomposeTxbxPsel() in select.cpp allocates memory on line 2462 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>select.cpp</FileName>
<FilePath>dev/word/client/shared/select.cpp</FilePath>
<LineStart>2462</LineStart>
<Snippet>				goto LRet;
			
			DSCM *pdscmNew = new DSCM();
			if (pdscmNew == pNil)
				{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="38C1DD4CAD1B8281E135A0169706FCAC">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrClearAllHitHighlight() in olkedit.cpp allocates memory on line 5145 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>olkedit.cpp</FileName>
<FilePath>dev/word/client/desktop/olkedit.cpp</FilePath>
<LineStart>5145</LineStart>
<Snippet>	if (pdod-&gt;pud-&gt;fBkgndOpenEmailActive)
		{
		HHOPC *phhopc = new HHOPC(this);

		if (phhopc == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="6E0D7B2B1856E247D3A3BECB7CD08E91">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCreate() in flex.cpp allocates memory on line 718 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>flex.cpp</FileName>
<FilePath>dev/word/client/desktop/flex.cpp</FilePath>
<LineStart>718</LineStart>
<Snippet>		}

	pcgs = new DCGS(selCur.ca.pdod, pids, iPropResult);
	if (pcgs == pNil)
		return fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="73FA1B138E778636F0E140FD730F1776">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestPtdCurrent() in TaskLibClient.cpp allocates memory on line 1100 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibClient.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TaskLibClient.cpp</FilePath>
<LineStart>1100</LineStart>
<Snippet>	test.FailIf(!ptest-&gt;FBegin(L&quot;Inner ClientTest&quot;), L&quot;Inner ClientTest failed FBegin&quot;);
	test.FailIf(ptest-&gt;FFailed(), L&quot;Inner ClientTest has already failed&quot;);
	ptd = ptest-&gt;PtdGetCurrent();
	test.FailIf(ptd == pNil, L&quot;PtdGetCurrent failed&quot;);
	test.FailIf(ptest-&gt;FFailed(), L&quot;Inner ClientTest failed after PtdGetCurrent&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="7F02730512CAD760AE0161F4B6173437">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function UpdateNotification() in pginval.cpp allocates memory on line 743 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pginval.cpp</FileName>
<FilePath>dev/word/client/desktop/pginval.cpp</FilePath>
<LineStart>743</LineStart>
<Snippet>	cpagesWwd = 0;

	rgPagePos = OFCNew PagePos[IMacPl(hwwd)];

	// Loop through all page and remember set of existing pages</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="57259A8A2B18BFAA45D6E39A14DA8EC3">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function EnsureProofingPaneEventHandlerRegistered() in proofing.cpp allocates memory on line 1770 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>proofing.cpp</FileName>
<FilePath>dev/word/client/desktop/proofing.cpp</FilePath>
<LineStart>1770</LineStart>
<Snippet>		if (pEventHandler == pNil)
			{
			pEventHandler = new ProofingEventHandler(PitbsFromDoc(pptfs-&gt;pptsc-&gt;pdodScan));
			if (pEventHandler != pNil)
				{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="0CBFFC2FF40E90955D9D75D8CF8E0C6C">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestSecondSample() in ClientTestSample.cpp allocates memory on line 100 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ClientTestSample.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/ClientTestSample.cpp</FilePath>
<LineStart>100</LineStart>
<Snippet>	try
		{
		return new SecondTestClass(&amp;test, true);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="446566481D88F97C521643C14A24CD4E">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CreateSimpleNumberedListAfmtAsYouType() in TestBulletsAndNumbering.cpp allocates memory on line 123 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestBulletsAndNumbering.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestBulletsAndNumbering.cpp</FilePath>
<LineStart>123</LineStart>
<Snippet>	try
	{
		return new BulletAndNumberFormatClass(&amp;test);
	}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="08A54343649980A50EDC185170CE8DF5">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestTERMPageTurnBtnClick() in TestTERMPageTurnBtn.cpp allocates memory on line 157 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestTERMPageTurnBtn.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestTERMPageTurnBtn.cpp</FilePath>
<LineStart>157</LineStart>
<Snippet>	
	InProcTaskLib::TestDoc *ptd;
	ptd = test.PtdCreateEmptyVisible();
	if (ptd == pNil)
		return;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="422929C0D7A7B6C6E34D0F7FCFF33B4D">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestVisibleDocument() in TaskLibDesktop.cpp allocates memory on line 1282 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>1282</LineStart>
<Snippet>		L&quot;TestDoc::FSaveAs failed to save to DOCX&quot;);
	test.CmdExec(fciFileCloseNoSave);
	ptd = ptest-&gt;PtdLoad(xszFileName);
	test.FailIf(ptd == pNil,
		L&quot;PtdLoad failed after saving and closing&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E546372F99674ED57897B6F1CECCC910">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FSaveTableLiveCacheProps() in frame.cpp allocates memory on line 356 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>frame.cpp</FileName>
<FilePath>dev/word/client/desktop/frame.cpp</FilePath>
<LineStart>356</LineStart>
<Snippet>		}

	CTableLiveCache *ptbllivcNew = new CTableLiveCache(itap, CpMacPdod(m_LiveSupport.Pdod()));
	if (ptbllivcNew == pNil || !m_axptbllivc.FAppend(&amp;ptbllivcNew) || !ptbllivcNew-&gt;FInit())
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="CC48EB3AB75E9EC47FBFF3554364B2E9">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FInitDefault() in mapfnpfcb.cpp allocates memory on line 495 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>mapfnpfcb.cpp</FileName>
<FilePath>dev/word/core/mapfnpfcb.cpp</FilePath>
<LineStart>495</LineStart>
<Snippet>bool CMapFnPfcb::FInitDefault(void) throw0
{
	CMapFnPfcbImplApp *pfcbtia = new CMapFnPfcbImplApp();
	if (pfcbtia == pNil)
		return fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="8D21EA9242ADF047F59AAEE848F66AC3">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FserrAddFancyBubbleMore() in abd2.cpp allocates memory on line 2044 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>abd2.cpp</FileName>
<FilePath>dev/word/core/abd2.cpp</FilePath>
<LineStart>2044</LineStart>
<Snippet>		BLOCK
			{
			AMNX *pamnx = new AMNX();
			if (pamnx == pNil)
				return fserrOutOfMemory;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="09E351D420FA93D3B4FA9C398C6928F9">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestForcedE1oConversionCore() in TestForcedE1oConversion.cpp allocates memory on line 713 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestForcedE1oConversion.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestForcedE1oConversion.cpp</FilePath>
<LineStart>713</LineStart>
<Snippet>			// Each E1o gets a nice, new, empty doc to play in
			InProcTaskLib::TestDoc *ptd;
			ptd = e1oTest.PtdCreateEmptyVisible();
			if (ptd == pNil)
				return;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="7EB2EBEB5DF05E51158D2F083D9BA36C">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FEmNotifyActionRibbon() in otb.cpp allocates memory on line 1604 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>otb.cpp</FileName>
<FilePath>dev/word/client/desktop/otb.cpp</FilePath>
<LineStart>1604</LineStart>
<Snippet>		if (pArgs-&gt;pControl != pNil &amp;&amp; FGetCidFromOurControl(pArgs-&gt;pControl, &amp;cid))
			{
			if ((pross = new ROSS) != pNil)
				{
				if (FInitRunOnSrc(pNil /*pfRunOnSrc*/,  pNil /*pfRunOnSrcConflict*/, pNil/*pfRunOnSrcAtnOnly*/, cid, &amp;selCur, pross, fFalse /*fOnlyValidLinks*/))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="AF336805282A0D527A83BD361B89578B">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FInsertXcharDxp() in loadfont.cpp allocates memory on line 8093 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>loadfont.cpp</FileName>
<FilePath>dev/word/core/loadfont.cpp</FilePath>
<LineStart>8093</LineStart>
<Snippet>			//We haven't yet allocated the half codepage around character xch,
			// so let's go ahead and take care of that.
			XWCE *pxwce = new XWCE[s_cxchHalfCodePage];
			if (pxwce == pNil)
				return fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="FE8AFFB608A814A927858DA87E2BA043">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestGRFCommandParsing() in WordGRF.cpp allocates memory on line 1088 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>WordGRF.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/WordGRF.cpp</FilePath>
<LineStart>1105</LineStart>
<Snippet>	test.FailIf(FEnsureBool(FNeXsz(pipta-&gt;poxszCase , L&quot;all&quot;)),
		L&quot;verifying default state of poxszCase&quot;);
	SafeRelease(pHandler);

	// TEST: a well-formed inProcTest element with assertOnFailure, bucket, and case works</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="9191AAD6088D6C11377E4B77A6FB3869">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FAddDodListEntry() in TaskLibCore.cpp allocates memory on line 338 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibCore.cpp</FileName>
<FilePath>dev/word/core/comptest/TaskLibCore.cpp</FilePath>
<LineStart>355</LineStart>
<Snippet>	m_pHead = pEntry;
	pddle-&gt;ppdod = &amp;pEntry-&gt;pdod;
	RegisterPdodDispose(pddle);

	return fTrue;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="F94907C6FCBEC0FCE86FADE87D90ECB8">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function MmrFinishMailMergePmd() in pmh.cpp allocates memory on line 742 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmh.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmh.cpp</FilePath>
<LineStart>742</LineStart>
<Snippet>		pdod-&gt;pud-&gt;iInstance = ++viMailMergeErr;

		if (!FCreateMwd(ppmrd-&gt;docError, wkDoc, pNil, pNil, fcmcVis))
			{
LDisposeErr:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="8D6DC80530CD43DC54E43197A45D995B">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCreateSchemeGallery() in oartHost.cpp allocates memory on line 2421 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartHost.cpp</FileName>
<FilePath>dev/word/client/desktop/oartHost.cpp</FilePath>
<LineStart>2421</LineStart>
<Snippet>			if (m_pfsgc == pNil)
				{
				m_pfsgc = CreateWordFontSchemeGalleryClient(m_psaui.GetRaw());
#ifdef MEMMARKING
				m_dbgfsgc.Set(*m_pfsgc);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="2CAC01C5818485D76F73753DAC3EFF70">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestDoubleStrikeout() in TestCharacterFormat.cpp allocates memory on line 557 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestCharacterFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestCharacterFormat.cpp</FilePath>
<LineStart>557</LineStart>
<Snippet>	try
		{
		return new CharacterFormatClass(&amp;test, fciDStrikeout, L&quot;TestDoubleStrikeout&quot;);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="CF66E88626ABD6E6A6B765CABBDFE542">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ChangeAllConfirmDlg() in chgall.cpp allocates memory on line 1958 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>chgall.cpp</FileName>
<FilePath>dev/word/client/desktop/chgall.cpp</FilePath>
<LineStart>1958</LineStart>
<Snippet>		return cmdError;

	pbnbfeh = ChgAllConfirmCBFEH::Create(pcmb);

	if (!pbnbfeh)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="B4305B1A97B43E55546A93BEEB1B509A">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCreateSchemeGallery() in oartHost.cpp allocates memory on line 2454 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartHost.cpp</FileName>
<FilePath>dev/word/client/desktop/oartHost.cpp</FilePath>
<LineStart>2454</LineStart>
<Snippet>			if (m_ptgc == pNil)
				{
				m_ptgc = CreateWordThemeGalleryClient(m_psaui.GetRaw());
#ifdef MEMMARKING
				m_dbgtgc.Set(*m_ptgc);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="B5C2A9F2900189FC60C74175DC0DD9C1">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestLoadSmartTags() in TestSmartTags.cpp allocates memory on line 157 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestSmartTags.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestSmartTags.cpp</FilePath>
<LineStart>157</LineStart>
<Snippet>
	// Reopen the doc
	ptd = test.PtdLoad(xszFileName);
	test.FailIf(ptd == pNil,
		L&quot;PtdLoad failed after saving and closing&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="3A3B87AA02FC624FF33B1F1A262F3049">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function DragDrop() in navpane.cpp allocates memory on line 10808 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>navpane.cpp</FileName>
<FilePath>dev/word/client/desktop/navpane.cpp</FilePath>
<LineStart>10808</LineStart>
<Snippet>			goto LRet;

		if ((pnvtbdde = new NVTBDDE) != pNil)
			{
			FV fv;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="F31FCBE440FEDC09FC2D10EE5D0C3D63">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaCreateBorders() in obrange.cpp allocates memory on line 16119 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>16262</LineStart>
<Snippet>	if (SUCCEEDED (hr))
		{
		return HrOaCreateGenericObject(punkOuter, piid, ppv, PgodFromObi(obiBorders),
			grfAdviseDefault, pobbs, punkParent);
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="70FD6B2C-AFC9-4CED-88E0-54DBDE577574" iid="A16D026B7B0FD4F53BEC974466101377">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Write() in metrocnvproxy.cpp allocates memory on line 902 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>metrocnvproxy.cpp</FileName>
<FilePath>dev/word/endpoints/converters/wordcnvpxy/metrocnvproxy.cpp</FilePath>
<LineStart>902</LineStart>
<Snippet>
	// Copy pv contents into ghBuff.
	if (GlobalReAlloc(vghBuff, cb, GMEM_MOVEABLE) == hNil)
		return E_FAIL;
	if ((lpsz = (char *)GlobalLock(vghBuff)) == lpNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="CC6FAE51F45AE361873476F8C05360A8">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestPrimaryHeader() in TestHeaderFooter.cpp allocates memory on line 39 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestHeaderFooter.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestHeaderFooter.cpp</FilePath>
<LineStart>39</LineStart>
<Snippet>		return; // FBegin should complain to the logs if it fails.
	
	ptd = test.PtdCreateEmptyVisible();
	if (ptd == pNil)
		return; // PtdCreateEmptyVisible should complain to the logs if it fails</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="FD642E708522052767FC1EFEAACE6E09">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FireSelectionChangedToOsfControls() in osfhost.cpp allocates memory on line 1664 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>osfhost.cpp</FileName>
<FilePath>dev/word/client/desktop/osfhost.cpp</FilePath>
<LineStart>1670</LineStart>
<Snippet>				pohed-&gt;SetDataArray(sawEvent.PsaDetach());
				s_spwohSingleton-&gt;FireEvent(pohed);
				SafeRelease(pohed);

#ifdef DEBUG</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="9A89F1912191BCD45C8C7217EF9E2FAB">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FInsertUIHostE2o() in ReadingPaneDocumentUIHostE2o.cpp allocates memory on line 611 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ReadingPaneDocumentUIHostE2o.cpp</FileName>
<FilePath>dev/word/client/shared/app/ReadingPaneDocumentUIHostE2o.cpp</FilePath>
<LineStart>611</LineStart>
<Snippet>	try
		{
		Ofc::TOwningPtr&lt;Art::IE2o&gt; poE2o(new ReadingPaneDocumentUIHostE2o(pdod-&gt;parth-&gt;PwdcGet(), objhParent));
		SIZE sz = { LwMultDivR(dxdip, czmInch, cdipInch), LwMultDivR(dydip, czmInch, cdipInch) };
		PSIARTA psiarta = PsiartaCreateAnchorForE2o(wrmInline, fFalse /*fFindDhgt*/, pdod,</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="98EAAF4A4F23EC5CBA991A0754466FE0">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CreateWordThemeApplyCommand() in schmpick.cpp allocates memory on line 677 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>schmpick.cpp</FileName>
<FilePath>dev/word/client/desktop/schmpick.cpp</FilePath>
<LineStart>677</LineStart>
<Snippet>	try
		{
		return new TSchemeGalleryApplyCommand&lt; Art::OSSTheme &gt;( infoCommand );
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="076CF198C6C013BB617EB4A2F33495A4">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FserrAddAcetateLrg() in acetate.cpp allocates memory on line 848 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>acetate.cpp</FileName>
<FilePath>dev/word/client/desktop/acetate.cpp</FilePath>
<LineStart>848</LineStart>
<Snippet>	DOD *pdod = pca-&gt;pdod;

	if ((pacex = new ACEX) == pNil)
		return fserrOutOfMemory;
	pacex-&gt;lTag = pabdHead-&gt;lTagAcetate;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="70FD6B2C-AFC9-4CED-88E0-54DBDE577574" iid="2BE72EA4BC6776482ADD72269EF66A9B">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PchBltHxSz() in lynchtmlconvproxy.cpp allocates memory on line 357 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>lynchtmlconvproxy.cpp</FileName>
<FilePath>dev/word/endpoints/converters/lyncconv/proxy/lynchtmlconvproxy.cpp</FilePath>
<LineStart>357</LineStart>
<Snippet>
	int cch = CchSz(sz) + cchExtraSz;
	if (GlobalReAlloc(ghsz, cch, GMEM_MOVEABLE) == hNil)
		return;
	if ((lpsz = (char FAR *)GlobalLock(ghsz)) == NULL)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="6B3B112C949C4681840463E67E6F3DD6">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FireContentControlEventToOsf() in osfhost.cpp allocates memory on line 2032 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>osfhost.cpp</FileName>
<FilePath>dev/word/client/desktop/osfhost.cpp</FilePath>
<LineStart>2038</LineStart>
<Snippet>		pohed-&gt;SetDataArray(sawEvent.PsaGetSubArray(0/*index*/));
		sphim-&gt;FireEvent(pohed);
		SafeRelease(pohed);

#ifdef DEBUG</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="1F0639AA66B1F3D981B867DEB63F3096">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PistmlogWrapPistmForLogging() in istreamlog.cpp allocates memory on line 190 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>istreamlog.cpp</FileName>
<FilePath>dev/word/core/istreamlog.cpp</FilePath>
<LineStart>195</LineStart>
<Snippet>		goto LError;

	hr = pisw-&gt;QueryInterface(__uuidof(IStreamLog), (LPVOID*)&amp;pistmlWrap);
	AssertTag(SUCCEEDED(hr), 0x002c76c8 /* tag_alh1i */);
	if (FAILED(hr)) </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="ADEDB2E56399A7F59D1225524131AC91">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCreateSchemeGallery() in oartHost.cpp allocates memory on line 2476 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartHost.cpp</FileName>
<FilePath>dev/word/client/desktop/oartHost.cpp</FilePath>
<LineStart>2476</LineStart>
<Snippet>			if (m_pcnfsc == pNil)
				{
				m_pcnfsc = CreateSchemeExecuteActionClientBase();
#ifdef MEMMARKING
				m_dbgcnfsc.Set(*m_pcnfsc);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="185A5686E646A905A592001D527365C5">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrGetBackColor() in obeffects.cpp allocates memory on line 4297 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obeffects.cpp</FileName>
<FilePath>dev/word/client/desktop/obeffects.cpp</FilePath>
<LineStart>4302</LineStart>
<Snippet>	pca = m_pcaf-&gt;GetPca();
	ptfbc-&gt;SetPca(pca-&gt;pdod, pca-&gt;cpFirst, pca-&gt;cpLim);
	return HrOaCreateGenericObject(
				pNil, *RefiidFromObi(obiColorFormat), (void **)pidcf, PgodFromObi(obiColorFormat),
					grfAdviseAll, (OMOAC*)ptfbc, OMB::m_pidActive);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="92C241B103F8C4927E3EECB9B2D74FC6">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrSetup() in olkedit.cpp allocates memory on line 1301 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>olkedit.cpp</FileName>
<FilePath>dev/word/client/desktop/olkedit.cpp</FilePath>
<LineStart>1301</LineStart>
<Snippet>	// run.  We'll switch to web view if necessary after we've loaded the
	// content (Office 12 bug 208731)
	pmwd = MWD::PmwdCreateCore(pdod, wkDoc, pNil /*psels*/, pNil /*prcMw*/, fcmcForceSDI | fcmcNoInheritView, pNil /*pioldocBase*/, pNil /*pmfsMatch*/, hwndParent, pNil /*pfawcpapp*/ DEBUGPARAMS_TOP);
	if (pmwd == pmwdNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="A1B60BED0D8716235F20F1B70429AA15">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FWriteOtOfficeTextElement() in otout.cpp allocates memory on line 639 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>otout.cpp</FileName>
<FilePath>dev/word/core/otout.cpp</FilePath>
<LineStart>639</LineStart>
<Snippet>
	// add a placeholder record for tracked-changes
	OTORMMYXR *potormmyxr = new OTORMMYXR(pxot-&gt;pmot);
	if (potormmyxr == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="2CECF74D3786E782056571C20F5AD035">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrScriptPlaceOpenType() in rtd2d_cs.cpp allocates memory on line 1683 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>1683</LineStart>
<Snippet>		}

	pfltGlyphAdvance = PtAllocIfNeeded(cGlyphs, RgC(rgfltGlyphAdvance), fFalse /*fAssertOnAlloc*/);
	if (pfltGlyphAdvance == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="C1233B9838320E40C1D7613200CC587A">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CreateMwd() in FastMainCanvasAppImpl.cpp allocates memory on line 103 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>FastMainCanvasAppImpl.cpp</FileName>
<FilePath>dev/word/client/shared/app/FastMainCanvasAppImpl.cpp</FilePath>
<LineStart>103</LineStart>
<Snippet>void FastMainCanvasAppImpl::CreateMwd(Word::FM::FastWwdCreationParamsApp *pfawcpapp, int dxv, int dyv) throw0
{
	PMWD pmwd = PmwdCreateMainViewImm(m_pdod, pfawcpapp, fFalse /* fReplacingDoc */, dxv, dyv);

	if (pmwd == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="402D3DE9CE2D0B57B8312CD882F2226B">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestAlignCenter() in TestParagraphFormat.cpp allocates memory on line 257 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestParagraphFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestParagraphFormat.cpp</FilePath>
<LineStart>257</LineStart>
<Snippet>	try
		{
		return new CenterParaTestClass(&amp;test, fciCenterPara);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="D2802EA82902383E9CA8DB5F24BAAE90">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FGetE2oConvertInfo() in oartodf.cpp allocates memory on line 2523 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartodf.cpp</FileName>
<FilePath>dev/word/core/oartodf.cpp</FilePath>
<LineStart>2523</LineStart>
<Snippet>			{
			Ofc::TReferringPtr&lt;const WordDr::WordGroupE2o&gt; prWordGroupE2o(prE2o.down_cast&lt;const WordDr::WordGroupE2o&gt;());
			poConvertInfo = new Art::GroupDrawingElementOdfE2oConvertInfo(prWordGroupE2o-&gt;GetGroupDrawingElement());
			return true;
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="0A17261AC64B14FA8D45DD8174A71831">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestAddSpaceBelow() in TestParagraphFormat.cpp allocates memory on line 615 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestParagraphFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestParagraphFormat.cpp</FilePath>
<LineStart>615</LineStart>
<Snippet>	try
		{
		return new AddSpaceBelowParaTestClass(&amp;test, fciOpenParaBelow);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="44451DD475BC790078D8870345E41F29">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestVisibleDocument() in TaskLibDesktop.cpp allocates memory on line 1268 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>1268</LineStart>
<Snippet>	// TEST: Verify that asking for the same document twice through PtdLoad will
	// fail the second time
	ptd = test.PtdCreateEmptyVisible();
	if (ptd == pNil)
		goto _LEnd;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E05D814FAB883C5EB651A9BA4801BA0E">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CreateSaveAsSpecifiedType() in TestOpenSave.cpp allocates memory on line 43 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestOpenSave.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestOpenSave.cpp</FilePath>
<LineStart>43</LineStart>
<Snippet>			return; 
	InProcTaskLib::TestDoc *ptd;
	ptd = test.PtdCreateEmptyVisible();
	if (ptd == pNil)
		return; // ptdCreateEmptyVisible should complain to the logs if it fails.</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="44451DD475BC790078D8870345E41F27">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestVisibleDocument() in TaskLibDesktop.cpp allocates memory on line 1215 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>1215</LineStart>
<Snippet>	// TEST: verify that we can do an event for which FMntrEvalReturn does not return
	// fTrue but it does set vrf.fAfmtRemovedBulletsNumbering
	ptd = test.PtdCreateEmptyVisible();
	if (ptd == pNil)
		goto _LEnd;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="F36F12421BC2C97220E2361B7355E2FF">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestTargetElements() in TestInputStack.cpp allocates memory on line 457 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestInputStack.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestInputStack.cpp</FilePath>
<LineStart>457</LineStart>
<Snippet>	try
		{
		return new TargetElementsTestClass(&amp;test);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="70FD6B2C-AFC9-4CED-88E0-54DBDE577574" iid="0B23E9858FA5A474A0D3737CE4E5EE13">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PstmUnicodeFromEncPstm() in enctext.cpp allocates memory on line 4046 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>enctext.cpp</FileName>
<FilePath>dev/word/client/desktop/enctext.cpp</FilePath>
<LineStart>4046</LineStart>
<Snippet>	if (cpg == CP_UNICODELITTLE)
		{
		hg = WinGlobAlloc(GMEM_FIXED, stat.cbSize.LowPart);
		}
	else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="8E14382A8EC49D20C651346ACF697C1A">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrStartArtoXmlElement() in oartxml.cpp allocates memory on line 229 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartxml.cpp</FileName>
<FilePath>dev/word/core/oartxml.cpp</FilePath>
<LineStart>229</LineStart>
<Snippet>		// suppressed isn't all on one line...
		OACR_WARNING_SUPPRESS(NEW_ON_NOHEAP, &quot;Art::E2oReaderParams&quot;);
		Ofc::TOwningPtr&lt;WordDr::WordE2oReaderParams&gt; poReaderParams(new WordDr::WordE2oReaderParams(*pxin-&gt;pMetroReader, pdod-&gt;parth-&gt;PrdcGet(), pxin-&gt;xins.piprt != pNil ? *pxin-&gt;xins.piprt : *pmipMain-&gt;piprt, pdod-&gt;parth-&gt;GetBlipLoadManager(), loadContext));

		AssertTag(poReaderParams != pNil, ASSERTTAG('2w1p'));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="15CA3CA5D207DF48308ABF4B49A52136">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdNewWnd() in cmdwnd.cpp allocates memory on line 3005 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdwnd.cpp</FileName>
<FilePath>dev/word/client/desktop/cmdwnd.cpp</FilePath>
<LineStart>3005</LineStart>
<Snippet>
	fRecordMove = fRecordSize = fFalse;
	if (!FCreateMwd(PdodMain2(psel-&gt;ca.pdod), wkDoc, psel, pNil, fcmcSaveSel | fcmcVis))
		{
		if (vmerr.FMemFail())</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="57F76984B9F3BFC12C2A648EA78A6A8F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOamDocumentGetSmartDoc() in obdoc.cpp allocates memory on line 26681 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obdoc.cpp</FileName>
<FilePath>dev/word/client/desktop/obdoc.cpp</FilePath>
<LineStart>26681</LineStart>
<Snippet>			{
			// create the word smart doc private data.
			WSDPD* pwsdpd = new WSDPD();
			if (pwsdpd == pNil)
				{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="B92DCB16C957BDA586D8638C8899E0B0">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CreateDataSourceFromTcid() in outspace.cpp allocates memory on line 1904 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>outspace.cpp</FileName>
<FilePath>dev/word/client/desktop/outspace.cpp</FilePath>
<LineStart>1904</LineStart>
<Snippet>	case msotcidSlabGenericReadOnly:
		{
		ROWSDS *prowsds = new ROWSDS;
		if (prowsds != pNil)
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="F14FD0F5FC09F72119EB0DFF8C30EDA4">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestUndoRedoLeftAlignment() in TestFormatPara.cpp allocates memory on line 344 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestFormatPara.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestFormatPara.cpp</FilePath>
<LineStart>344</LineStart>
<Snippet>	try
		{
		return new FormatParagraphClass(&amp;test, jcLeft);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="FE8AFFB608A814A927858DA87E2BA047">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestGRFCommandParsing() in WordGRF.cpp allocates memory on line 1186 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>WordGRF.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/WordGRF.cpp</FilePath>
<LineStart>1189</LineStart>
<Snippet>	test.FailIf(pHandler != pNil,
		L&quot;verifying that the parse failed&quot;);
	SafeRelease(pHandler); // just in case

	// TEST: a well formed element that is not inProcTest fails</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="C2FCFA8013A2104D4AD3E5F185834DBD">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function OnReadingPaneViewUIReady() in FastReadingPaneViewAppImpl.cpp allocates memory on line 58 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>FastReadingPaneViewAppImpl.cpp</FileName>
<FilePath>dev/word/client/fastmodel/FastReadingPaneViewAppImpl.cpp</FilePath>
<LineStart>58</LineStart>
<Snippet>
	if (pdod != pNil)
		pmwd = PmwdCreateMainViewImm(pdod, pfawcpapp, fFalse /*fReplacingDoc*/, dxdip, dydip);

	if (pmwd != pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="3C65666DC00FCD4E25DB7A52C5D9A99A">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestSpellingGrammarBvt() in TestSpellingGrammar.cpp allocates memory on line 41 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestSpellingGrammar.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestSpellingGrammar.cpp</FilePath>
<LineStart>41</LineStart>
<Snippet>		return; // FBegin should complain to the logs if it fails.
	
	ptd = test.PtdCreateEmptyVisible();
	if (ptd == pNil)
		return; // PtdCreateEmptyVisible should complain to the logs if it fails</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="B9B0459AC11A0EE22A7AA49B775F44F7">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function AWTS() in e2osynccore.cpp allocates memory on line 299 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>e2osynccore.cpp</FileName>
<FilePath>dev/word/core/e2osynccore.cpp</FilePath>
<LineStart>299</LineStart>
<Snippet>{
	try {
		POEAM poeam(new EAM);
		m_poeam.Transfer(poeam);
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="605A25DDED100FAF9381ED3AF550D4EF">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdChangeAllTNY() in chgall.cpp allocates memory on line 2086 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>chgall.cpp</FileName>
<FilePath>dev/word/client/desktop/chgall.cpp</FilePath>
<LineStart>2086</LineStart>
<Snippet>		MsoSqmIncrementOne(fApply ? DATAID_WORD_HORIZONTALINVERTICAL_APPLYALL : DATAID_WORD_HORIZONTALINVERTICAL_REMOVEALL);

		if (pNil == (pChgAllTNY = new ChgAllTNY()))
			return cmdError;
		pChgAllTNY-&gt;FInit(fApply, pcmb, pcefels);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="8946326244FB07C597A927401051CF6C">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Initialize() in ole2srvr.cpp allocates memory on line 5527 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ole2srvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ole2srvr.cpp</FilePath>
<LineStart>5527</LineStart>
<Snippet>	if (!FOsrcHostedByWord())
		grfcmc |= fcmcNoInheritView;
	pmwd = MWD::PmwdCreateCore(pdod, wkDoc, pNil /*psels*/, pNil /*prcMw*/, grfcmc, pNil /*pioldocBase*/, pNil /*pmfsMatch*/, hwndParent, pNil /*pfawcpapp */ DEBUGPARAMS_TOP);
	if (pmwd == pmwdNil || pmwd-&gt;HwwdActive() == hwwdNil)
		FailHrGoto(E_FAIL, _LRet);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="D571035F0E3788B4053BC9E46099E4F8">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FPopulateBBCheckboxDataSource() in sdtsupp.cpp allocates memory on line 6764 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>sdtsupp.cpp</FileName>
<FilePath>dev/word/client/desktop/sdtsupp.cpp</FilePath>
<LineStart>6764</LineStart>
<Snippet>	spds.SetUncheckedFont(lfw.lfFaceName);

	pBBCheckboxPCL = new BBCheckboxPCL;

	if (pBBCheckboxPCL == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="7AD7762BDF13ECAC66013E1B751712C6">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FSpawnCoroutine() in corout.cpp allocates memory on line 330 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>corout.cpp</FileName>
<FilePath>dev/word/client/shared/corout.cpp</FilePath>
<LineStart>330</LineStart>
<Snippet>		}

	Wal::ICoroutine *picor = Wal::PicorCreateSuspended(CoroutineThread, idc, pvParam, &amp;vprocess.rgid[idc]);
	AssertTag(picor != pNil, 0x0041e383 /* tag_aq4od */);
	if (picor == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E6F431F2F9EF4175F2FD495AE11C68D6">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestDesktopTest() in TaskLibDesktop.cpp allocates memory on line 710 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>710</LineStart>
<Snippet>	testParent.FailIf(!ptest-&gt;FBegin(L&quot;TestDesktopTest&quot;),
		L&quot;DesktopTest::FBegin returned failure&quot;);
	ptd = ptest-&gt;PtdCreateEmptyVisible();
	testParent.FailIf(ptd == pNil,
		L&quot;PtdCreateEmptyVisible failed&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="D6CD60512C6CD162AC0380B84AC2A94E">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestInsertFileNameField() in TestFields.cpp allocates memory on line 158 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestFields.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestFields.cpp</FilePath>
<LineStart>158</LineStart>
<Snippet>	try
		{
		return new TestInsertField(&amp;test, fltFileName, L&quot;TestInsertFileNameField&quot;, L&quot;FILENAME&quot;);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="181F53822157855C4DB3084AD04570B2">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function LaunchSpecialEffectsDialog() in oartHost.cpp allocates memory on line 5810 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartHost.cpp</FileName>
<FilePath>dev/word/client/desktop/oartHost.cpp</FilePath>
<LineStart>5810</LineStart>
<Snippet>	try
		{
		Ofc::TOwningPtr&lt;Art::IFormatObjectUISite&gt; poTextUISite(new AFOUIS(fTargetsText));
		PWAUI pwaui = AUIH::GetOArtUIHost().Pwaui();
		Ofc::TReferringPtr&lt;Art::UserInterface&gt;(pwaui)-&gt;GetCurrentView(true/*fEnsure*/);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="2549EE72A901817F11C9DE238D6DFE49">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestUndoRedoDistributeAlignment() in TestFormatPara.cpp allocates memory on line 325 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestFormatPara.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestFormatPara.cpp</FilePath>
<LineStart>325</LineStart>
<Snippet>	try
		{
		return new FormatParagraphClass(&amp;test, jcDistribute);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="B425C7E39B72F8F28DD29D7EF8218FB3">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrHitHighlight() in olkedit.cpp allocates memory on line 5051 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>olkedit.cpp</FileName>
<FilePath>dev/word/client/desktop/olkedit.cpp</FilePath>
<LineStart>5051</LineStart>
<Snippet>	if (pdod-&gt;pud-&gt;fBkgndOpenEmailActive)
		{
		HHOPH *phhoph = new HHOPH(this, wszFindStr, cvTxt, cvBkg, grf);

		if (phhoph == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="DF8CFE5A0A0ECA05E5D55A47BB9DD92F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function AddLineLayoutCpForDebugOverlay() in pagevw.cpp allocates memory on line 1705 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pagevw.cpp</FileName>
<FilePath>dev/word/client/shared/pagevw.cpp</FilePath>
<LineStart>1705</LineStart>
<Snippet>	if (paxcllddo == pNil)
		{
		paxcllddo = new TAXC&lt;CLineLayoutDescDebugOverlay&gt;();
		if (paxcllddo == pNil || !paxcllddo-&gt;FInit(5, cpMax, fTrue /*fMult*/))
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="2B3B1C10C1B0DE4109475D394E0BFEB8">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function LserrGetZoneProperties() in lshelpmath.cpp allocates memory on line 5085 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>lshelpmath.cpp</FileName>
<FilePath>dev/word/core/lshelpmath.cpp</FilePath>
<LineStart>5085</LineStart>
<Snippet>#pragma push_macro(&quot;new&quot;)
#undef new
	if ((pMathFont = new CMathFont(plsrun, lstflow)) == pNil)
#pragma pop_macro(&quot;new&quot;)
		return lserrOutOfMemory;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="6BD57CF6B440B7369105742030F34BE1">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function UpdateXmlTree() in xmlmappingpane.cpp allocates memory on line 1442 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmlmappingpane.cpp</FileName>
<FilePath>dev/word/client/desktop/xmlmappingpane.cpp</FilePath>
<LineStart>1442</LineStart>
<Snippet>					if (pimxslNextSibling != pNil)
						{
						XmlNodeWithFlexDS *pxnfSibling = new XmlNodeWithFlexDS();
						if (pxnfSibling == pNil)
							{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="7266CD46BE64AA6DD81FCAB55BFB5D12">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function OnDragStart() in teDispatcher.cpp allocates memory on line 638 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>teDispatcher.cpp</FileName>
<FilePath>dev/word/client/shared/teDispatcher.cpp</FilePath>
<LineStart>638</LineStart>
<Snippet>
	CTargetElement *pte = pNil;
	CHitTestResult::CIterator *piter = m_phtr-&gt;PiterCreate();

	SetupContext(intres, pfHandled);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="C7AC077B98C94109A8D237644AE69646">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _FFillAxawtpFromPca() in e2otext.cpp allocates memory on line 1525 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>e2otext.cpp</FileName>
<FilePath>dev/word/client/shared/e2otext.cpp</FilePath>
<LineStart>1533</LineStart>
<Snippet>
		AWTP awtp;
		if (!_FInitAwtpFromRgxchAwtm(&amp;awtp, vpxchFetch, vccpFetch, pawtm))
			{
			AssertTag(fFalse, 0x0039b65d /* tag_ao1z3 */);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="547A641621AD3185C14142D2148D6C14">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOamViewGetRevisionsFilter() in orf.cpp allocates memory on line 32 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>orf.cpp</FileName>
<FilePath>dev/word/client/desktop/orf.cpp</FilePath>
<LineStart>37</LineStart>
<Snippet>		return HrFromRerr(rerrOutOfMemory);

	hr = HrOaCreateGenericObjectObi(obiRevisionsFilter, pNil, *RefiidFromObi(obiRevisionsFilter),
		(void **)ppidrf, PgodFromObi(obiRevisionsFilter), grfAdviseDefault, porf, pidv);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E9289AD0584D25069FAE7E19DFE1F94D">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function RgnkCombineRgn() in rtimrgn.cpp allocates memory on line 232 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtimrgn.cpp</FileName>
<FilePath>dev/word/core/rtimrgn.cpp</FilePath>
<LineStart>232</LineStart>
<Snippet>				else if (pgfxrgnSrc1 != m_pgfxrgn &amp;&amp; pgfxrgnSrc2 == m_pgfxrgn)
					{
					Gfx::Region *pgfxrgnTemp = new Gfx::Region(*pgfxrgnSrc1);
					
					if (pgfxrgnTemp == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="8C47C719ADA5E2F9D9173A5F6633D8BC">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PstgtbForFormatCachingClassAlloc() in TestFormatCaching.cpp allocates memory on line 338 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestFormatCaching.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestFormatCaching.cpp</FilePath>
<LineStart>338</LineStart>
<Snippet>	try
		{
		return new FormatCachingClass(&amp;test);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="4CD8EEBDEC1B4DB158A8B72F4C971161">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PortrgnFromGfxRegion() in rtrgn.cpp allocates memory on line 47 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtrgn.cpp</FileName>
<FilePath>dev/word/client/fastmodel/rtrgn.cpp</FilePath>
<LineStart>47</LineStart>
<Snippet>	try
		{
		Gfx::Region *pgfxrgnCopy = new Gfx::Region();
		*pgfxrgnCopy = *pgfxrgn;
	</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="8E3045910894E77B53E618BC03A5C087">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function RequestUpdate() in oartHost.cpp allocates memory on line 1873 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartHost.cpp</FileName>
<FilePath>dev/word/client/desktop/oartHost.cpp</FilePath>
<LineStart>1873</LineStart>
<Snippet>		if (CPageDirtyArea::FScreenDirty(hwwd, fFalse))
			{
			ChainFci(fciAirSpaceNotification, reinterpret_cast&lt;WPARAM&gt;(new CDelayedWwdUpdate(hwwd)));
			}
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="59BB3DFBFC1AB86650FA556091D57CB6">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function fatalError() in myx.cpp allocates memory on line 2609 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>myx.cpp</FileName>
<FilePath>dev/word/core/myx.cpp</FilePath>
<LineStart>2609</LineStart>
<Snippet>STDMETHODIMP MYX::fatalError(ISAXLocator *pisl, const XCHAR *pxchErrorMessage, HRESULT hrErrorCode) throw0
{	
	MYXERFE *pmyxr = MYXERFE::PmyxrCreate(pisl, pxchErrorMessage, hrErrorCode);
	if (pmyxr == pNil)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="AC18CED39B43A0B1795B3EB8091109A2">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PistgWrapIStorage() in istgwrap.cpp allocates memory on line 80 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>istgwrap.cpp</FileName>
<FilePath>dev/word/core/istgwrap.cpp</FilePath>
<LineStart>85</LineStart>
<Snippet>		goto LError;

	hr = pisw-&gt;QueryInterface(IID_IStorage, (LPVOID*)&amp;pistgWrap);
	AssertTag(SUCCEEDED(hr), 0x002c7691 /* tag_alh0r */);
	if (FAILED(hr))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="7B9FEC79E9439CB77BE0122820989239">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestEditingInViewsBVT() in TestViews.cpp allocates memory on line 131 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestViews.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestViews.cpp</FilePath>
<LineStart>131</LineStart>
<Snippet>	try
	{
		return new TestViewsClass(&amp;test);
	}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="41F9685B185036CEF3086A1A97C205B4">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function SetVerifyFontProps() in TestFont.cpp allocates memory on line 163 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestFont.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestFont.cpp</FilePath>
<LineStart>163</LineStart>
<Snippet>			return; 
	InProcTaskLib::TestDoc *ptd;
	ptd = test.PtdCreateEmptyVisible();
	if (ptd == pNil)
		return; </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="CAA7B33CAFF1AA1F9665F95467A6F7C8">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function InsertParts() in ReadingPaneDocumentIm.cpp allocates memory on line 88 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ReadingPaneDocumentIm.cpp</FileName>
<FilePath>dev/word/endpoints/metro/dll/ui/ReadingPaneDocumentIm.cpp</FilePath>
<LineStart>91</LineStart>
<Snippet>			if (prpdocp == pNil)
				continue;
			if (!prpdocp-&gt;FInit(&amp;rgdocpd[i]))
				continue;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="52202C0BCDD8192447D9D4E218141F9E">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function AWTS() in e2osynccore.cpp allocates memory on line 299 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>e2osynccore.cpp</FileName>
<FilePath>dev/word/core/e2osynccore.cpp</FilePath>
<LineStart>299</LineStart>
<Snippet>{
	try {
		POEAM poeam(new EAM);
		m_poeam.Transfer(poeam);
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="0DB2A6919107DEB821AADDF53DCDC7CC">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function SaveBibEditColsInCache() in bibliorg.cpp allocates memory on line 9481 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>bibliorg.cpp</FileName>
<FilePath>dev/word/client/desktop/bibliorg.cpp</FilePath>
<LineStart>9481</LineStart>
<Snippet>			cchTmc = CchGetTmc(rgTmcCols[iRow]);
			cchTmc = max(cchTmc + cxchExtraXsz, cxchStupidSDMMinimumRequirement + 1);
			xszTmc = new XCHAR[cchTmc + cxchExtraXsz];
			if (xszTmc == pNil)
				break;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="3C90F07C0FD764266242E22A88051B35">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrCreateCoAuthor() in obcoauth.cpp allocates memory on line 335 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obcoauth.cpp</FileName>
<FilePath>dev/word/client/desktop/obcoauth.cpp</FilePath>
<LineStart>335</LineStart>
<Snippet>	*ppid = pNil;

	OCAI *pocai = fCommentCoAuthor ? new OCCAI : new OCAI;
	if (pocai == pNil || !pocai-&gt;FInit(calo))
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="B4A9DC0E14408B612929490D7B470EDB">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PmwdCreateCore() in mwd.cpp allocates memory on line 61 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>mwd.cpp</FileName>
<FilePath>dev/word/client/fastmodel/mwd.cpp</FilePath>
<LineStart>61</LineStart>
<Snippet>
	// If we are creating a normal window, use the defaults
	pmwd = MWD::Create(fFalse /*fSystem*/);
	if (pmwd == lpNil || vmerr.FMemFail())
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="D1F4F77147ADF234B7956A3553C65CC2">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCleanLocalSubTree() in sdtsuppcore.cpp allocates memory on line 501 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>sdtsuppcore.cpp</FileName>
<FilePath>dev/word/core/sdtsuppcore.cpp</FilePath>
<LineStart>542</LineStart>
<Snippet>
	// circular reference means we have to explicitly release some of the members...
	SafeRelease(pnc);

	*ppDomDest = pDom;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="A32B746EBA508F986D42DAE37E9F11C0">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestLoadEmbedFonts() in TestEmbedFont.cpp allocates memory on line 98 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestEmbedFont.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestEmbedFont.cpp</FilePath>
<LineStart>98</LineStart>
<Snippet>	try
		{
		return new EmbedFontClass(&amp;test);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="939C060E2F17A57C213A147E7EF618CA">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrCreateTextFill() in obrange.cpp allocates memory on line 28696 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>28700</LineStart>
<Snippet>		return E_FAIL;
	
	return HrOaCreateGenericObject(pNil, *RefiidFromObi(obiFillFormat), (void **)ppid, 
		PgodFromObi(obiFillFormat), grfAdviseAll, ptxtfill, punkParent);
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="5CEF7D869337FE6B84CB719E803D08BB">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestAllCaps() in TestCharacterFormat.cpp allocates memory on line 576 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestCharacterFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestCharacterFormat.cpp</FilePath>
<LineStart>576</LineStart>
<Snippet>	try
		{
		return new CharacterFormatClass(&amp;test, fciAllCaps, L&quot;TestAllCaps&quot;);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="6674CA9AA3FE879A22E0B314A23B7B6F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrHlinkLoadHTMLFileInWord() in hyplink.cpp allocates memory on line 1225 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>hyplink.cpp</FileName>
<FilePath>dev/word/client/desktop/hyplink.cpp</FilePath>
<LineStart>1225</LineStart>
<Snippet>				hr = S_OK;
				}
			else if (MWD::PmwdCreateCore(pdod, wkDoc, pNil, pNil, fcmcVis | fcmcNoStagger, 
						pdod != pdodNil &amp;&amp; pdod-&gt;pud-&gt;pioldoc != pNil ? 
							pdod-&gt;pud-&gt;pioldoc : </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="038F026C7A3865B707B7D6DA67CD4056">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrCreateWMCRHI() in olkedit.cpp allocates memory on line 1183 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>olkedit.cpp</FileName>
<FilePath>dev/word/client/desktop/olkedit.cpp</FilePath>
<LineStart>1187</LineStart>
<Snippet>		return E_OUTOFMEMORY;

	return pwmcrhi-&gt;QueryInterface(IID_IMsoReducedHTMLImport, (void **)ppirhi);
	// note: no need to release pwmcrhi because it's based on ISimpleUnknown
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="7198454C149E68E5322880124443728B">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdSendFrameDoc() in wordmail.cpp allocates memory on line 2445 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>wordmail.cpp</FileName>
<FilePath>dev/word/client/desktop/wordmail.cpp</FilePath>
<LineStart>2445</LineStart>
<Snippet>	AssertTag(pdod != pdodNil, ASSERTTAG('emcu'));

	if (!FCreateMwd(PdodMain(pdod), wkDoc, psels, pNil, fcmcSaveSel | fcmcVis))
		return cmdError;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="B8AA0E653FE1119C704D5B7BE9559C79">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrInit() in corout.cpp allocates memory on line 107 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>corout.cpp</FileName>
<FilePath>dev/word/wal/win/win32/corout.cpp</FilePath>
<LineStart>107</LineStart>
<Snippet>HRESULT CCoroutineWin32::HrInit(void *pvParam, DWORD *pidThread) throw0
{
	Wal::CRTP *pcrtp = new Wal::CRTP;
	if (pcrtp == pNil)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="354542868511EC1C4405DACAE9A9903C">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FEnsureDrLyr() in layer.cpp allocates memory on line 11571 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>layer.cpp</FileName>
<FilePath>dev/word/client/shared/layer.cpp</FilePath>
<LineStart>11580</LineStart>
<Snippet>
				if (   ppelyrNew == pNil
					|| !ppelyrNew-&gt;FInit())
					{
					SafeDelete(ppelyrNew);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="59836E33779C3B8F2DA102D439C2C76B">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOurScriptTextOut() in rtd2d_cs.cpp allocates memory on line 1854 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>1854</LineStart>
<Snippet>		}

	pfltGlyphAdvance = PtAllocIfNeeded(cGlyphs, RgC(rgfltGlyphAdvance), fFalse /*fAssertOnAlloc*/);
	if (pfltGlyphAdvance == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="5070878EA7C29298E6365E1D4B492A92">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestTextHyperlink() in TestHyperlink.cpp allocates memory on line 96 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestHyperlink.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestHyperlink.cpp</FilePath>
<LineStart>96</LineStart>
<Snippet>			return; 
	InProcTaskLib::TestDoc *ptd;
	ptd = test.PtdCreateEmptyVisible();
	if (ptd == pNil)
		return; </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="26D7DD8D6210EB1C6A249FF4D8AA4F9F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestDottedUnderline() in TestCharacterFormat.cpp allocates memory on line 519 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestCharacterFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestCharacterFormat.cpp</FilePath>
<LineStart>519</LineStart>
<Snippet>	try
		{
		return new CharacterFormatClass(&amp;test, fciDottedUnderline, L&quot;TestDottedUnderline&quot;);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="F0C0BE133577599A59A94B48244301BA">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestVisibleDocument() in TaskLibDesktop.cpp allocates memory on line 1259 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>1259</LineStart>
<Snippet>	test.FailIf(!MsoFFileExist(xszFileName),
		L&quot;After closing TestDoc, the file I saved does not exist&quot;);
	ptd = test.PtdLoad(xszFileName);
	if (ptd == pNil)
		goto _LEnd;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E6F431F2F9EF4175F2FD495AE11C68D5">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestDesktopTest() in TaskLibDesktop.cpp allocates memory on line 670 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>670</LineStart>
<Snippet>	testParent.FailIf(hwwdOrig != vhwwdCur,
		L&quot;Test.FBegin moved vhwwdCur&quot;);
	ptd = ptest-&gt;PtdCreateEmptyVisible();
	testParent.FailIf(ptd == pNil,
		L&quot;PtdCreateEmptyVisible failed&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="2CDEA292621CA9885E5DF810B363330F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrCreateXod() in xmlout.cpp allocates memory on line 1879 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmlout.cpp</FileName>
<FilePath>dev/word/core/xmlout.cpp</FilePath>
<LineStart>1879</LineStart>
<Snippet>	XOD *pxod;
	
	if ((pxod = new XOD) == pNil)
		return E_FAIL;
		</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="1F79CF1535A91B07D2450547F8141C5E">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCreateMetroProgress() in metroin.cpp allocates memory on line 192 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>metroin.cpp</FileName>
<FilePath>dev/word/core/metroin.cpp</FilePath>
<LineStart>200</LineStart>
<Snippet>		}
	if (pcmp)
		pcmp-&gt;Release();

	return fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="DDA0C4EE1E9FF77FBFF3302474022EA1">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestFirstSample() in ClientTestSample.cpp allocates memory on line 84 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ClientTestSample.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/ClientTestSample.cpp</FilePath>
<LineStart>84</LineStart>
<Snippet>	try
		{
		return new FirstTestClass(&amp;test);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="A840AEEB9F9A0382AD0E9693B14D28BC">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCreateSchemeGallery() in oartHost.cpp allocates memory on line 2432 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartHost.cpp</FileName>
<FilePath>dev/word/client/desktop/oartHost.cpp</FilePath>
<LineStart>2432</LineStart>
<Snippet>			if (m_pcsgc == pNil)
				{
				m_pcsgc = CreateWordColorSchemeGalleryClient(m_psaui.GetRaw());
#ifdef MEMMARKING
				m_dbgcsgc.Set(*m_pcsgc);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E21B6737D5F41A2C7F5B733C3089A6DF">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _DrawInsertWidget() in wproc.cpp allocates memory on line 6164 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>wproc.cpp</FileName>
<FilePath>dev/word/client/desktop/wproc.cpp</FilePath>
<LineStart>6164</LineStart>
<Snippet>				{
				case tiwkCol:
					AssertDoTag(FCreateDrselTableMarks(tiw.hpr, &amp;tiw.drcw, drselkTableInsertCol, grfdrsel, new TIW(tiw)), 0x0049a588 /* tag_as0wi */);
					break;
				case tiwkRow:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="70FD6B2C-AFC9-4CED-88E0-54DBDE577574" iid="BAEF16724F02D6F16BB9F9EF745CE05A">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ParseShapePropFromRibl() in rtfin.cpp allocates memory on line 10024 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin.cpp</FilePath>
<LineStart>10024</LineStart>
<Snippet>				// Do not assume hex has event bumbers
				cbAlloc = (cchSz + 1) / 2;
				pb = (BYTE *)WinGlobAllocPtr(GPTR, cbAlloc);
				for (iHex = 0, ipb = 0; iHex &lt; cchSz; iHex++)
					{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="530E17AA37037484017214ACDE590FDA">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestAutoFitBehavior() in TestTables.cpp allocates memory on line 425 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestTables.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestTables.cpp</FilePath>
<LineStart>425</LineStart>
<Snippet>	try
		{
		return new AutoFitBehaviorTestClass(&amp;test);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="C74A53BA1623D1CC0C231C6F91F59D8A">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestIncreaseIndent() in TestParagraphFormat.cpp allocates memory on line 394 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestParagraphFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestParagraphFormat.cpp</FilePath>
<LineStart>394</LineStart>
<Snippet>	try
		{
		return new IncreaseIndentParaTestClass(&amp;test, fciNextLstLvl);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="21B8E30E76C7B27C80E2C6F780E41696">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CreateWordFontSchemeGalleryApplyCommand() in schmpick.cpp allocates memory on line 634 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>schmpick.cpp</FileName>
<FilePath>dev/word/client/desktop/schmpick.cpp</FilePath>
<LineStart>634</LineStart>
<Snippet>	try
		{
		return new TSchemeGalleryApplyCommand&lt; Art::FontScheme &gt;( infoCommand );
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="D11A91F017C62F389890806D7120024F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ExecuteStagedTestSet() in TaskLibClient.cpp allocates memory on line 976 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibClient.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TaskLibClient.cpp</FilePath>
<LineStart>976</LineStart>
<Snippet>
	// run the test
	ClientTest *ptestInner = PctAllocateForEndpoint();
	ptestInner-&gt;SetAssertOnFailure(test.FAssertingOnFailure());
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="0C59EB881B8AD81390B501EBCB036B92">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCreateSchemeGallery() in oartHost.cpp allocates memory on line 2487 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartHost.cpp</FileName>
<FilePath>dev/word/client/desktop/oartHost.cpp</FilePath>
<LineStart>2487</LineStart>
<Snippet>			if (m_psctc == pNil)
				{
				m_psctc = CreateSchemeExecuteActionClientBase();
#ifdef MEMMARKING
				m_dbgsctc.Set(*m_psctc);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="9849FA6B890018510074BF320CD8CAB9">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCreateSchemeGallery() in oartHost.cpp allocates memory on line 2465 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartHost.cpp</FileName>
<FilePath>dev/word/client/desktop/oartHost.cpp</FilePath>
<LineStart>2465</LineStart>
<Snippet>			if (m_pcncsc == pNil)
				{
				m_pcncsc = CreateSchemeExecuteActionClientBase();
#ifdef MEMMARKING
				m_dbgcncsc.Set(*m_pcncsc);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="67A60FAF470F1777F2212A502F1071B8">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function NotifyChildHwnd() in layer.cpp allocates memory on line 1647 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>layer.cpp</FileName>
<FilePath>dev/word/client/desktop/layer.cpp</FilePath>
<LineStart>1649</LineStart>
<Snippet>	CHwndLayer *plyr = new CHwndLayer(rcw, ((*hpr)-&gt;plyr == pNil) ? pwwd-&gt;pwrt-&gt;RlyrGet() : (*hpr)-&gt;plyr, hwnd, pNil, fNeverShow, fRelyOnDrUpdate);

	if (plyr == pNil || !plyr-&gt;FInit())
		SafeDelete(plyr);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="3CC72211B909AAD11C1A5604823C7C25">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FHeaderFooterSetupTest() in TestTEHeaderFooter.cpp allocates memory on line 46 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestTEHeaderFooter.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestTEHeaderFooter.cpp</FilePath>
<LineStart>46</LineStart>
<Snippet>	
	InProcTaskLib::TestDoc *ptd;
	ptd = test.PtdCreateEmptyVisible();
	if (ptd == pNil)
		return fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E052BCF1F3CCE566C6A19EE7B932FF1A">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HwndModelessParent() in dlgmodls.cpp allocates memory on line 1023 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlgmodls.cpp</FileName>
<FilePath>dev/word/client/desktop/dlgmodls.cpp</FilePath>
<LineStart>1023</LineStart>
<Snippet>		OffsetRc(&amp;rc, -rc.xpRight, -rc.ypBottom);
		RegisterEh(&amp;eh, fehDirtyToolbars, FEhFalse, pNil);
		bool fCreated = FCreateMwd(vpdodNew, wkVBA, pNil, &amp;rc, fcmcNil);
		UnregEh(&amp;eh);
		if (!fCreated)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="ADD4CF5A189657C4D4B0063A844A0336">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestItalic() in TestCharacterFormat.cpp allocates memory on line 443 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestCharacterFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestCharacterFormat.cpp</FilePath>
<LineStart>443</LineStart>
<Snippet>	try
		{
		return new CharacterFormatClass(&amp;test, fciItalic, L&quot;TestItalic&quot;);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="D0B68DBC2CEF203884E1C7A1C547669A">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function endDocument() in myx.cpp allocates memory on line 2339 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>myx.cpp</FileName>
<FilePath>dev/word/core/myx.cpp</FilePath>
<LineStart>2339</LineStart>
<Snippet>STDMETHODIMP MYX::endDocument() throw0
{
	MYXCRV *pmyxr = MYXCRV::PmyxrCreate(&amp;ISAXContentHandler::endDocument);
	if (pmyxr == pNil)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="8A640B3C1ED8DBDD4FBA4CAB8E316B0B">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function error() in myx.cpp allocates memory on line 2585 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>myx.cpp</FileName>
<FilePath>dev/word/core/myx.cpp</FilePath>
<LineStart>2585</LineStart>
<Snippet>STDMETHODIMP MYX::error(ISAXLocator *pisl, const XCHAR *pxchErrorMessage, HRESULT hrErrorCode) throw0
{
	MYXERE *pmyxr = MYXERE::PmyxrCreate(pisl, pxchErrorMessage, hrErrorCode);
	if (pmyxr == pNil)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="4A859D02A90D573E7CE5278049924026">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdFrameSplit() in frameset.cpp allocates memory on line 3126 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>frameset.cpp</FileName>
<FilePath>dev/word/client/desktop/frameset.cpp</FilePath>
<LineStart>3126</LineStart>
<Snippet>			else
				docFrameset = DocCreateEmptyTitled(xstzEmpty, fdceFramesetDoc, &amp;docDot, pNil, &amp;eid, &amp;fErrPostponed);
			if (docFrameset &amp;&amp; MWD::PmwdCreateCore(docFrameset, wkWeb, pNil, pNil,
							fcmcVis | fcmcFrameset | fcmcNoTitle | fcmcNoStagger, pNil, pNil, hwndNil, pNil /*pfawcpapp*/ DEBUGPARAMS_TOP))
				{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="C6BC172F284CE6277885293280E8D8FF">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestInsertPasteUndoRedoCloseReopenLinkOLE() in TestOLE.cpp allocates memory on line 568 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestOLE.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestOLE.cpp</FilePath>
<LineStart>568</LineStart>
<Snippet>	XszXszAppend(xszFieldChangedCode, L&quot;\&quot; \&quot;\&quot; \\a \\p \\f 0 \x14\x01\x15&quot;, CxchMaxXsz(xszFieldChangedCode));

	ptdNew = test.PtdLoad(xszTestFileName);
	test.FailIf(ptdNew == pNil,
		L&quot;ptdNew should not be nil for reopen the test file&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="317B9E994BA7AD4712D35380EEB56C4F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PfmodClone() in WebScalingFetchModifier.cpp allocates memory on line 49 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>WebScalingFetchModifier.cpp</FileName>
<FilePath>dev/word/client/shared/WebScalingFetchModifier.cpp</FilePath>
<LineStart>49</LineStart>
<Snippet>IFetchModifier *CWebScalingFetchModifier::PfmodClone() throw0
{
	CWebScalingFetchModifier *pfmodClone = new CWebScalingFetchModifier();
	//TODO: This will be revisted when we enable wp endpoint and use this (Bug: 818725)
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E8248A4CBA62BC7337450D752D315D7F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function SetHostNames() in ole2srvr.cpp allocates memory on line 2318 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ole2srvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ole2srvr.cpp</FilePath>
<LineStart>2328</LineStart>
<Snippet>		(*lplpfnm)-&gt;ReleaseFnm();
		**lplpfnm = *lpfnmAlloc; // straight copy ok, here -- won't release *lpfnmAlloc
		FreePv(lpfnmAlloc);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="52C9C3C094A7607CD5A5FF37905A39B7">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function startDTD() in myx.cpp allocates memory on line 2661 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>myx.cpp</FileName>
<FilePath>dev/word/core/myx.cpp</FilePath>
<LineStart>2661</LineStart>
<Snippet>STDMETHODIMP MYX::startDTD(const XCHAR *pxchName, int cchName, const XCHAR *pxchPublicId, int cchPublicId, const XCHAR *pxchSystemId,  int cchSystemId) throw0
{
	MYXLRPXCH3 *pmyxr = MYXLRPXCH3::PmyxrCreate(&amp;ISAXLexicalHandler::startDTD, pxchName, cchName, pxchPublicId, cchPublicId, pxchSystemId, cchSystemId);
	if (pmyxr == pNil)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="9CBD0EA7186D136012FD3139372FCEFD">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CreateDataSourceFromTcid() in outspace.cpp allocates memory on line 1891 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>outspace.cpp</FileName>
<FilePath>dev/word/client/desktop/outspace.cpp</FilePath>
<LineStart>1891</LineStart>
<Snippet>	case msotcidSlabConvertDocument:
		{
		WSDS *pwsds = new WSDS;
		if (pwsds != pNil)
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="17CCF36AAF038080BAF3C9652CF445AA">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrScriptPlaceOpenType() in rtd2d_cs.cpp allocates memory on line 1662 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>1662</LineStart>
<Snippet>		NotReachedReturnTag(E_FAIL, 0x0048c6d2 /* tag_asm1s */);

	pTextProperties = PtAllocIfNeeded(cChars, RgC(rgTextProperties), fFalse /*fAssertOnAlloc*/);
	if (pTextProperties == pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="AA648DA0A6ED89C7AC39E644F1BDFF6D">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestBold() in TestCharacterFormat.cpp allocates memory on line 424 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestCharacterFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestCharacterFormat.cpp</FilePath>
<LineStart>424</LineStart>
<Snippet>	try
		{
		return new CharacterFormatClass(&amp;test, fciBold, L&quot;TestBold&quot;);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E4558BBD72DB7ACC2F5D2306A8B6DA9A">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WriteArtosToByteStream() in oartspblip.h allocates memory on line 108 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartspblip.h</FileName>
<FilePath>C:/office/dev/otools/inc/oart/private/oartspblip.h</FilePath>
<LineStart>122</LineStart>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="3D68C4564A0FC5B1FA32696C9E32CE3E">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function OnWordViewUIReady() in FastWordViewAppImpl.cpp allocates memory on line 55 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>FastWordViewAppImpl.cpp</FileName>
<FilePath>dev/word/client/fastmodel/FastWordViewAppImpl.cpp</FilePath>
<LineStart>55</LineStart>
<Snippet> 	
	if (pdod != nullptr)
		pmwd = PmwdCreateMainViewImm(pdod, pfawcpapp, fFalse /* fReplacingDoc */, dx, dy);

	if (pmwd != nullptr)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="CF41DBF586069716462B107A0AD44D22">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCreateSchemaBuggedList() in docim_imm.cpp allocates memory on line 187 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>docim_imm.cpp</FileName>
<FilePath>dev/word/client/stubs/docim_imm.cpp</FilePath>
<LineStart>187</LineStart>
<Snippet>
	// if we made one successfully, then return it to the caller.
	if ((psbl = new ImSchemaBuggedList()) != pNil)
		{
		*ppsbl = psbl;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E6ECA26707F209128324B6DCBDEDEE35">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrEndElementCore() in myx.cpp allocates memory on line 3042 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>myx.cpp</FileName>
<FilePath>dev/word/core/myx.cpp</FilePath>
<LineStart>3042</LineStart>
<Snippet>	m_axpwmyxe.Delete(i);

	MYXCREE *pmyxr = MYXCREE::PmyxrCreate(pmyxe);
	if (pmyxr == pNil)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="89187858243734FEC65D15A7996B1745">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function InitLoggingForEndpoint() in LoggingUtilities.cpp allocates memory on line 31 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>LoggingUtilities.cpp</FileName>
<FilePath>dev/word/wal/win/win32/LoggingUtilities.cpp</FilePath>
<LineStart>31</LineStart>
<Snippet>{
	// Init Word loggers - the constructors do the work
	IWordLogger *rgpiwl[] = {
		new CWordLoggerEtw(),
		new CWordLoggerUls(),</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="8EDE71576AE466B92AC5EDD3C6373F21">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestAlignJustified() in TestParagraphFormat.cpp allocates memory on line 353 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestParagraphFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestParagraphFormat.cpp</FilePath>
<LineStart>353</LineStart>
<Snippet>	try
		{
		return new JustifyParaTestClass(&amp;test, fciJustifyPara);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="11D98971ECC3DEAB554FD7FCE78E8DEB">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FEmNotifyActionToolbar() in otb.cpp allocates memory on line 1415 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>otb.cpp</FileName>
<FilePath>dev/word/client/desktop/otb.cpp</FilePath>
<LineStart>1415</LineStart>
<Snippet>	case -msotbaSwatchSelectEm:
		AssertTag(pic != pNil, ASSERTTAG('nbna'));
		if (pic != pNil &amp;&amp; (pross = new ROSS) != pNil)
			{
			cid = CidFromPicPpv(pic, pNil, fFalse /*fAllControls*/, icuNil);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E89F8440F147D6A607CD84DF4D960172">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function StagedActionBase() in WordGRF.cpp allocates memory on line 830 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>WordGRF.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/WordGRF.cpp</FilePath>
<LineStart>830</LineStart>
<Snippet>	try
		{
		m_pvecactionstage = new std::vector&lt;PFNACTIONSTAGE&gt;();
		}
	catch(...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="C0EC6E45864EFF1C70402AA53CCA1620">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PrsprmRecomposeSprm() in prm.cpp allocates memory on line 14784 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>prm.cpp</FileName>
<FilePath>dev/word/core/prm.cpp</FilePath>
<LineStart>14784</LineStart>
<Snippet>	AssertTag(FBigSprm(sprm), ASSERTTAG('502d'));

	BRM *pbrm = _PbrmForSprm(sprm);
	if (pbrm == pNil)
		return pNil;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="65865B3572DD9D4854CF1F7E48DAC424">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function LpfnmFromXstzDisplay() in fnmnew.cpp allocates memory on line 2772 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fnmnew.cpp</FileName>
<FilePath>dev/word/core/fnmnew.cpp</FilePath>
<LineStart>2772</LineStart>
<Snippet>	Unreferenced(pfnmOrig);

	if ((pfnm = new FNM()) == pNil)
		{
		_MemoryError();</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="39BAE68FFF913404D8EFB233CCCD7204">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _GramOptionsLboxWndProc() in gramopt.cpp allocates memory on line 1226 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>gramopt.cpp</FileName>
<FilePath>dev/word/client/desktop/gramopt.cpp</FilePath>
<LineStart>1226</LineStart>
<Snippet>				|| static_cast&lt;LONG&gt;(lParam) == OBJID_NATIVEOM)
				{
				IUnknown *punk = new MSAAGO(hwnd, vmsou.hMsoInst);
				return MsoLThunkIUnknown(punk, wParam);
				}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="FE8AFFB608A814A927858DA87E2BA044">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestGRFCommandParsing() in WordGRF.cpp allocates memory on line 1118 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>WordGRF.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/WordGRF.cpp</FilePath>
<LineStart>1135</LineStart>
<Snippet>	test.FailIf(FEnsureBool(FNeXsz(pipta-&gt;poxszCase, L&quot;soda&quot;)),
		L&quot;verifying poxszCase&quot;);
	SafeRelease(pHandler);

	// TEST: a well-formed inProcTest element without a domain attribute fails</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="FE8AFFB608A814A927858DA87E2BA048">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestGRFCommandParsing() in WordGRF.cpp allocates memory on line 1202 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>WordGRF.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/WordGRF.cpp</FilePath>
<LineStart>1205</LineStart>
<Snippet>	test.FailIf(pHandler != pNil,
		L&quot;verifying that the parse failed&quot;);
	SafeRelease(pHandler); // just in case
	
	SafeRelease(pstm);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="F59141D8823AB71A1FAD10D8E1A900E9">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PwwndCreate() in wwnd.cpp allocates memory on line 223 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>wwnd.cpp</FileName>
<FilePath>dev/word/client/desktop/wwnd.cpp</FilePath>
<LineStart>223</LineStart>
<Snippet>	try
		{
		pwwnd = PO&lt;CWordWindow&gt;(new CWordWindow(hwwd, hwndNil, fTrue));
		if (pwwnd == pNil)
			return pNil;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="792A68A7E1A1D6A43AAD0F97E6E19B9C">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _FDecomposePsel() in select.cpp allocates memory on line 2397 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>select.cpp</FileName>
<FilePath>dev/word/client/shared/select.cpp</FilePath>
<LineStart>2397</LineStart>
<Snippet>			return fFalse;

		DSCM *pdscmNew =  new DSCM();
		if (pdscmNew == pNil)
			{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="33DA96FF71563007A6FB9024230ACA68">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FUpdateShadowDocForTbIncremental() in e2osync.cpp allocates memory on line 973 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>e2osync.cpp</FileName>
<FilePath>dev/word/client/shared/e2osync.cpp</FilePath>
<LineStart>973</LineStart>
<Snippet>			{
			prtb-&gt;GetRangeOfCharRun(ixch, atr);
			AWTM *pawtm = new AWTM();
			AssertTag(pawtm != pNil, 0x0039b5c0 /* tag_ao1xa */);
			if (pawtm == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="FD81EB6738228EFDBD4B4F748789DDCD">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestDoubleUnderline() in TestCharacterFormat.cpp allocates memory on line 481 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestCharacterFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestCharacterFormat.cpp</FilePath>
<LineStart>481</LineStart>
<Snippet>	try
		{
		return new CharacterFormatClass(&amp;test, fciDoubleUnderline, L&quot;TestDoubleUnderline&quot;);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="57FC668136F0479A15AB79811BA560D6">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestInsertPasteUndoRedoCloseEmbedOLE() in TestOLE.cpp allocates memory on line 167 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestOLE.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TestOLE.cpp</FilePath>
<LineStart>167</LineStart>
<Snippet>		goto _LEnd; // FBegin should complain to the logs if it fails.
	
	ptd = test.PtdCreateEmptyVisible();
	test.FailIf(ptd == pNil,
		L&quot;Ptd should not be nil at TestInsertCloseEmbedOLE&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E40708092CDDBE59FEE50E2A14A23E64">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function InitLoggingForEndpoint() in LoggingUtilities.cpp allocates memory on line 30 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>LoggingUtilities.cpp</FileName>
<FilePath>dev/word/wal/win/winrt/LoggingUtilities.cpp</FilePath>
<LineStart>30</LineStart>
<Snippet>{
	// Init Word loggers - the constructors do the work
	IWordLogger *rgpiwl[] = {
		new CWordLoggerEtw(),
		new CWordLoggerUls(),</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E139C9B27EC544F4E8CCEE78BB3195F5">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestTextBoxBvt() in TestTextBox.cpp allocates memory on line 156 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestTextBox.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestTextBox.cpp</FilePath>
<LineStart>156</LineStart>
<Snippet>	try
		{
		return new TextBoxClass(&amp;test);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="A564FCF58E0FABB2C03D62FAE3B6B51F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaCreateBorders() in obrange.cpp allocates memory on line 16119 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obrange.cpp</FileName>
<FilePath>dev/word/client/desktop/obrange.cpp</FilePath>
<LineStart>16119</LineStart>
<Snippet>	IUnknown* punkParent) throw0
{
	OBBS* pobbs = new OBBS;
	if (pobbs == pNil)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="599D5079DCD03950ABC1175DAC9712D6">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaCreateToe() in obtable.cpp allocates memory on line 1150 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obtable.cpp</FileName>
<FilePath>dev/word/client/desktop/obtable.cpp</FilePath>
<LineStart>1150</LineStart>
<Snippet>		return E_POINTER;

	ptoe = new TOE;
	if (!ptoe)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="7C90668125EBE1FB7F6076DB9CDA3711">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FBeginOsfTableEventFilterCore() in osfhost.cpp allocates memory on line 2209 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>osfhost.cpp</FileName>
<FilePath>dev/word/client/desktop/osfhost.cpp</FilePath>
<LineStart>2209</LineStart>
<Snippet>		return fFalse;

	spwoh-&gt;SetOtef(new COsfTableEventFilter(pdod, cp, itap, dcp));
	return spwoh-&gt;Potef() != pNil;
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="95420709E75FD94691137CB08FAAEE7A">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FArrangePages() in disppage.cpp allocates memory on line 1561 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>disppage.cpp</FileName>
<FilePath>dev/word/client/shared/disppage.cpp</FilePath>
<LineStart>1561</LineStart>
<Snippet>	// In the failure case, we don't want to abort FArrangePages
	if (ppgf == pNil &amp;&amp; FThumbnailView(hwwd) &amp;&amp; (*hwwd)-&gt;pdod-&gt;pud-&gt;pnvd != pNil)
		ppgf = (*hwwd)-&gt;pdod-&gt;pud-&gt;pnvd-&gt;PpgfCreate();
	
	if (ppgf != pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="5119466BAEB06324BE101107CC44C702">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOurScriptTextOut() in rtd2d_cs.cpp allocates memory on line 1863 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtd2d_cs.cpp</FileName>
<FilePath>dev/word/core/rtd2d_cs.cpp</FilePath>
<LineStart>1878</LineStart>
<Snippet>	ConvertArrays(pGoffset, pGlyphOffset, cGlyphs, ConvertOffsetToDWriteOffset);

	hr = HrScriptTextOutSubPixel(psc, static_cast&lt;FLOAT&gt; (x), static_cast&lt;FLOAT&gt; (y), fFalse, /* fSubPixel */
							 fuOptions, lprc, psa, psfp, pwcReserved, iReserved,
							 pwGlyphs, cGlyphs,</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="EF8BB318B625F55193965118131285C9">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FOnPopulating() in glossary.cpp allocates memory on line 7204 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>glossary.cpp</FileName>
<FilePath>dev/word/client/desktop/glossary.cpp</FilePath>
<LineStart>7204</LineStart>
<Snippet>				continue;

			pgudpd = new GULegoData;

			if (pgudpd == pNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E6F431F2F9EF4175F2FD495AE11C68D9">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestDesktopTest() in TaskLibDesktop.cpp allocates memory on line 853 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>853</LineStart>
<Snippet>	testParent.FailIf(!ptest-&gt;FBegin(L&quot;TestDesktopTest&quot;),
		L&quot;DesktopTest::FBegin returned failure&quot;);
	ptd = ptest-&gt;PtdCreateEmptyVisible();
	testParent.FailIf(ptd == pNil,
		L&quot;PtdCreateEmptyVisible returned pdodNil&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="C2F35173B0F2E31682FE2E0662B67907">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function processingInstruction() in myx.cpp allocates memory on line 2510 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>myx.cpp</FileName>
<FilePath>dev/word/core/myx.cpp</FilePath>
<LineStart>2510</LineStart>
<Snippet>STDMETHODIMP MYX::processingInstruction(const XCHAR *pxchTarget, int cchTarget, const XCHAR *pxchData, int cchData) throw0
{
	MYXCRPXCH2 *pmyxr = MYXCRPXCH2::PmyxrCreate(&amp;ISAXContentHandler::processingInstruction, pxchTarget, cchTarget, pxchData, cchData);
	if (pmyxr == pNil)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="A6452E1B0DC3657930AF1C004536925C">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrWrapPdispODrawInObi() in obdoc.cpp allocates memory on line 13118 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obdoc.cpp</FileName>
<FilePath>dev/word/client/desktop/obdoc.cpp</FilePath>
<LineStart>13132</LineStart>
<Snippet>		pvData = (OMOA3D*)(new OME2O3D(pobs));

	hr = HrOaCreateGenericObject(pNil, *RefiidFromObi(obi), (void **)ppidWrapped,
		PgodFromObi(obi), grfAdviseAll, pvData, punkParent);
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="B67E46E0403308E3084B7F14D51A1534">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestDecreaseIndent() in TestParagraphFormat.cpp allocates memory on line 440 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestParagraphFormat.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/TestParagraphFormat.cpp</FilePath>
<LineStart>440</LineStart>
<Snippet>	try
		{
		return new DecreaseIndentParaTestClass(&amp;test, fciPrevLstLvl);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="70FD6B2C-AFC9-4CED-88E0-54DBDE577574" iid="CD50851F801711756A3ACF6BC76F1AE3">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FEnsureThreadGT() in dllutil.cpp allocates memory on line 395 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dllutil.cpp</FileName>
<FilePath>dev/word/core/dllutil.cpp</FilePath>
<LineStart>395</LineStart>
<Snippet>		void *lpvData;

		lpvData = PvAllocTlsGT(); 
		if (lpvData == NULL) 
			return fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="113A3C1FE801178542A4A86E0415B47C">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FCreateSelectionElementLayer() in layer.cpp allocates memory on line 8236 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>layer.cpp</FileName>
<FilePath>dev/word/client/shared/layer.cpp</FilePath>
<LineStart>8237</LineStart>
<Snippet>		{
		pLayer = new CSelectionElementLayer(rcw, this);
		if (pLayer == pNil || !pLayer-&gt;FInit())
			return fFalse;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="7F812C1BFB3C1B450B5E5B92D3B69E28">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestRowColumn_Insert() in TestTables.cpp allocates memory on line 319 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestTables.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestTables.cpp</FilePath>
<LineStart>319</LineStart>
<Snippet>	try
		{
		return new RowColumn_InsertTestClass(&amp;test);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="3A01954ADB7A698780F5C1BB8435AB24">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PGRFCHParseGRFCommand() in WordGRF.cpp allocates memory on line 621 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>WordGRF.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/WordGRF.cpp</FilePath>
<LineStart>637</LineStart>
<Snippet>	SafeRelease(pReader);
	if (FAILED(hr))
		SafeRelease(pHandler);
	return pHandler;
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="28BAED719BB94707ECD066540A6571A8">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function EidNewFileVisCore() in elfile.cpp allocates memory on line 269 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>elfile.cpp</FileName>
<FilePath>dev/word/client/desktop/elfile.cpp</FilePath>
<LineStart>269</LineStart>
<Snippet>		fcmc |= fcmcNoStagger;

	if (MWD::PmwdCreateCore(doc, wk, NULL, NULL, fcmc, pioldocBase, pNil, hwndNil, pNil /*pfawcpapp*/ DEBUGPARAMS_TOP) == pmwdNil)
		{
		eid = eidLowMemCloseWindows;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="44451DD475BC790078D8870345E41F24">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestVisibleDocument() in TaskLibDesktop.cpp allocates memory on line 1070 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>1070</LineStart>
<Snippet>
	// get a document
	ptd = test.PtdCreateEmptyVisible();
	if (ptd == pNil)
		goto _LEnd; // PtdCreateEmptyVisible return set FFailed(), but we still need to end the test</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="7C3D516DE4838468F39E9738C16B88A4">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FRegisterListener() in revmark.cpp allocates memory on line 438 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>revmark.cpp</FileName>
<FilePath>dev/word/client/desktop/revmark.cpp</FilePath>
<LineStart>438</LineStart>
<Snippet>	AssertSzTag(m_rpfds != pNil, &quot;Reviewing Pane not yet initialized.&quot;, 0x0015a281 /* tag_af0kb */);

	CReviewingPaneCommandListener *prpcl = new CReviewingPaneCommandListener(this);
	if (prpcl == pNil)
		return fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="3C6DE1C2844C4C093C4535871FED93BF">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function endDTD() in myx.cpp allocates memory on line 2681 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>myx.cpp</FileName>
<FilePath>dev/word/core/myx.cpp</FilePath>
<LineStart>2681</LineStart>
<Snippet>STDMETHODIMP MYX::endDTD() throw0
{
	MYXLRV *pmyxr = MYXLRV::PmyxrCreate(&amp;ISAXLexicalHandler::endDTD);
	if (pmyxr == pNil)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="38600473CF980FE75A06173E2E42AE8F">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HrOaRangeCreateCoAuthUpdate() in obcoauth.cpp allocates memory on line 355 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obcoauth.cpp</FileName>
<FilePath>dev/word/client/desktop/obcoauth.cpp</FilePath>
<LineStart>359</LineStart>
<Snippet>		return E_OUTOFMEMORY;

	HRESULT hr = HrOaCreateGenericObjectObi(obiCoAuthUpdate, pNil, *RefiidFromObi(obiCoAuthUpdate),
		(void **)ppid, PgodFromObi(obiCoAuthUpdate), grfAdviseAll, pocui, pidActive);
	if (FAILED(hr))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="ADD7F0A9F0C86A8C3E54976EB4253008">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FShowPane() in annot.cpp allocates memory on line 420 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>annot.cpp</FileName>
<FilePath>dev/word/client/desktop/annot.cpp</FilePath>
<LineStart>420</LineStart>
<Snippet>		{
		// if we have a frameset then create a new window
		if (MWD::PmwdCreateCore((*hwwdMom)-&gt;pdod, (*hwwdMom)-&gt;tvi.wks.wk, &amp;(*hwwdMom)-&gt;sels, pNil, fcmcVis | fcmcSaveSel, pNil, pNil, hwndNil, pNil /*pfawcpapp*/ DEBUGPARAMS_TOP) == pmwdNil)
			return fFalse;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="C74A3C4A-4D14-4057-8132-8D937D0D963F" iid="A379F48A46DC54037B92C4FF0ED30DAB">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function EnsurePageArray() in pginval.cpp allocates memory on line 1272 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pginval.cpp</FileName>
<FilePath>dev/word/client/desktop/pginval.cpp</FilePath>
<LineStart>1272</LineStart>
<Snippet>		{
		int ipgdAllocNew = max(ipgd+1, ipgd * 2);
		CPageDebugInfo** m_rgPageInfoNew = OFCNew CPageDebugInfo* [ipgdAllocNew+1];
		m_rgPageInfoNew++; // Allow for ipgd = -1
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="E773A37D8AAC66D2AA75BDEFAE22184E">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function startCDATA() in myx.cpp allocates memory on line 2749 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>myx.cpp</FileName>
<FilePath>dev/word/core/myx.cpp</FilePath>
<LineStart>2749</LineStart>
<Snippet>STDMETHODIMP MYX::startCDATA() throw0
{
	MYXLRV *pmyxr = MYXLRV::PmyxrCreate(&amp;ISAXLexicalHandler::startCDATA);
	if (pmyxr == pNil)
		return E_OUTOFMEMORY;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="3E8149A70CB06435CFF2B14D5B6AA288">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestVisibleDocument() in TaskLibDesktop.cpp allocates memory on line 1342 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TaskLibDesktop.cpp</FileName>
<FilePath>dev/word/client/desktop/comptest/TaskLibDesktop.cpp</FilePath>
<LineStart>1342</LineStart>
<Snippet>		test.FailIf(!ptest-&gt;FBegin(L&quot;SelectIdoc test&quot;),
			L&quot;new test failed FBegin&quot;);
		ptd = ptest-&gt;PtdCreateEmptyVisible();
		test.FailIf(ptd == pNil,
			L&quot;PtdCreateEmptyVisible returned pNil&quot;);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A628C239-2775-447C-95E1-D5273B6A0081" iid="C5C56ED98701C4942E6438676B14BBE0">
                            <Category>Memory Leak</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TestQuickFormatStyle() in TestStyles.cpp allocates memory on line 241 and fails to free it.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>TestStyles.cpp</FileName>
<FilePath>dev/word/client/shared/comptest/InProcTests/TestStyles.cpp</FilePath>
<LineStart>241</LineStart>
<Snippet>	try
		{
		return new QuickFormatStyleClass(&amp;test);
		}
	catch (...)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 401</ExternalCategory>
                        </Issue>
                    </GroupingSection>
                    <GroupingSection count="208">
                        <groupTitle>Type Mismatch: Signed to Unsigned</groupTitle>
                        <MajorAttributeSummary>
                            <MetaInfo>
<Name>Abstract</Name>
<Value>The function is declared to return an unsigned number but returns a signed value.</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Explanation</Name>
<Value>It is dangerous to rely on implicit casts between signed and unsigned numbers because the result can take on an unexpected value and violate weak assumptions made elsewhere in the program. 

Example: In this example, depending on the return value of accecssmainframe(), the variable amount can hold a negative value when it is returned. Because the function is declared to return an unsigned value, amount will be implicitly cast to an unsigned number. 


unsigned int readdata () {
	int amount = 0; 
...
amount = accessmainframe(); 
...
	return amount;
}


If the return value of accessmainframe() is -1, then the return value of readdata() will be 4,294,967,295 on a system that uses 32-bit integers.

Conversion between signed and unsigned values can lead to a variety of errors, but from a security standpoint is most commonly associated with integer overflow and buffer overflow vulnerabilities.</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Recommendations</Name>
<Value>Although unexpected conversion between signed and unsigned quantities typically creates general quality problems, depending on the assumptions that a conversion violates, it can lead to serious security risks. Pay attention to compiler warnings related to signed/unsigned conversions. Some programmers may believe that these warnings are innocuous, but in some cases they point out potential integer overflow problems.</Value>
                            </MetaInfo>
                            <AttributeValue>
<Name>&lt;Unaudited&gt;</Name>
<Count>208</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Not an Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Reliability Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Bad Practice</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Suspicious</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Exploitable</Name>
<Count>0</Count>
                            </AttributeValue>
                        </MajorAttributeSummary>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="E0E37A74EC53D4EA829525D3D96DD1BE">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WFramesetsProcCore() in frameset.cpp is declared to return an unsigned value, but on line 2637 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>frameset.cpp</FileName>
<FilePath>dev/word/client/desktop/frameset.cpp</FilePath>
<LineStart>2637</LineStart>
<Snippet>		}	// Switch tmm

	return fReturn;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="D49A73A33412E7FC54A50CE019B74026">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicListGallery() in numdlg.cpp is declared to return an unsigned value, but on line 9054 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>numdlg.cpp</FileName>
<FilePath>dev/word/client/desktop/numdlg.cpp</FilePath>
<LineStart>9054</LineStart>
<Snippet>			FreeRtBmp(PrtFromHdcOrNil(HdcFromLUserTmc(tmc)));

			return FSetupHdcBmpTmc(tmc, fTrue);
			}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="C960F2C5E79441ED9DAD9D3C15B1FBB4">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IlvlFromNLvlAnm() in numt3core.cpp is declared to return an unsigned value, but on line 849 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>numt3core.cpp</FileName>
<FilePath>dev/word/core/numt3core.cpp</FilePath>
<LineStart>849</LineStart>
<Snippet>	default:
		AssertTag(FBetween(nLvlAnm, 1, ilvlMax), ASSERTTAG('2v82'));
		return NBound(nLvlAnm, 1, ilvlMax);

	case lvlBullet:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="839CBB68FA83051C61578CFBAB1B7D31">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function InnerAddRef() in ole2srvr.cpp is declared to return an unsigned value, but on line 718 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ole2srvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ole2srvr.cpp</FilePath>
<LineStart>718</LineStart>
<Snippet>ULONG WWSERVEROBJ::InnerAddRef() throw0
{
	return ++m_cRefBogus;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="6BB88899B775F17A92127914D7897424">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XchSmartQuoteFromXchXch() in replace.cpp is declared to return an unsigned value, but on line 131 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>replace.cpp</FileName>
<FilePath>dev/word/client/shared/replace.cpp</FilePath>
<LineStart>131</LineStart>
<Snippet>			goto LOpen;

		return (xchPrev &lt;= xchSpace) ? 
				(fDQuote ? XchOpenDSmartQuote(LidInstall()) : xchSOpenQuote) :
				(fDQuote ? XchCloseDSmartQuote(LidInstall()) : xchSCloseQuote);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="5E208B79141629D0816469B310D96A1A">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function LvlwkbFromDocCp() in outcore.cpp is declared to return an unsigned value, but on line 157 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>outcore.cpp</FileName>
<FilePath>dev/word/core/outcore.cpp</FilePath>
<LineStart>157</LineStart>
<Snippet>		// set the body level
		if (FSubdocStart(&amp;wkb))
			return wkb.lvl;
		else
			return (wkb.lvl - 1);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="C26A598F527049211D26EC336351DD7B">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Release() in options.cpp is declared to return an unsigned value, but on line 903 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>options.cpp</FileName>
<FilePath>dev/word/client/desktop/options.cpp</FilePath>
<LineStart>903</LineStart>
<Snippet>			delete this;

		return cRef;
	}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="CB3E62225077B8F791450C9BADCD49CC">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function DwChainMaskFromTxbxs() in blltprf.cpp is declared to return an unsigned value, but on line 6557 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>blltprf.cpp</FileName>
<FilePath>dev/word/client/desktop/blltprf.cpp</FilePath>
<LineStart>6557</LineStart>
<Snippet>		return 0xFFFFFFFF;

	return (1 &lt;&lt; ptxbxs-&gt;cTxbx) - 1;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="77E2655323A8CCCBECB0CC6F008AA82F">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Look2WListEntbl() in dlglook2.cpp is declared to return an unsigned value, but on line 530 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlglook2.cpp</FileName>
<FilePath>dev/word/client/desktop/dlglook2.cpp</FilePath>
<LineStart>530</LineStart>
<Snippet>
	case tmmText:
		return Look2FEnumIEntbl(wParam, isz, xsz, ixchMax-cchExtraXsz);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EFFC676C277D7FCB3FF5AFF606654F08">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BWordDelimiterCore() in stmmisc.cpp is declared to return an unsigned value, but on line 695 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stmmisc.cpp</FileName>
<FilePath>dev/word/client/shared/stmmisc.cpp</FilePath>
<LineStart>695</LineStart>
<Snippet>	case 0x2039:					return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		//  left single guillemet
	case 0x203A:					return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		//  right single guillemet
	case xchPubEnDash:				return fForCSSBuffer ? splRepeatBreak : splCantBegin | splRepeatBreak;
	case xchPubLDblQuote:			return fForCSSBuffer ? splRepeatBreak : splCantBegin | splRepeatBreak;
	case xchPubRDblQuote:			return fForCSSBuffer ? splRepeatBreak : splCantBegin | splRepeatBreak;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="68EA7C9162DBCDB41952479C06CBCF1C">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function AddRef() in istreamlog.cpp is declared to return an unsigned value, but on line 298 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>istreamlog.cpp</FileName>
<FilePath>dev/word/core/istreamlog.cpp</FilePath>
<LineStart>298</LineStart>
<Snippet>STDMETHODIMP_(DWORD) CIStreamLoggingWrapper::AddRef() throw0
{
	return ++m_cRef;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="5AE5FB70FDB7B56B1161C5434767F7E3">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicEnvelopeSample() in envelope.cpp is declared to return an unsigned value, but on line 4316 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>envelope.cpp</FileName>
<FilePath>dev/word/client/desktop/envelope.cpp</FilePath>
<LineStart>4316</LineStart>
<Snippet>		if (!MsoFRunningSDMDAL())
			{
			return FSetupHdcBmpTmc(tmc, fFalse);
			}
		else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="69DDCF1F5C09C16DAA546989699F1D26">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ElkFromFciLid() in medtok.cpp is declared to return an unsigned value, but on line 6197 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>medtok.cpp</FileName>
<FilePath>dev/word/client/desktop/medtok.cpp</FilePath>
<LineStart>6197</LineStart>
<Snippet>	elk = (elk != elkNil) ? elk : _ElkFromFci(prgElk[1], fci, pos);
	
	return elk;
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="61C444FA70CE08CCC1320DD74552C7DF">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CStatInPselComplexUsingHplclscc() in dlgdoc.cpp is declared to return an unsigned value, but on line 5635 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlgdoc.cpp</FileName>
<FilePath>dev/word/client/desktop/dlgdoc.cpp</FilePath>
<LineStart>5635</LineStart>
<Snippet>		}

	return cStat;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="ACF3B2FD15E7BA314DE1F03657CDA931">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XchHiragana() in dbcs.cpp is declared to return an unsigned value, but on line 1117 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dbcs.cpp</FileName>
<FilePath>dev/word/core/dbcs.cpp</FilePath>
<LineStart>1117</LineStart>
<Snippet>		}
	else if (FBetween(xch, wchKatakanaRepeatFirst, wchKatakanaRepeatLast))	/* repeat symbol */
		return (xch + wchHiraganaRepeatFirst - wchKatakanaRepeatFirst);

	return xch; /* could not convert */</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="0AC8ACCC630658B49052C5DA19434730">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XchDouble() in dbcs.cpp is declared to return an unsigned value, but on line 708 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dbcs.cpp</FileName>
<FilePath>dev/word/core/dbcs.cpp</FilePath>
<LineStart>708</LineStart>
<Snippet>		return 0xffe5; // yen sign
	if (FBetween(xch, 0x0021, 0x007e))		//  ascii variants
		return (xch + 0xfee0);
	if (FBetween(xch, xchHalfToFullFirst, xchHalfToFullLast))	// katakana variants
		return (mpxchHalfToFull[xch - xchHalfToFullFirst]);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="58A4F4FF7977C086BCEB1C4C7A54ACD8">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function MessagePending() in serverdoc.cpp is declared to return an unsigned value, but on line 708 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>serverdoc.cpp</FileName>
<FilePath>dev/word/client/desktop/serverdoc.cpp</FilePath>
<LineStart>708</LineStart>
<Snippet>	MsoTryExceptEndTag(ASSERTTAG('6ifb'))

	return i ? PENDINGMSG_WAITNOPROCESS : PENDINGMSG_WAITDEFPROCESS;
}
 </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="5916615C457350CA68C0BEA99A83B179">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _CbcmeCTC() in cdskme.cpp is declared to return an unsigned value, but on line 152 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cdskme.cpp</FileName>
<FilePath>dev/word/client/shared/cdskme.cpp</FilePath>
<LineStart>152</LineStart>
<Snippet>{
	ikmp += vdikmpBcme;
	return ikmp &lt; vckmpBcme ? vpkmp[ikmp].cbkme : 0;
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="217DAF779F2857E50477C321FCEFD695">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListUiContext() in uicust.cpp is declared to return an unsigned value, but on line 2873 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>uicust.cpp</FileName>
<FilePath>dev/word/client/desktop/uicust.cpp</FilePath>
<LineStart>2873</LineStart>
<Snippet>			++c;
			}
		return c;
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="E2CB74F680FE16E3005A838A38212B85">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListMathRecFns() in mathui.cpp is declared to return an unsigned value, but on line 2293 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>mathui.cpp</FileName>
<FilePath>dev/word/client/desktop/mathui.cpp</FilePath>
<LineStart>2293</LineStart>
<Snippet>
	case tmmText:
		return FNextACXception(iacxIac, isz, fFalse, xsz, ixchMax - cchExtraXsz);
		}
	return 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="6EC6E54A7E5716C5818B77BC1933455A">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListAutoManStt() in cust.cpp is declared to return an unsigned value, but on line 3148 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cust.cpp</FileName>
<FilePath>dev/word/client/desktop/cust.cpp</FilePath>
<LineStart>3148</LineStart>
<Snippet>		{
	case tmmCount:
		return IModeCount(imode);

	case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="3A03B405A5FE240F581A2CFA772A61FB">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Release() in obvbe.cpp is declared to return an unsigned value, but on line 5588 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obvbe.cpp</FileName>
<FilePath>dev/word/client/desktop/obvbe.cpp</FilePath>
<LineStart>5588</LineStart>
<Snippet>		}

	return m_cref;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="94BE613EE5A451A764F22B089BC44BE8">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TmcGosubTableProperties() in stylecmd.cpp is declared to return an unsigned value, but on line 3142 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stylecmd.cpp</FileName>
<FilePath>dev/word/client/desktop/stylecmd.cpp</FilePath>
<LineStart>3142</LineStart>
<Snippet>TMC TmcGosubTableProperties(HCAB hcab) throw0
{
	return CmdExecFciCore(fciTableProperties, hcab == hNil ? fccoNormal : fccoDialog,
				0, fTrue /*fUndo*/, hcab);
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="755EAF949ADCE2294BEE6B8E629EC60C">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Release() in istreamlog.cpp is declared to return an unsigned value, but on line 316 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>istreamlog.cpp</FileName>
<FilePath>dev/word/core/istreamlog.cpp</FilePath>
<LineStart>316</LineStart>
<Snippet>		delete this;	// Releases internal stream...
		}
	return cRef;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="54C8125189DC57DD93EB3DE5D8C3E737">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function PctTintOrShadeFromBTintOrShade() in ossword.cpp is declared to return an unsigned value, but on line 748 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ossword.cpp</FileName>
<FilePath>dev/word/core/ossword.cpp</FilePath>
<LineStart>748</LineStart>
<Snippet>	// Any fractional part is rounded up (hence adding 99) to be symmetric
	// with BTintOrShadeFromPctTintOrShade
	return (((bTintOrShade * 100) + 99) / 255);
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="8B7A7B0A995C7A7B29984042C5FD2CDF">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListEntblCap() in dlbenum.cpp is declared to return an unsigned value, but on line 1373 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlbenum.cpp</FileName>
<FilePath>dev/word/client/desktop/dlbenum.cpp</FilePath>
<LineStart>1373</LineStart>
<Snippet>
	case tmmText:
		return FEnumIEntblXsz(wParam, (isz &gt; 0)? ++isz : isz, xsz, ixchMax-cchExtraXsz);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="09D752DD36F5064375D96C1B66C91D1D">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListATCategories() in glossary.cpp is declared to return an unsigned value, but on line 5737 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>glossary.cpp</FileName>
<FilePath>dev/word/client/desktop/glossary.cpp</FilePath>
<LineStart>5737</LineStart>
<Snippet>		return fTrue;
	case tmmCount:
		return IbstMacSttb(pcab-&gt;hsttbCat) + 1;
	case tmmText:
		if (ixchMax &lt; cchExtraXsz)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="5DBED8229420A23652BC4C2244180C07">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IudrNextEanbledIudr() in obproof.cpp is declared to return an unsigned value, but on line 3027 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obproof.cpp</FileName>
<FilePath>dev/word/client/desktop/obproof.cpp</FilePath>
<LineStart>3027</LineStart>
<Snippet>			{
			AssertTag(fFalse, 0x001c8184 /* tag_ahige */); // We couldn't get the path of this guy?
			return cudr + 1;
			}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="1C001518FB465AD0A76023A741C317CA">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _WDMTypeProc() in dialog1.cpp is declared to return an unsigned value, but on line 1172 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dialog1.cpp</FileName>
<FilePath>dev/word/client/desktop/dialog1.cpp</FilePath>
<LineStart>1172</LineStart>
<Snippet>
		if (iSwitch &gt;= 0 &amp;&amp; isz &lt; iSwitch)
			return (FEnumIEntblXsz(iEntbl, isz, xsz, ixchMax - cchExtraXsz));
		
#ifdef DEBUG</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="CC63ABA71B57590A621A12D3B5C1299F">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListStylesWysiwyg() in fmtpane.cpp is declared to return an unsigned value, but on line 1389 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fmtpane.cpp</FileName>
<FilePath>dev/word/client/desktop/fmtpane.cpp</FilePath>
<LineStart>1389</LineStart>
<Snippet>#endif // NOSTYLEMRU
		AssertTag(pNil != hcab, ASSERTTAG('iujw'));
		return pdodNil != pdod &amp;&amp; hsttbNil != HsttbStyleList(pdod, stkFlavor) ? 
				IbstMacSttb(HsttbStyleList(pdod, stkFlavor)) + cMRU : 0;
	case tmmTooltipText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="740730382C331FEAE9B4BDE37229EF61">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _WListSortUsing() in sort.cpp is declared to return an unsigned value, but on line 2471 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>sort.cpp</FileName>
<FilePath>dev/word/client/desktop/sort.cpp</FilePath>
<LineStart>2471</LineStart>
<Snippet>		{
	case tmmCount:
		return 1 + IbstMacSttbSortSecondary(wParam);

	case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="A6EB937A4EF2EF96CE7AA577EFC8574D">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IlsccFromCpCheck() in dlgdoc.cpp is declared to return an unsigned value, but on line 3938 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlgdoc.cpp</FileName>
<FilePath>dev/word/client/desktop/dlgdoc.cpp</FilePath>
<LineStart>3938</LineStart>
<Snippet>		return 0;
	else if (cp &gt; CpMacPlc(hplclscc))
		return IMacPlc(hplclscc);
	uint ilscc = IInPlc(hplclscc, cp);
	AssertTag(FBetween(ilscc, 0, IMacPlc(hplclscc)), ASSERTTAG('xlbd'));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="95F445A25A5F6CEA739A6843E11358AC">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Release() in ole2srvr.cpp is declared to return an unsigned value, but on line 925 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ole2srvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ole2srvr.cpp</FilePath>
<LineStart>925</LineStart>
<Snippet>	MsoTryExceptEndTag(ASSERTTAG('fwto'))

	return m_cRef;
}
 </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="9976133BCCA03DA906714E3EAF8F62AD">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Release() in metroin.cpp is declared to return an unsigned value, but on line 144 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>metroin.cpp</FileName>
<FilePath>dev/word/core/metroin.cpp</FilePath>
<LineStart>144</LineStart>
<Snippet>		}

	return m_cRef;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="F1F9D86FE955FF6B62A2108CF1C77208">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _FciFromMsoCmdID() in docobj.cpp is declared to return an unsigned value, but on line 1515 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>docobj.cpp</FileName>
<FilePath>dev/word/client/desktop/docobj.cpp</FilePath>
<LineStart>1515</LineStart>
<Snippet>			if (vrgbcd[ibcd].fSetToolbarItem)
				*pgrfmcf |= fmcfSetTool;
			return fci;
			}
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="6419931182CBF1DF803E116BE22E0F72">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListPgSetupList() in pgsetup.cpp is declared to return an unsigned value, but on line 1552 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pgsetup.cpp</FileName>
<FilePath>dev/word/client/desktop/pgsetup.cpp</FilePath>
<LineStart>1552</LineStart>
<Snippet>		{
	case tmmCount:
		return cids;

	case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="9F1B9C92814171F43954E10498BB3DDE">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function iWAlertIDFromMst() in prompt.cpp is declared to return an unsigned value, but on line 663 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>prompt.cpp</FileName>
<FilePath>dev/word/client/shared/prompt.cpp</FilePath>
<LineStart>663</LineStart>
<Snippet>		return 0;

	return IdwaFromIds(mst.ids);
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="F7781B378652B717E7E7B6808018136F">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function KulSingleFromLineStyleBold() in oartodf.cpp is declared to return an unsigned value, but on line 7059 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartodf.cpp</FileName>
<FilePath>dev/word/core/oartodf.cpp</FilePath>
<LineStart>7059</LineStart>
<Snippet>		case ODF::odfStyleLineStyleNone:
		case ODF::odfStyleLineStyleSolid:
			return fBold ? kulThick : kulSingle;
		case ODF::odfStyleLineStyleWave:
			return fBold ? kulWaveHeavy : kulWave;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="46F4472A9A4421C5F83B869589F0BC90">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListFontSubPair() in fontui.cpp is declared to return an unsigned value, but on line 1459 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fontui.cpp</FileName>
<FilePath>dev/word/client/desktop/fontui.cpp</FilePath>
<LineStart>1459</LineStart>
<Snippet>							flbxNotify | flbxNoSelNotify | flbxShowScroll));
				case tmmCount:
					return (CUnavl(lpfsib) &gt; 0) ? CAvl(lpfsib) + 1 : 0; // &quot;+1&quot; for the &quot;Default&quot; font we place at the front of the list

				case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="A332E16DE04572546865405DFC5596D4">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WchBinaryLookupWch() in file.cpp is declared to return an unsigned value, but on line 3784 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>file.cpp</FileName>
<FilePath>dev/word/core/file.cpp</FilePath>
<LineStart>3784</LineStart>
<Snippet>		}
	iwch = iwchFirst &lt;&lt; 1;
	return (rgwch[iwch] == wch) ? rgwch[iwch + 1] : 0;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="E2C2828A265BD7A35E1FE222F939D345">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListEnvSize() in envelope.cpp is declared to return an unsigned value, but on line 4776 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>envelope.cpp</FileName>
<FilePath>dev/word/client/desktop/envelope.cpp</FilePath>
<LineStart>4776</LineStart>
<Snippet>			AssertSzTag(FBetween(iStdEnvDflt, 0, cStdEnv - 1), &quot;iStdEnvDflt&quot;, ASSERTTAG('davn'));
			InstallLBPfnPnt(tmc, PaintColTextLbx, 2);
			return cStdEnv;
			}
	case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="3FA0D5505210148E68DBA340E26179C5">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Release() in wip.cpp is declared to return an unsigned value, but on line 495 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>wip.cpp</FileName>
<FilePath>dev/word/client/desktop/wip.cpp</FilePath>
<LineStart>495</LineStart>
<Snippet>		}

	return m_cRef;
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="D1FDF648DAE869187718F0F34BE2061B">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ZaGetUnit() in htmldoc.cpp is declared to return an unsigned value, but on line 7533 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmldoc.cpp</FileName>
<FilePath>dev/word/core/htmldoc.cpp</FilePath>
<LineStart>7533</LineStart>
<Snippet>		{
		GetDxcDylFromDocCp(&amp;dxaCu, &amp;dyaLine, selCur.ca.pdod, selCur.ca.cpFirst);
		return (ut == utDxc) ? dxaCu : dyaLine;
		}
	else if (ut != utPx &amp;&amp; ut != utPx2 &amp;&amp; ut != utPx3)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="867005059E455CCEF89624D390105521">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CbOlePut() in ecdutil.cpp is declared to return an unsigned value, but on line 511 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ecdutil.cpp</FileName>
<FilePath>dev/word/client/win32/ecdutil.cpp</FilePath>
<LineStart>511</LineStart>
<Snippet>	LPWWSTREAM lpstream = (LPWWSTREAM)polestream;
	if (lpstream-&gt;fRTF)
		return LcbWriteOleRtf(lpstream, /* temp */(char *)hpSrc, lcbPut);
	else
		return LcbOleTransfer(lpstream, /* temp */(BYTE *)hpSrc, lcbPut, fTrue/*fWrite*/);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EFFC676C277D7FCB3FF5AFF606654F0C">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BWordDelimiterCore() in stmmisc.cpp is declared to return an unsigned value, but on line 699 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stmmisc.cpp</FileName>
<FilePath>dev/word/client/shared/stmmisc.cpp</FilePath>
<LineStart>699</LineStart>
<Snippet>	case xchPubRDblQuote:			return fForCSSBuffer ? splRepeatBreak : splCantBegin | splRepeatBreak;
	case xchInvQMark:				return (fForCSSBuffer || LidBase(lid) == LidBase(lidSpanish)) ? splRepeatBreak : splCantBegin | splRepeatBreak;		//  0xBF
	case xchInvExclaimMark:			return (fForCSSBuffer || LidBase(lid) == LidBase(lidSpanish)) ? splRepeatBreak : splCantBegin | splRepeatBreak;		//  0xA1
	case xchTrademark:				return splCantEnd | splRepeatBreak;
	case xchLQuote:					return splRepeatBreak;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="C5E6A0983E6AD038F5B1E98E7475308D">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WDDLBSOType() in spell.cpp is declared to return an unsigned value, but on line 3585 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>spell.cpp</FileName>
<FilePath>dev/word/client/desktop/spell.cpp</FilePath>
<LineStart>3585</LineStart>
<Snippet>	case tmmCount:
		FEnsureProofLists();
		return CpdtTotal();
	case tmmText:
		if (ixchMax &lt; cchExtraXsz)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="904E1A4BB02A4575DEF18EB1AD979201">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IpgFromNfcNew() in dlbenum.cpp is declared to return an unsigned value, but on line 1425 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlbenum.cpp</FileName>
<FilePath>dev/word/client/desktop/dlbenum.cpp</FilePath>
<LineStart>1425</LineStart>
<Snippet>	ipg = WListFromWPropEntbl(ipgww, rgpEntbl, iEntblNfc, iEntblNfcWW);
	
	return ipg;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="56A53D0FEF1943961A8AC54FD72505CF">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _RGBFromHue() in color.cpp is declared to return an unsigned value, but on line 104 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>color.cpp</FileName>
<FilePath>dev/word/core/color.cpp</FilePath>
<LineStart>104</LineStart>
<Snippet>		return (n1 + (((n2 - n1) * (((hlsMax * 2) / 3) - hue) + (hlsMax / 12)) / (hlsMax / 6)));
	else
		return (n1);
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="87D1CF87F041248975AAF717E26452CA">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XchFromChCpg() in extchar.cpp is declared to return an unsigned value, but on line 930 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>extchar.cpp</FileName>
<FilePath>dev/word/core/extchar.cpp</FilePath>
<LineStart>930</LineStart>
<Snippet>
	if (cpg != CP_SYMBOL &amp;&amp; !(ch &amp; 0x80))
		return (ch);

	cch = MsoMultiByteToWideChar(cpg,</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="3E7D50D2F2A7156E5CDE6C17E050B772">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Release() in istgwrap.cpp is declared to return an unsigned value, but on line 201 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>istgwrap.cpp</FileName>
<FilePath>dev/word/core/istgwrap.cpp</FilePath>
<LineStart>201</LineStart>
<Snippet>		delete this;
		}
	return cRef;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="50EC8BB4C25ECE29EFA2ED11D36FFBFA">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _EltNextCore() in medtok.cpp is declared to return an unsigned value, but on line 1877 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>medtok.cpp</FileName>
<FilePath>dev/word/client/desktop/medtok.cpp</FilePath>
<LineStart>1877</LineStart>
<Snippet>			__fallthrough;
		default:
			return elt;

		case eltSpaceMulti:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EFFC676C277D7FCB3FF5AFF606654F06">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BWordDelimiterCore() in stmmisc.cpp is declared to return an unsigned value, but on line 693 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stmmisc.cpp</FileName>
<FilePath>dev/word/client/shared/stmmisc.cpp</FilePath>
<LineStart>693</LineStart>
<Snippet>	case xchLowerRQuote:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;	
	case xchLowerRDblQuote:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		
	case 0x2039:					return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		//  left single guillemet
	case 0x203A:					return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		//  right single guillemet
	case xchPubEnDash:				return fForCSSBuffer ? splRepeatBreak : splCantBegin | splRepeatBreak;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EFFC676C277D7FCB3FF5AFF606654F05">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BWordDelimiterCore() in stmmisc.cpp is declared to return an unsigned value, but on line 692 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stmmisc.cpp</FileName>
<FilePath>dev/word/client/shared/stmmisc.cpp</FilePath>
<LineStart>692</LineStart>
<Snippet>	case xchCloseChevron:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		
	case xchLowerRQuote:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;	
	case xchLowerRDblQuote:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		
	case 0x2039:					return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		//  left single guillemet
	case 0x203A:					return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		//  right single guillemet</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="470C40AE9EEA0F11DF30B59D6B18B832">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WSectListProc() in cmdprot.cpp is declared to return an unsigned value, but on line 869 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdprot.cpp</FileName>
<FilePath>dev/word/client/desktop/cmdprot.cpp</FilePath>
<LineStart>869</LineStart>
<Snippet>
			AssertTag(!pdod-&gt;fShort, ASSERTTAG('cwer'));
			return IsedMac(pdod-&gt;pud-&gt;hplcsed);
			}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="774028D2F9C7FDF45FE3E67447334C67">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BTintFromOartLumModAndOffset() in oartoss.h is declared to return an unsigned value, but on line 120 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartoss.h</FileName>
<FilePath>dev/word/inc/oartoss.h</FilePath>
<LineStart>120</LineStart>
<Snippet>
	// We add nMaxOartLumModAndOffset/2 to the numerator for proper rounding
	return nLumOff != 0
			? (nLumMod * nMaxWordTintShade + nMaxOartLumModAndOffset/2) / nMaxOartLumModAndOffset // Tint
			: nMaxWordTintShade; // No tint</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EFFC676C277D7FCB3FF5AFF606654F0A">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BWordDelimiterCore() in stmmisc.cpp is declared to return an unsigned value, but on line 697 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stmmisc.cpp</FileName>
<FilePath>dev/word/client/shared/stmmisc.cpp</FilePath>
<LineStart>697</LineStart>
<Snippet>	case xchPubEnDash:				return fForCSSBuffer ? splRepeatBreak : splCantBegin | splRepeatBreak;
	case xchPubLDblQuote:			return fForCSSBuffer ? splRepeatBreak : splCantBegin | splRepeatBreak;
	case xchPubRDblQuote:			return fForCSSBuffer ? splRepeatBreak : splCantBegin | splRepeatBreak;
	case xchInvQMark:				return (fForCSSBuffer || LidBase(lid) == LidBase(lidSpanish)) ? splRepeatBreak : splCantBegin | splRepeatBreak;		//  0xBF
	case xchInvExclaimMark:			return (fForCSSBuffer || LidBase(lid) == LidBase(lidSpanish)) ? splRepeatBreak : splCantBegin | splRepeatBreak;		//  0xA1</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="938592F48352C1CFE462ACE045C72CB1">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function DxaTotalColWidthSpacing() in columns.cpp is declared to return an unsigned value, but on line 1033 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>columns.cpp</FileName>
<FilePath>dev/word/client/shared/columns.cpp</FilePath>
<LineStart>1033</LineStart>
<Snippet>
	if (vsepFetch.pginfo.fEvenlySpaced)
		return (vsepFetch.pginfo.dxaColumnWidth+vsepFetch.pginfo.ccolM1*(vsepFetch.pginfo.dxaColumnWidth+vsepFetch.pginfo.dxaColumns));

	return DxaTotalColWidthSpacingRgdxa(vsepFetch.pginfo.rgdxaColWidthSpacing, vsepFetch.pginfo.ccolM1+1);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="26265A779E9BFC21E3ED29BD14581178">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FrrFetchRecODSOPmd() in pmhfetch.cpp is declared to return an unsigned value, but on line 4833 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhfetch.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhfetch.cpp</FilePath>
<LineStart>4833</LineStart>
<Snippet>	AssertTag(ppmf-&gt;iRecCache == ppmd-&gt;pms.iRecCur, ASSERTTAG('dyfx'));

	return frr;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="D5DDC14595FD8B452634A801A21DF1B0">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IudrFromIudrExcludeDisabled() in obproof.cpp is declared to return an unsigned value, but on line 2985 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obproof.cpp</FileName>
<FilePath>dev/word/client/desktop/obproof.cpp</FilePath>
<LineStart>2985</LineStart>
<Snippet>			{
			AssertTag(fFalse, 0x001c8183 /* tag_ahigd */); // We couldn't get the path of this guy?
			return cudr + 1;
			}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="58F290F934FCB1A2E852195C0DD8424F">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function AddRef() in aar.cpp is declared to return an unsigned value, but on line 1539 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>aar.cpp</FileName>
<FilePath>dev/word/client/desktop/aar.cpp</FilePath>
<LineStart>1539</LineStart>
<Snippet>{
	AssertTag(m_cRef &gt; 0, ASSERTTAG('cw6d'));
	return InterlockedIncrement(reinterpret_cast&lt;LONG *&gt;(&amp;m_cRef));
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EDF1126584F689364260A798D0278E7F">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListZoomPaperSize() in print1.cpp is declared to return an unsigned value, but on line 706 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>print1.cpp</FileName>
<FilePath>dev/word/client/desktop/print1.cpp</FilePath>
<LineStart>706</LineStart>
<Snippet>		{
	case tmmCount:
		return (hsttbPaperSizes != hNil ? IbstMacSttb(hsttbPaperSizes) : 0);

	case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="9AA1FA78ACA18EA9525A4A71FFD3971C">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WBorderApplyTo() in border.cpp is declared to return an unsigned value, but on line 5483 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>border.cpp</FileName>
<FilePath>dev/word/client/desktop/border.cpp</FilePath>
<LineStart>5483</LineStart>
<Snippet>
		pceBorder-&gt;cApply = cEntry;
		return cEntry;
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="16F0E8A97372F9A1E9DABF66386CB1DC">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IbstLkMacFont() in file.cpp is declared to return an unsigned value, but on line 10591 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>file.cpp</FileName>
<FilePath>dev/word/core/file.cpp</FilePath>
<LineStart>10591</LineStart>
<Snippet>		}

	return ibst;

}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="89C0DD8676DABD791867D3C63D0BFA99">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FrrFetchInitFilePmd() in pmhfetch.cpp is declared to return an unsigned value, but on line 3164 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhfetch.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhfetch.cpp</FilePath>
<LineStart>3164</LineStart>
<Snippet>
	// Setup for fetch
	return (FInitFetchRecFds((FDS *)pfrc, lppmf-&gt;pdodData, lppmfs-&gt;tkField, lppmfs-&gt;tkRec,
		lppmf-&gt;cpFirstData, lppmf-&gt;cpLimData, lppmf-&gt;lpsql, itapOuter));
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="99D568987D5A7F3809DA95ED19C87E67">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListACX() in glsy.cpp is declared to return an unsigned value, but on line 2639 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>glsy.cpp</FileName>
<FilePath>dev/word/client/desktop/glsy.cpp</FilePath>
<LineStart>2639</LineStart>
<Snippet>	case tmmText:
		// REVIEW: KevSon: Do I need to worry about ixchMax being 0?
		return (FNextACXception(IacxListForTmc(tmc), isz, fTrue, xsz, ixchMax - cchExtraXsz));
		}
	return 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="0B43CFBF7399E8F064F58BC2879F4769">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListStyleApply() in fmtpane.cpp is declared to return an unsigned value, but on line 7927 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fmtpane.cpp</FileName>
<FilePath>dev/word/client/desktop/fmtpane.cpp</FilePath>
<LineStart>7927</LineStart>
<Snippet>	case tmmCount:
		AssertTag(pNil != hcab, ASSERTTAG('3p2a'));
		return pdodNil != pdod &amp;&amp; hsttbNil != HsttbStyleListCore(pdod, stkAll, sltStyleApplyPane) ? 
				IbstMacSttb(HsttbStyleListCore(pdod, stkAll, sltStyleApplyPane)) : 0;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="6BB88899B775F17A92127914D7897425">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XchSmartQuoteFromXchXch() in replace.cpp is declared to return an unsigned value, but on line 145 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>replace.cpp</FileName>
<FilePath>dev/word/client/shared/replace.cpp</FilePath>
<LineStart>145</LineStart>
<Snippet>	case '&lt;':
LOpen:
		return (fDQuote ? XchOpenDSmartQuote(LidInstall()) : xchSOpenQuote);
		}
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="A7769FB73214E10A782AEDEC5414CD07">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListFilledEntblStt() in dlbenum.cpp is declared to return an unsigned value, but on line 1003 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlbenum.cpp</FileName>
<FilePath>dev/word/client/desktop/dlbenum.cpp</FilePath>
<LineStart>1003</LineStart>
<Snippet>			}

		return csz;
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="C80A99D0C02DB3AC46F2CE72BCA184A0">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _WListStringArray() in mstudlg.cpp is declared to return an unsigned value, but on line 2605 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>mstudlg.cpp</FileName>
<FilePath>dev/word/client/desktop/mstudlg.cpp</FilePath>
<LineStart>2605</LineStart>
<Snippet>		{
	case tmmCount:
		return IbstMacSttb(hsttb);

	case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="4162F665C3E103FA0F69D46F5EFC8ECF">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ElkUserFromSt() in mlisym.cpp is declared to return an unsigned value, but on line 66 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>mlisym.cpp</FileName>
<FilePath>dev/word/client/desktop/mlisym.cpp</FilePath>
<LineStart>66</LineStart>
<Snippet>
LRet:
	return ibst + elkMinUser;
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="B477A76343EB76085191DCC217288EDB">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListBdrPnl() in border.cpp is declared to return an unsigned value, but on line 4515 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>border.cpp</FileName>
<FilePath>dev/word/client/desktop/border.cpp</FilePath>
<LineStart>4515</LineStart>
<Snippet>		{
	case tmmCount:
		return _fSubDlg ? citswSub : IdslMacFromStt(sttBorderSwitch);

	case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EFFC676C277D7FCB3FF5AFF606654EFF">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BWordDelimiterCore() in stmmisc.cpp is declared to return an unsigned value, but on line 686 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stmmisc.cpp</FileName>
<FilePath>dev/word/client/shared/stmmisc.cpp</FilePath>
<LineStart>686</LineStart>
<Snippet>		{
//	case xchNonBreakSpace:			return splWhiteSpace | splRepeatBreak;		//  0xA0
	case xchPubEmDash:				return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;
	case xchEllipsis:				return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;
	case xchParagraphSign:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		//  visible paragraph mark</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="8F2ADC1FE5E17A6617B8D5D4B83023E9">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListTocLeader() in toc.cpp is declared to return an unsigned value, but on line 3603 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>toc.cpp</FileName>
<FilePath>dev/word/client/desktop/toc.cpp</FilePath>
<LineStart>3603</LineStart>
<Snippet>		{
	case tmmCount:
		return FRevealFarEast() ? cidsTocLeader : cidsTocLeader - 1;

	case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EFFC676C277D7FCB3FF5AFF606654F0B">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BWordDelimiterCore() in stmmisc.cpp is declared to return an unsigned value, but on line 698 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stmmisc.cpp</FileName>
<FilePath>dev/word/client/shared/stmmisc.cpp</FilePath>
<LineStart>698</LineStart>
<Snippet>	case xchPubLDblQuote:			return fForCSSBuffer ? splRepeatBreak : splCantBegin | splRepeatBreak;
	case xchPubRDblQuote:			return fForCSSBuffer ? splRepeatBreak : splCantBegin | splRepeatBreak;
	case xchInvQMark:				return (fForCSSBuffer || LidBase(lid) == LidBase(lidSpanish)) ? splRepeatBreak : splCantBegin | splRepeatBreak;		//  0xBF
	case xchInvExclaimMark:			return (fForCSSBuffer || LidBase(lid) == LidBase(lidSpanish)) ? splRepeatBreak : splCantBegin | splRepeatBreak;		//  0xA1
	case xchTrademark:				return splCantEnd | splRepeatBreak;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="D0265A143A3AC0BD18D5B9554972291B">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function DyaPageFromPgsuPcab() in pgsetup.cpp is declared to return an unsigned value, but on line 7969 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pgsetup.cpp</FileName>
<FilePath>dev/word/client/desktop/pgsetup.cpp</FilePath>
<LineStart>7969</LineStart>
<Snippet>			}

		return yaColumns;
		}
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EDA3D687D675ABA156054CF2D6BA8B2C">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _WListSpPropsPages() in filline.cpp is declared to return an unsigned value, but on line 4833 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>filline.cpp</FileName>
<FilePath>dev/word/client/desktop/filline.cpp</FilePath>
<LineStart>4833</LineStart>
<Snippet>      
		// the -1 ignores the horizontal lines tab
		return IdslMacFromStt(sttSpProps) - 1;

	case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EF92914519C475E65DFD83AE16F5565C">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IdBtnMsgBoxAlert() in msgbox.cpp is declared to return an unsigned value, but on line 1341 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>msgbox.cpp</FileName>
<FilePath>dev/word/client/desktop/msgbox.cpp</FilePath>
<LineStart>1341</LineStart>
<Snippet>	FreeStack(xstzMsg);

	return idRet;
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="90BBE644FD33FF932941C86B529D1F16">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function LszCreateProc() in heap.cpp is declared to return an unsigned value, but on line 330 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>heap.cpp</FileName>
<FilePath>dev/word/core/heap.cpp</FilePath>
<LineStart>330</LineStart>
<Snippet>_Ret_maybenull_ _BindReturn_ LSZ LszCreateProc(DEBUGPARAMS const char *lsz) throw0
{
	return (LSZ)LrgbCreateProc(DEBUGPARAMUSE (const void *)lsz, CbSz(lsz));
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="8FFEECF437FFA138860294C3D9ACA763">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IdataFromChpc() in fcc.cpp is declared to return an unsigned value, but on line 1165 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fcc.cpp</FileName>
<FilePath>dev/word/client/desktop/fcc.cpp</FilePath>
<LineStart>1165</LineStart>
<Snippet>
		if (FEqRgb(&amp;ftcc.chpc, pchpc, sizeof(CHPC)))
			return i;
		}
	return iNil;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="B3BEB102AFE300B74D46A81ABD709720">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XchKatakana() in dbcs.cpp is declared to return an unsigned value, but on line 1085 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dbcs.cpp</FileName>
<FilePath>dev/word/core/dbcs.cpp</FilePath>
<LineStart>1085</LineStart>
<Snippet>	// Assert(FEnvJapan());
	if (FBetween(xch, wchHiraganaFirst, wchHiraganaLast))
		return (xch + wchKatakanaFirst - wchHiraganaFirst);
	else if (FBetween(xch, wchHiraganaRepeatFirst, wchHiraganaRepeatLast))	/* repeat symbol */
		return (xch + wchKatakanaRepeatFirst - wchHiraganaRepeatFirst);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="98929A0D3EA045AAE3354015ECA8F20B">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function GrfloFromFss() in format.cpp is declared to return an unsigned value, but on line 4152 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>format.cpp</FileName>
<FilePath>dev/word/core/format.cpp</FilePath>
<LineStart>4152</LineStart>
<Snippet>GRFLO GrfloFromFss(struct FSS *pfss) throw0
{
	return pfss-&gt;pfsclient-&gt;fRightL ? floRight : grfloNil;
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="6EC6E54A7E5716C5818B77BC1933455B">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListAutoManStt() in cust.cpp is declared to return an unsigned value, but on line 3160 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cust.cpp</FileName>
<FilePath>dev/word/client/desktop/cust.cpp</FilePath>
<LineStart>3160</LineStart>
<Snippet>			XszFromIds(IdsFromSttIdsl(sttAutoMan, itsw), xsz, ixchMax - cchExtraXsz);

		return FEnabledAutoManItsw(itsw);
		}
	return 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="B3BEB102AFE300B74D46A81ABD709721">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XchKatakana() in dbcs.cpp is declared to return an unsigned value, but on line 1087 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dbcs.cpp</FileName>
<FilePath>dev/word/core/dbcs.cpp</FilePath>
<LineStart>1087</LineStart>
<Snippet>		return (xch + wchKatakanaFirst - wchHiraganaFirst);
	else if (FBetween(xch, wchHiraganaRepeatFirst, wchHiraganaRepeatLast))	/* repeat symbol */
		return (xch + wchKatakanaRepeatFirst - wchHiraganaRepeatFirst);

	return xch; /* could not convert */</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="5E208B79141629D0816469B310D96A1B">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function LvlwkbFromDocCp() in outcore.cpp is declared to return an unsigned value, but on line 159 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>outcore.cpp</FileName>
<FilePath>dev/word/core/outcore.cpp</FilePath>
<LineStart>159</LineStart>
<Snippet>			return wkb.lvl;
		else
			return (wkb.lvl - 1);
		} // if
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="DF14E3BF9F0FB0AC95055AE41F4F8949">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListEntbl() in dlbenum.cpp is declared to return an unsigned value, but on line 1334 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlbenum.cpp</FileName>
<FilePath>dev/word/client/desktop/dlbenum.cpp</FilePath>
<LineStart>1334</LineStart>
<Snippet>
	case tmmText:
		return FEnumIEntblXsz(wParam, isz, xsz, ixchMax-cchExtraXsz);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="AFEC103D8ADFE82293ED78E79E54459A">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function AddRef() in metroin.cpp is declared to return an unsigned value, but on line 123 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>metroin.cpp</FileName>
<FilePath>dev/word/core/metroin.cpp</FilePath>
<LineStart>123</LineStart>
<Snippet>unsigned long CMP::AddRef() throw0
{
	return ++m_cRef;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="DDCF1E03CE85A9EAC65638B95CB07136">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HpsFromSz() in sym.cpp is declared to return an unsigned value, but on line 36 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>sym.cpp</FileName>
<FilePath>dev/word/core/sym.cpp</FilePath>
<LineStart>36</LineStart>
<Snippet>		}
	hps += hps + (ch == ChFromXch(vitr.xchDecimal) - '0' &amp;&amp; *sz == '5');
	return hps &lt; hpsMinValid &amp;&amp; hps != 0 ? hpsMinValid : hps;
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="2BBA7BB4DF2280E0E254DCCBC8AEEA20">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicPgsuSampleProc() in pgsetup.cpp is declared to return an unsigned value, but on line 3955 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pgsetup.cpp</FileName>
<FilePath>dev/word/client/desktop/pgsetup.cpp</FilePath>
<LineStart>3955</LineStart>
<Snippet>		if (!MsoFRunningSDMDAL())
			{
			return FSetupHdcBmpTmc(tmc, fFalse);
			}
		else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EFFC676C277D7FCB3FF5AFF606654F01">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BWordDelimiterCore() in stmmisc.cpp is declared to return an unsigned value, but on line 688 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stmmisc.cpp</FileName>
<FilePath>dev/word/client/shared/stmmisc.cpp</FilePath>
<LineStart>688</LineStart>
<Snippet>	case xchPubEmDash:				return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;
	case xchEllipsis:				return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;
	case xchParagraphSign:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		//  visible paragraph mark
	case xchOpenChevron:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		
	case xchCloseChevron:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="9446785AF876752786EA5E2C0EDA529F">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicColSampleProc() in columns.cpp is declared to return an unsigned value, but on line 956 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>columns.cpp</FileName>
<FilePath>dev/word/client/desktop/columns.cpp</FilePath>
<LineStart>956</LineStart>
<Snippet>		if (!MsoFRunningSDMDAL())
			{
			return FSetupHdcBmpTmc(tmc, fFalse);
			}
		else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="30209B0C58AA513B7027CAD116E8860E">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListGetIndexForActivateAs() in ecddlg.cpp is declared to return an unsigned value, but on line 3564 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ecddlg.cpp</FileName>
<FilePath>dev/word/client/desktop/ecddlg.cpp</FilePath>
<LineStart>3564</LineStart>
<Snippet>			xszBuff++;
			if (FEqNcRgxch(xszClass, xszBuff, CchXsz(xszClass)))
				return isz;
			}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="B6CDCA6A7B386481A5F25D723340C981">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Release() in xmlin.cpp is declared to return an unsigned value, but on line 4407 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmlin.cpp</FileName>
<FilePath>dev/word/core/xmlin.cpp</FilePath>
<LineStart>4407</LineStart>
<Snippet>		delete this;
	
	return cRefT;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="388877DCAD7D6B0181F76A79463EF9E8">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicListSample() in numdlg.cpp is declared to return an unsigned value, but on line 9375 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>numdlg.cpp</FileName>
<FilePath>dev/word/client/desktop/numdlg.cpp</FilePath>
<LineStart>9375</LineStart>
<Snippet>		FreeRtBmp(PrtFromHdcOrNil(HdcFromLUserTmc(tmc)));

		return FSetupHdcBmpTmc(tmc, fTrue);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="119285FD5DCCCA4AB8BDD18F93005D07">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function KcmFromKcModExt() in imecmd.cpp is declared to return an unsigned value, but on line 109 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>imecmd.cpp</FileName>
<FilePath>dev/word/client/shared/imecmd.cpp</FilePath>
<LineStart>109</LineStart>
<Snippet>KCM KcmFromKcModExt(int kc, bool fControl, bool fShift, bool fAlt) throw0
{
	return KcFromKcm(kc)
		| (fControl ? fkmControl : 0)
		| (fShift ? fkmShift : 0)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="5871F055F70031B4B7BC1A163A278CC7">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListATSaveIn() in glossary.cpp is declared to return an unsigned value, but on line 5871 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>glossary.cpp</FileName>
<FilePath>dev/word/client/desktop/glossary.cpp</FilePath>
<LineStart>5871</LineStart>
<Snippet>			if (pcab-&gt;hplgldoc)
				{
				return IMacPl(pcab-&gt;hplgldoc);
				}
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="F5629589D5030A0DCD1B6037CDC4BAB6">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FrrFetchRecExcelPmd() in pmhfetch.cpp is declared to return an unsigned value, but on line 4162 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhfetch.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhfetch.cpp</FilePath>
<LineStart>4162</LineStart>
<Snippet>		}
											    
	return (MmrDoMergePassPmd(lppmd) == mmrOK ? frr : frrError);
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="7866975BACFF8CF7F2B7F4E8B5A52CD2">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListFontStyle() in dlglook1.cpp is declared to return an unsigned value, but on line 5954 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlglook1.cpp</FileName>
<FilePath>dev/word/client/desktop/dlglook1.cpp</FilePath>
<LineStart>5954</LineStart>
<Snippet>		{
	case tmmCount:
		return IbstMacSttb(hsttb);

	case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="69B99F5575B12B76769F37FBC8A38AD2">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function AddRef() in istgwrap.cpp is declared to return an unsigned value, but on line 183 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>istgwrap.cpp</FileName>
<FilePath>dev/word/core/istgwrap.cpp</FilePath>
<LineStart>183</LineStart>
<Snippet>STDMETHODIMP_(DWORD) CIStorageWrapper::AddRef() throw0
{
	return ++m_cRef;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="822374C60DA2F5A498B193EA22338E71">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TbbsBN() in otbbtn.cpp is declared to return an unsigned value, but on line 17229 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>otbbtn.cpp</FileName>
<FilePath>dev/word/client/desktop/otbbtn.cpp</FilePath>
<LineStart>17229</LineStart>
<Snippet>		tbbs = msotbbsUp;

	return tbbs;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="E53299D56948C19AB483F58A87DCE6C8">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function AddRef() in wip.cpp is declared to return an unsigned value, but on line 475 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>wip.cpp</FileName>
<FilePath>dev/word/client/desktop/wip.cpp</FilePath>
<LineStart>475</LineStart>
<Snippet>ULONG STDMETHODCALLTYPE CWordInputPane::AddRef() throw0
{
	return ++m_cRef;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="2A4281F6F6D163D39EBA5C33D0238E54">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicDSSampleProc() in stylecmd.cpp is declared to return an unsigned value, but on line 8724 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stylecmd.cpp</FileName>
<FilePath>dev/word/client/desktop/stylecmd.cpp</FilePath>
<LineStart>8724</LineStart>
<Snippet>		if (!MsoFRunningSDMDAL())
			{
			return FSetupHdcBmpTmc(tmc, fFalse);
			}
		else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EFFC676C277D7FCB3FF5AFF606654F04">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BWordDelimiterCore() in stmmisc.cpp is declared to return an unsigned value, but on line 691 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stmmisc.cpp</FileName>
<FilePath>dev/word/client/shared/stmmisc.cpp</FilePath>
<LineStart>691</LineStart>
<Snippet>	case xchOpenChevron:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		
	case xchCloseChevron:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		
	case xchLowerRQuote:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;	
	case xchLowerRDblQuote:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		
	case 0x2039:					return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		//  left single guillemet</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="0C5D86AAD2A0463F962EB5384CE5B2E6">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IFmtXszExtFromRgEntbl() in dlbenum.cpp is declared to return an unsigned value, but on line 1185 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlbenum.cpp</FileName>
<FilePath>dev/word/client/desktop/dlbenum.cpp</FilePath>
<LineStart>1185</LineStart>
<Snippet>		GetXszExtFromXsz(xsz, xszWildExt, cchMaxFilterExt+1, fFalse /*fMulti*/);
		if (*xszWildExt != 0 &amp;&amp; !FNeNcXsz(xszWildExt, xszExt))
			return iFmt;
		iFmt++;
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="89F085281256F53D6D1438B0683F1BB0">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XchFromChAnsi() in extchar.cpp is declared to return an unsigned value, but on line 857 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>extchar.cpp</FileName>
<FilePath>dev/word/core/extchar.cpp</FilePath>
<LineStart>857</LineStart>
<Snippet>
	if (!(ch &amp; 0x80))
		return (ch);

	if (FFarEastCpg(Mso::Platform::MsoGetACP()))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="9F857E9AB229969D12B7BD0FF3D05579">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WRenderZoomSamplePic() in preview.cpp is declared to return an unsigned value, but on line 2620 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>preview.cpp</FileName>
<FilePath>dev/word/client/desktop/preview.cpp</FilePath>
<LineStart>2620</LineStart>
<Snippet>		if (!MsoFRunningSDMDAL())
			{
			return FSetupHdcBmpTmc(tmc, fFalse);
			}
		else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="BBA4CA8425CDF3442300D8299257C2ED">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListMeasureOptions() in splitter.cpp is declared to return an unsigned value, but on line 2089 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>splitter.cpp</FileName>
<FilePath>dev/word/client/desktop/splitter.cpp</FilePath>
<LineStart>2089</LineStart>
<Snippet>		{
	case tmmCount:
		return plmo-&gt;cids;

	case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="99A2FF45474D7D1532D3D3B2901DF56D">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function AddRef() in ole2srvr.cpp is declared to return an unsigned value, but on line 752 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ole2srvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ole2srvr.cpp</FilePath>
<LineStart>752</LineStart>
<Snippet>	DbgPrintConst(L&quot;WWSERVEROBJ::InnerAddRef&quot;);

	return ++m_cRef;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="569D96AF8D78266ED8CDB1387241E728">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListAutoTextEntries() in letters.cpp is declared to return an unsigned value, but on line 4381 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>letters.cpp</FileName>
<FilePath>dev/word/client/desktop/letters.cpp</FilePath>
<LineStart>4381</LineStart>
<Snippet>		{
		if (pcab-&gt;rghsttbAT[wParam])
			return IbstMacSttb(pcab-&gt;rghsttbAT[wParam]);
						
		return 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="9F857E9AB229969D12B7BD0FF3D0557A">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WRenderZoomSamplePic() in preview.cpp is declared to return an unsigned value, but on line 2642 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>preview.cpp</FileName>
<FilePath>dev/word/client/desktop/preview.cpp</FilePath>
<LineStart>2642</LineStart>
<Snippet>		FreeRtBmp(PrtFromHdcOrNil(HdcFromLUserTmc(tmc)));

		return FSetupHdcBmpTmc(tmc, fFalse);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="C4BB71C99232C8CE1DF27E021103C2A9">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FHaltBackgroundGrammar() in grammar.cpp is declared to return an unsigned value, but on line 856 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>grammar.cpp</FileName>
<FilePath>dev/word/client/desktop/grammar.cpp</FilePath>
<LineStart>856</LineStart>
<Snippet>
	if (FFSFactoidCheck())
		return (FUpdateFSFactoidCheck(cpNil) ? fFalse : fTrue);

	if (!FContinueIdle(mtyIdle))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="C6D80BC7889EDD7835BD80963D44598F">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CbEldi() in mstudlg.cpp is declared to return an unsigned value, but on line 291 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>mstudlg.cpp</FileName>
<FilePath>dev/word/client/desktop/mstudlg.cpp</FilePath>
<LineStart>291</LineStart>
<Snippet>			{
			AssertTag(_lpeldiUser != lpNil, ASSERTTAG('dmyu'));
			return CbOfPv(_lpeldiUser);
			}
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="388877DCAD7D6B0181F76A79463EF9E7">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicListSample() in numdlg.cpp is declared to return an unsigned value, but on line 9362 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>numdlg.cpp</FileName>
<FilePath>dev/word/client/desktop/numdlg.cpp</FilePath>
<LineStart>9362</LineStart>
<Snippet>		if (!MsoFRunningSDMDAL())
			{
			return FSetupHdcBmpTmc(tmc, fTrue);
			}
		else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="6FEA556094F0F87565FCCB7DA75859D3">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListEnclose() in cmd3.cpp is declared to return an unsigned value, but on line 13471 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>13471</LineStart>
<Snippet>		{
	case tmmCount:
		return IbstMacSttb(vhsttbEnclose);

	case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="8B7A7B0A995C7A7B29984042C5FD2CDE">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListEntblCap() in dlbenum.cpp is declared to return an unsigned value, but on line 1368 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlbenum.cpp</FileName>
<FilePath>dev/word/client/desktop/dlbenum.cpp</FilePath>
<LineStart>1368</LineStart>
<Snippet>	case tmmCount:
		if ((wParam &gt;= iEntblMin) &amp;&amp; (wParam &lt; iEntblMax))
			return rgpEntbl[wParam]-&gt;iMax - 1;
		else
			return -1;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="58F000E6BB96FD91E187E3FD89C0ED02">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListPattern() in pattdlg.cpp is declared to return an unsigned value, but on line 57 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pattdlg.cpp</FileName>
<FilePath>dev/word/client/desktop/pattdlg.cpp</FilePath>
<LineStart>57</LineStart>
<Snippet>	case tmmCount:
		{
		return _hmpilbedlgpatipat == hNil ?
			ipatOldMax : _cmpilbedlgpatipat;
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EFFC676C277D7FCB3FF5AFF606654F00">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BWordDelimiterCore() in stmmisc.cpp is declared to return an unsigned value, but on line 687 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stmmisc.cpp</FileName>
<FilePath>dev/word/client/shared/stmmisc.cpp</FilePath>
<LineStart>687</LineStart>
<Snippet>//	case xchNonBreakSpace:			return splWhiteSpace | splRepeatBreak;		//  0xA0
	case xchPubEmDash:				return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;
	case xchEllipsis:				return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;
	case xchParagraphSign:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		//  visible paragraph mark
	case xchOpenChevron:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="DC35C8DEB4C37AF4B6757DB6E56834B1">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListPaperSize() in pgsetup.cpp is declared to return an unsigned value, but on line 4350 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pgsetup.cpp</FileName>
<FilePath>dev/word/client/desktop/pgsetup.cpp</FilePath>
<LineStart>4350</LineStart>
<Snippet>		{
	case tmmCount:
		return (hsttbPaperSizes != hNil ? IbstMacSttb(hsttbPaperSizes) : 0);

	case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="A24A760644B2EFEAC3E03FD33403DD74">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IVisiFlm() in wpref.cpp is declared to return an unsigned value, but on line 1179 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>wpref.cpp</FileName>
<FilePath>dev/word/core/wpref.cpp</FilePath>
<LineStart>1179</LineStart>
<Snippet>	_GetIrf(irfVisiFlm, &amp;flm, iDefault /* fDefault */);
	m_grpfvisi.SetFlm(flm);
	return m_grpfvisi.Flm();
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="09B3D97F13D8F92B291153A5E825A3B4">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IstdEnvFromIstdEnvReg() in stmmisc.cpp is declared to return an unsigned value, but on line 449 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stmmisc.cpp</FileName>
<FilePath>dev/word/client/shared/stmmisc.cpp</FilePath>
<LineStart>449</LineStart>
<Snippet>		{
		if (rgenvinfo[i].iStdEnvReg == istdEnvReg)
			return i;
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="E910F796BBEFD3A3328B9434B4344019">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListLinks() in editlink.cpp is declared to return an unsigned value, but on line 3874 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>editlink.cpp</FileName>
<FilePath>dev/word/client/desktop/editlink.cpp</FilePath>
<LineStart>3874</LineStart>
<Snippet>
	case tmmCount:
		return (ClinkInRglinkinfo((*(HCABEDITLINKS)HcabDlgCur())-&gt;
				hrglinkinfo));
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="5AE5FB70FDB7B56B1161C5434767F7E4">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicEnvelopeSample() in envelope.cpp is declared to return an unsigned value, but on line 4329 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>envelope.cpp</FileName>
<FilePath>dev/word/client/desktop/envelope.cpp</FilePath>
<LineStart>4329</LineStart>
<Snippet>		FreeRtBmp(PrtFromHdcOrNil(HdcFromLUserTmc(tmc)));

		return FSetupHdcBmpTmc(tmc, fFalse);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="3EFB09884C72DB86FF958138FBA2969B">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function KcmFromWW20Kc() in cdsfile.cpp is declared to return an unsigned value, but on line 1991 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cdsfile.cpp</FileName>
<FilePath>dev/word/core/cdsfile.cpp</FilePath>
<LineStart>1991</LineStart>
<Snippet>{
	// ctrl and shift bits are swapped
	return ((kc20 &amp; 0x100) &lt;&lt; 1) | ((kc20 &amp; 0x200) &gt;&gt; 1) | (kc20 &amp; 0x04FF);

}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="F00B054EF39BEA6BA791A75FB6A73D40">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TextboxStoryIndexFromTxid() in worde2oclientdata.cpp is declared to return an unsigned value, but on line 411 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>worde2oclientdata.cpp</FileName>
<FilePath>dev/word/core/wdoart/worde2oclientdata.cpp</FilePath>
<LineStart>411</LineStart>
<Snippet>   ) throw0
{
   return HIWORD( txid ) - 1;
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="156950ED08A860DDE635B93E1E4D0665">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function AddRef() in obtom.cpp is declared to return an unsigned value, but on line 1635 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obtom.cpp</FileName>
<FilePath>dev/word/client/desktop/obtom.cpp</FilePath>
<LineStart>1635</LineStart>
<Snippet>STDMETHODIMP_(ULONG) CTextStrings::AddRef() throw0
{
	return ++m_cRef;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="BA73DE7891024DB195EAE66863335343">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListLabelIntlSizes() in label.cpp is declared to return an unsigned value, but on line 4085 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>label.cpp</FileName>
<FilePath>dev/word/client/desktop/label.cpp</FilePath>
<LineStart>4085</LineStart>
<Snippet>		{
	case tmmCount:
		return PipgsvsFromPrnType(pceenvlabel-&gt;fPgPrn)-&gt;CVendors();
	case tmmText:
		if (ixchMax &lt; cxchExtraXsz)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="907ACEA9F6B05BFD72F1DC6209A96775">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function GrfloFromPr() in format.cpp is declared to return an unsigned value, but on line 4134 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>format.cpp</FileName>
<FilePath>dev/word/core/format.cpp</FilePath>
<LineStart>4134</LineStart>
<Snippet>GRFLO GrfloFromPr(struct PR **hpr) throw0
{
	return (*hpr)-&gt;FRight() ? floRight : grfloNil;
}
#endif // !METROCNV</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EDA3D687D675ABA156054CF2D6BA8B2B">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _WListSpPropsPages() in filline.cpp is declared to return an unsigned value, but on line 4826 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>filline.cpp</FileName>
<FilePath>dev/word/client/desktop/filline.cpp</FilePath>
<LineStart>4826</LineStart>
<Snippet>
	if (FHRSel(pcespp-&gt;psel, pNil, pNil))
		return WListSpPropsPagesHR(tmm, xsz, ixchMax-cxchExtraXsz, isz);

	switch (tmm)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="50463D88089CA6D330609A5F0BF28EF7">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicLabelDetails() in label.cpp is declared to return an unsigned value, but on line 3219 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>label.cpp</FileName>
<FilePath>dev/word/client/desktop/label.cpp</FilePath>
<LineStart>3219</LineStart>
<Snippet>		if (!MsoFRunningSDMDAL())
			{
			return FSetupLabelHdcHbmTmc(tmcLabelDetailsPic);
			}
		else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="2288D538323BEAB9C62EAA989B20EEB5">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FillSourceDocTransPositions() in translationparser.cpp is declared to return an unsigned value, but on line 464 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>translationparser.cpp</FileName>
<FilePath>dev/word/core/translationparser.cpp</FilePath>
<LineStart>464</LineStart>
<Snippet>		}

	return IMacPl(ptpidplp-&gt;hplantn);
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="011C00CFA58A26CA273A08E756BA7439">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListFldTabs() in insfield.cpp is declared to return an unsigned value, but on line 1025 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>insfield.cpp</FileName>
<FilePath>dev/word/client/desktop/insfield.cpp</FilePath>
<LineStart>1025</LineStart>
<Snippet>		{
	case tmmCount:
		return _CPanels();

	case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="AF734463DA709BE4FBEA13535E87C9FE">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IEntblPgWWFromNfc() in stmmisc.cpp is declared to return an unsigned value, but on line 2706 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stmmisc.cpp</FileName>
<FilePath>dev/word/client/desktop/stmmisc.cpp</FilePath>
<LineStart>2706</LineStart>
<Snippet>	if (i &lt; (sizeof(mpientblpgwwnfc)/sizeof(int)))
		{
		return i;
		}
	else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="A55AD4757961BEB8AC01015B580AF31D">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _EltLookupXstz() in medtok.cpp is declared to return an unsigned value, but on line 1354 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>medtok.cpp</FileName>
<FilePath>dev/word/client/desktop/medtok.cpp</FilePath>
<LineStart>1354</LineStart>
<Snippet>		elt = eltNil;

	return elt;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="43F04B564F20A8B389BF5407423DFF7D">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicInsPgNumSampleProc() in hddcmd.cpp is declared to return an unsigned value, but on line 2490 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>hddcmd.cpp</FileName>
<FilePath>dev/word/client/desktop/hddcmd.cpp</FilePath>
<LineStart>2490</LineStart>
<Snippet>		if (!MsoFRunningSDMDAL())
			{
			return FSetupHdcBmpTmc(tmc, fFalse);
			}
		else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="373AA05E3C18EA532D9A05B1E5B81827">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function AddRef() in proof.cpp is declared to return an unsigned value, but on line 2252 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>proof.cpp</FileName>
<FilePath>dev/word/client/shared/proof.cpp</FilePath>
<LineStart>2252</LineStart>
<Snippet>STDMETHODIMP_(ULONG) PTCLP::AddRef() throw0
{
	return ++m_cRef;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="8652EB7676F887EBAE76DBEE11BBF374">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WpmsFromDoc() in MailMerge.cpp is declared to return an unsigned value, but on line 270 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>MailMerge.cpp</FileName>
<FilePath>dev/word/core/MailMerge.cpp</FilePath>
<LineStart>270</LineStart>
<Snippet>
	if (!FMailMergeMainPdod(doc))
		return (doc-&gt;pud-&gt;lppmff ? wpmsDataDoc : wpmsNorm);

	if ((lppmd = LppmdFromPdod(doc)) != lpNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="2BBA7BB4DF2280E0E254DCCBC8AEEA21">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicPgsuSampleProc() in pgsetup.cpp is declared to return an unsigned value, but on line 3968 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pgsetup.cpp</FileName>
<FilePath>dev/word/client/desktop/pgsetup.cpp</FilePath>
<LineStart>3968</LineStart>
<Snippet>		FreeRtBmp(PrtFromHdcOrNil(HdcFromLUserTmc(tmc)));

		return FSetupHdcBmpTmc(tmc, fFalse);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="F7781B378652B717E7E7B6808018136A">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function KulSingleFromLineStyleBold() in oartodf.cpp is declared to return an unsigned value, but on line 7048 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartodf.cpp</FileName>
<FilePath>dev/word/core/oartodf.cpp</FilePath>
<LineStart>7048</LineStart>
<Snippet>		{
		case ODF::odfStyleLineStyleDash:
			return fBold ? kulDashedHeavy : kulDashLine;
		case ODF::odfStyleLineStyleDotDash:
			return fBold ? kulDotDashHeavy : kulDotDashLine;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="F5CE9A4DA8E480E3BA675DE0712E2F22">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function LbcCmpLboxMath() in glsy.cpp is declared to return an unsigned value, but on line 1397 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>glsy.cpp</FileName>
<FilePath>dev/word/client/desktop/glsy.cpp</FilePath>
<LineStart>1397</LineStart>
<Snippet>	if (w &lt; 0)
		{
		return FXszPrefixIsXsz(XszFromXstz(*(XCHAR **)ppxstz2),
				XszFromXstz(*(XCHAR **)ppxstz1)) ? lbcPrefix : lbcLt;
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="7871C1BC643F470BCCFAE43691FCACE5">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function UScanCode() in keyevent.cpp is declared to return an unsigned value, but on line 225 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>keyevent.cpp</FileName>
<FilePath>dev/word/client/desktop/keyevent.cpp</FilePath>
<LineStart>225</LineStart>
<Snippet>UINT CKeyEvent::UScanCode() const throw0
{
	return (m_pmsg-&gt;lParam &amp; 0x00ff0000) &gt;&gt; 16;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="3010003E4E1E69199220E1877B1B03D3">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function DxaLineFromPgsuPcab() in pgsetup.cpp is declared to return an unsigned value, but on line 7910 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pgsetup.cpp</FileName>
<FilePath>dev/word/client/desktop/pgsetup.cpp</FilePath>
<LineStart>7910</LineStart>
<Snippet>			}

		return xaColumns;
		}
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="289018AA07FDDBDFF17FBF550C5CF3D6">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicLabelSample() in label.cpp is declared to return an unsigned value, but on line 3057 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>label.cpp</FileName>
<FilePath>dev/word/client/desktop/label.cpp</FilePath>
<LineStart>3057</LineStart>
<Snippet>		FreeRtBmp(PrtFromHdcOrNil(HdcFromLUserTmc(tmc)));

		return FSetupHdcBmpTmc(tmc, fFalse);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EFFC676C277D7FCB3FF5AFF606654F07">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BWordDelimiterCore() in stmmisc.cpp is declared to return an unsigned value, but on line 694 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stmmisc.cpp</FileName>
<FilePath>dev/word/client/shared/stmmisc.cpp</FilePath>
<LineStart>694</LineStart>
<Snippet>	case xchLowerRDblQuote:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		
	case 0x2039:					return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		//  left single guillemet
	case 0x203A:					return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		//  right single guillemet
	case xchPubEnDash:				return fForCSSBuffer ? splRepeatBreak : splCantBegin | splRepeatBreak;
	case xchPubLDblQuote:			return fForCSSBuffer ? splRepeatBreak : splCantBegin | splRepeatBreak;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="672DC08407A93FA7CE4D73CECDAAFD7E">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Release() in cssin.cpp is declared to return an unsigned value, but on line 134 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cssin.cpp</FileName>
<FilePath>dev/word/core/cssin.cpp</FilePath>
<LineStart>134</LineStart>
<Snippet>		delete this;
		
	return ret;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="A45A6931F0E0EE6D172DD7B4E53B29F0">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FigdkFromFigu() in figu.cpp is declared to return an unsigned value, but on line 197 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>figu.cpp</FileName>
<FilePath>dev/word/core/figu.cpp</FilePath>
<LineStart>197</LineStart>
<Snippet>		}

	return FigdkBuild(FigekFromFiguk(figu.figuk), FigpkBuild(figanc, tTxbx, tChild, tDO));
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="E36CE9EC2B6B6AEE6D2F11D837EA3F24">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function TbbsMenu() in otbbtn.cpp is declared to return an unsigned value, but on line 18614 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>otbbtn.cpp</FileName>
<FilePath>dev/word/client/desktop/otbbtn.cpp</FilePath>
<LineStart>18614</LineStart>
<Snippet>	else
		tbbs = TbbsFromCid(cid, pic);
	return tbbs;
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="95997878E27426D66A724706783305FE">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function AddRef() in cssin.cpp is declared to return an unsigned value, but on line 114 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cssin.cpp</FileName>
<FilePath>dev/word/core/cssin.cpp</FilePath>
<LineStart>114</LineStart>
<Snippet>STDMETHODIMP_(DWORD) OCIU::AddRef() throw0
{
	return ++(this-&gt;cRef);
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="46F4472A9A4421C5F83B869589F0BC91">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListFontSubPair() in fontui.cpp is declared to return an unsigned value, but on line 1524 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fontui.cpp</FileName>
<FilePath>dev/word/client/desktop/fontui.cpp</FilePath>
<LineStart>1524</LineStart>
<Snippet>					}
				case tmmCount:
					return CUnavl(lpfsib);
				case tmmText:
					XszFontSubPair(lpfsib, isz, xsz, ixchMax - cxchExtraXsz);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="8B10935C9BAEADCDF9C78D429D9F8994">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XchNormDigit() in dbcs.cpp is declared to return an unsigned value, but on line 1143 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dbcs.cpp</FileName>
<FilePath>dev/word/core/dbcs.cpp</FilePath>
<LineStart>1143</LineStart>
<Snippet>
	if (FBetween(xch, wchThaiNum0, wchThaiNum9))
		return xch - wchThaiNum0 + '0';

	if (FBetween(xch, wchHindiNum0, wchHindiNum9))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="8B10935C9BAEADCDF9C78D429D9F8993">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XchNormDigit() in dbcs.cpp is declared to return an unsigned value, but on line 1140 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dbcs.cpp</FileName>
<FilePath>dev/word/core/dbcs.cpp</FilePath>
<LineStart>1140</LineStart>
<Snippet>
	if (FBetween(xch, wchNum0, wchNum9))
		return xch - wchNum0 + '0';

	if (FBetween(xch, wchThaiNum0, wchThaiNum9))</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="CFD3E5BBED6E2F00AA32ACD6B6C44F86">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XchUpperInvariant() in htmlin.cpp is declared to return an unsigned value, but on line 12542 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmlin.cpp</FileName>
<FilePath>dev/word/core/htmlin.cpp</FilePath>
<LineStart>12542</LineStart>
<Snippet>XCHAR XchUpperInvariant(XCHAR xch) throw0
{
	return (xch &gt;= 'a' &amp;&amp; xch &lt;= 'z') ? ('A' + (xch - 'a')) : xch;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="F7781B378652B717E7E7B6808018136D">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function KulSingleFromLineStyleBold() in oartodf.cpp is declared to return an unsigned value, but on line 7054 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartodf.cpp</FileName>
<FilePath>dev/word/core/oartodf.cpp</FilePath>
<LineStart>7054</LineStart>
<Snippet>			return fBold ? kul2DotDashHeavy : kul2DotDashLine;
		case ODF::odfStyleLineStyleDotted:
			return fBold ? kulDottedHeavy : kulDotted;
		case ODF::odfStyleLineStyleLongDash:
			return fBold ? kulDashLongHeavy : kulDashLong;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="F7781B378652B717E7E7B6808018136C">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function KulSingleFromLineStyleBold() in oartodf.cpp is declared to return an unsigned value, but on line 7052 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartodf.cpp</FileName>
<FilePath>dev/word/core/oartodf.cpp</FilePath>
<LineStart>7052</LineStart>
<Snippet>			return fBold ? kulDotDashHeavy : kulDotDashLine;
		case ODF::odfStyleLineStyleDotDotDash:
			return fBold ? kul2DotDashHeavy : kul2DotDashLine;
		case ODF::odfStyleLineStyleDotted:
			return fBold ? kulDottedHeavy : kulDotted;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="DEDCB5E5026AFFBE42D29E77D1A2D3B9">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CbWriteArtoData() in savefast.cpp is declared to return an unsigned value, but on line 5101 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>savefast.cpp</FileName>
<FilePath>dev/word/core/savefast.cpp</FilePath>
<LineStart>5101</LineStart>
<Snippet>#endif // !NOTYET

	return PfcbFn(fn)-&gt;xwstm.rgfcPos[istm] - fcDest;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="08E28052E63644090F98C8D7139FD6F4">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function KulDoubleFromLineStyleBold() in oartodf.cpp is declared to return an unsigned value, but on line 7086 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartodf.cpp</FileName>
<FilePath>dev/word/core/oartodf.cpp</FilePath>
<LineStart>7086</LineStart>
<Snippet>			return kulDouble; // No bold double variation, therefore, just plain double
		case ODF::odfStyleLineStyleWave:
			return fBold ? kulDouble : kulWaveDouble; // No bold double wave, therefore, plain double
		case ODF::odfStyleLineStyleDash:
		case ODF::odfStyleLineStyleDotDash:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="50463D88089CA6D330609A5F0BF28EF8">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicLabelDetails() in label.cpp is declared to return an unsigned value, but on line 3233 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>label.cpp</FileName>
<FilePath>dev/word/client/desktop/label.cpp</FilePath>
<LineStart>3233</LineStart>
<Snippet>		FreeLabelHdcHbmTmc(tmcLabelDetailsPic);

		return FSetupLabelHdcHbmTmc(tmcLabelDetailsPic);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="7C27A1069B1612EEEC290742249274BF">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function InternalAddRef() in wink.cpp is declared to return an unsigned value, but on line 121 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>wink.cpp</FileName>
<FilePath>dev/word/core/wink.cpp</FilePath>
<LineStart>121</LineStart>
<Snippet>ULONG WINK::InternalAddRef() throw0
{
	return InterlockedIncrement(&amp;m_cRef);
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EFFC676C277D7FCB3FF5AFF606654F03">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BWordDelimiterCore() in stmmisc.cpp is declared to return an unsigned value, but on line 690 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stmmisc.cpp</FileName>
<FilePath>dev/word/client/shared/stmmisc.cpp</FilePath>
<LineStart>690</LineStart>
<Snippet>	case xchParagraphSign:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		//  visible paragraph mark
	case xchOpenChevron:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		
	case xchCloseChevron:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		
	case xchLowerRQuote:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;	
	case xchLowerRDblQuote:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="670B06B345379F0E7690E4791C0A5361">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IEntblInsWWFromNfc() in stmmisc.cpp is declared to return an unsigned value, but on line 2017 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stmmisc.cpp</FileName>
<FilePath>dev/word/client/desktop/stmmisc.cpp</FilePath>
<LineStart>2017</LineStart>
<Snippet>	if (i &lt; (sizeof(mpientblinswwnfc)/sizeof(int)))
		{
		return i;
		}
	else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="2A4281F6F6D163D39EBA5C33D0238E55">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicDSSampleProc() in stylecmd.cpp is declared to return an unsigned value, but on line 8737 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stylecmd.cpp</FileName>
<FilePath>dev/word/client/desktop/stylecmd.cpp</FilePath>
<LineStart>8737</LineStart>
<Snippet>		FreeRtBmp(PrtFromHdcOrNil(HdcFromLUserTmc(tmc)));

		return FSetupHdcBmpTmc(tmc, fFalse);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="4C8C58FA8E54E1369A9FCD5F6BE41249">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XchFromCh() in extchar.cpp is declared to return an unsigned value, but on line 830 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>extchar.cpp</FileName>
<FilePath>dev/word/core/extchar.cpp</FilePath>
<LineStart>830</LineStart>
<Snippet>
	if (!(ch &amp; 0x80))
		return (ch);

	AssertDoTag(MsoMultiByteToWideChar(CP_DEFAULT,</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="C594CA3A40C87F34FE229811498CFD83">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XchFromChLid() in extchar.cpp is declared to return an unsigned value, but on line 890 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>extchar.cpp</FileName>
<FilePath>dev/word/core/extchar.cpp</FilePath>
<LineStart>890</LineStart>
<Snippet>
	if (!(ch &amp; 0x80))
		return (ch);

</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="386A6802B28E79C344D985DFCA75F45C">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WWMListEntblStt() in autosig.cpp is declared to return an unsigned value, but on line 1508 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>autosig.cpp</FileName>
<FilePath>dev/word/client/desktop/autosig.cpp</FilePath>
<LineStart>1508</LineStart>
<Snippet>	// it hence we don't totally remove it. We hide it except when macro is active.
	case tmmCount:
		return vfMacroActive ? IdslMacFromStt(wParam) : max(IdslMacFromStt(wParam) - 1, 0);

	case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="C07F02D1C932AECC3F3328AC617AA5FB">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function LidPsel() in cmdlang.cpp is declared to return an unsigned value, but on line 160 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmdlang.cpp</FileName>
<FilePath>dev/word/client/shared/cmdlang.cpp</FilePath>
<LineStart>160</LineStart>
<Snippet>		}

	return (0 == psel-&gt;fUpdateChp) ? psel-&gt;chp.lid : lidUnknown;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="56A53D0FEF1943961A8AC54FD72505CE">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _RGBFromHue() in color.cpp is declared to return an unsigned value, but on line 100 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>color.cpp</FileName>
<FilePath>dev/word/core/color.cpp</FilePath>
<LineStart>100</LineStart>
<Snippet>		return (n1 + (((n2 - n1) * hue + (hlsMax / 12)) / (hlsMax / 6)));
	if (hue &lt; (hlsMax / 2))
		return (n2);
	if (hue &lt; ((hlsMax * 2) / 3))
		return (n1 + (((n2 - n1) * (((hlsMax * 2) / 3) - hue) + (hlsMax / 12)) / (hlsMax / 6)));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="87FE23AB9DCB50564AC7AB85A78F4E66">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function KcmModifiedKc() in cdscmd.cpp is declared to return an unsigned value, but on line 4452 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cdscmd.cpp</FileName>
<FilePath>dev/word/client/shared/cdscmd.cpp</FilePath>
<LineStart>4452</LineStart>
<Snippet>KCM	KcmModifiedKc(int kc) throw0
{
	return KcFromKcm(kc) | (vgrfkmCur &amp;	grfkmMods);
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="1EF37C233CA14120DD451AE3AFAA93D1">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CbOleGet() in ecdutil.cpp is declared to return an unsigned value, but on line 492 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ecdutil.cpp</FileName>
<FilePath>dev/word/client/win32/ecdutil.cpp</FilePath>
<LineStart>492</LineStart>
<Snippet>		}

	return lcbTransfer;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="F7781B378652B717E7E7B6808018136E">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function KulSingleFromLineStyleBold() in oartodf.cpp is declared to return an unsigned value, but on line 7056 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartodf.cpp</FileName>
<FilePath>dev/word/core/oartodf.cpp</FilePath>
<LineStart>7056</LineStart>
<Snippet>			return fBold ? kulDottedHeavy : kulDotted;
		case ODF::odfStyleLineStyleLongDash:
			return fBold ? kulDashLongHeavy : kulDashLong;
		case ODF::odfStyleLineStyleNone:
		case ODF::odfStyleLineStyleSolid:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="6835BCBB822B98B5AAC3FA20153729F5">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _XchFromPcab() in symbol.cpp is declared to return an unsigned value, but on line 2086 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>symbol.cpp</FileName>
<FilePath>dev/word/client/desktop/symbol.cpp</FilePath>
<LineStart>2086</LineStart>
<Snippet>
			if (HighByte(xch))
				return FInstallFarEast() ? XchFromWchCpg(xch, cpg) : 0;
			else
				return XchFromChCpg((uchar)xch, cpg);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="54315CEEA7D265269968D7B3865678CD">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IblwFromBrcTypeDpt() in border.cpp is declared to return an unsigned value, but on line 2417 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>border.cpp</FileName>
<FilePath>dev/word/client/shared/border.cpp</FilePath>
<LineStart>2417</LineStart>
<Snippet>				{
				if (mpblwdpt[plsti-&gt;rgblw[iblw]] &gt;= dptLineWidth)
					return iblw;
				}
			break;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="7F8064F397EDEC77C98C908291AF6BD7">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function LFastSqrtL() in formatsp.cpp is declared to return an unsigned value, but on line 1724 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>formatsp.cpp</FileName>
<FilePath>dev/word/core/formatsp.cpp</FilePath>
<LineStart>1724</LineStart>
<Snippet>#undef FS

	return(lO + (lO &lt; lI));
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="C0FA8CBE06407F4E7AF03DE545059FA9">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IlinkSearchXch() in editlink.cpp is declared to return an unsigned value, but on line 3536 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>editlink.cpp</FileName>
<FilePath>dev/word/client/desktop/editlink.cpp</FilePath>
<LineStart>3536</LineStart>
<Snippet>			}
		if (XchUpper(**hInfo) == xch)
			return ilinkCur;
		}
	return (ilbeNil);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EFFC676C277D7FCB3FF5AFF606654F09">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BWordDelimiterCore() in stmmisc.cpp is declared to return an unsigned value, but on line 696 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stmmisc.cpp</FileName>
<FilePath>dev/word/client/shared/stmmisc.cpp</FilePath>
<LineStart>696</LineStart>
<Snippet>	case 0x203A:					return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		//  right single guillemet
	case xchPubEnDash:				return fForCSSBuffer ? splRepeatBreak : splCantBegin | splRepeatBreak;
	case xchPubLDblQuote:			return fForCSSBuffer ? splRepeatBreak : splCantBegin | splRepeatBreak;
	case xchPubRDblQuote:			return fForCSSBuffer ? splRepeatBreak : splCantBegin | splRepeatBreak;
	case xchInvQMark:				return (fForCSSBuffer || LidBase(lid) == LidBase(lidSpanish)) ? splRepeatBreak : splCantBegin | splRepeatBreak;		//  0xBF</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="F7781B378652B717E7E7B68080181370">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function KulSingleFromLineStyleBold() in oartodf.cpp is declared to return an unsigned value, but on line 7061 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartodf.cpp</FileName>
<FilePath>dev/word/core/oartodf.cpp</FilePath>
<LineStart>7061</LineStart>
<Snippet>			return fBold ? kulThick : kulSingle;
		case ODF::odfStyleLineStyleWave:
			return fBold ? kulWaveHeavy : kulWave;
		default:
			NotReachedTag(ASSERTTAG('99tf'));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="164655EFF97F12ABEFF7083594A9549E">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BlsFromBrcType() in bdrcore.cpp is declared to return an unsigned value, but on line 471 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>bdrcore.cpp</FileName>
<FilePath>dev/word/core/bdrcore.cpp</FilePath>
<LineStart>471</LineStart>
<Snippet>			plsti = &amp;_mpblslsti[bls];
			if (plsti-&gt;brcType == brcType)
				return bls;
			}
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="1D09045BDA4C16AAEE7DD7B93138E3AA">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function LbcCmpLboxCore() in dialog1.cpp is declared to return an unsigned value, but on line 1563 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dialog1.cpp</FileName>
<FilePath>dev/word/client/desktop/dialog1.cpp</FilePath>
<LineStart>1563</LineStart>
<Snippet>	if (w &lt; 0)
		{
		return FXszPrefixIsXsz(XszFromXstz(*(XCHAR **)ppxstz2), 
				XszFromXstz(*(XCHAR **)ppxstz1)) ? lbcPrefix : lbcLt;
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="5492CAE0EDEB65B99C7BC1D4FA2A12A0">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CchResolveURL() in xmldraw.cpp is declared to return an unsigned value, but on line 8593 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>xmldraw.cpp</FileName>
<FilePath>dev/word/core/xmldraw.cpp</FilePath>
<LineStart>8593</LineStart>
<Snippet>	if (wzURL != wzURLAbs)
		CopyXsz(wzURL, wzURLAbs, cch);
	return CchXsz(wzURLAbs);
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="3127179A5E966841C3B8547518691754">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListLabelNumber() in label.cpp is declared to return an unsigned value, but on line 4175 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>label.cpp</FileName>
<FilePath>dev/word/client/desktop/label.cpp</FilePath>
<LineStart>4175</LineStart>
<Snippet>		}
		}
	return iRet;

}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="3A03B405A5FE240F581A2CFA772A61FC">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Release() in metrocommon.cpp is declared to return an unsigned value, but on line 431 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>metrocommon.cpp</FileName>
<FilePath>dev/word/core/metrocommon.cpp</FilePath>
<LineStart>431</LineStart>
<Snippet>		delete this;
	
	return cRef;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="663F97FD0E1A53EAC871F6F16443D7F4">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CbSizePv() in ofc.cpp is declared to return an unsigned value, but on line 56 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ofc.cpp</FileName>
<FilePath>dev/word/core/ofc.cpp</FilePath>
<LineStart>56</LineStart>
<Snippet>size_t __stdcall Ofc::CbSizePv(const void *pv) throw0
{
	return CbOfPv(pv);
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="04976B3CE1C883758CFC91B690594208">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BTintOrShadeFromPctTintOrShade() in ossword.cpp is declared to return an unsigned value, but on line 769 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ossword.cpp</FileName>
<FilePath>dev/word/core/ossword.cpp</FilePath>
<LineStart>769</LineStart>
<Snippet>	// Any fractional part is rounded down (truncated) to be symmetric
	// with PctTintOrShadeFromBTintOrShade.
	return (pctTintOrShade * 255 / 100);
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="C181DDAFFF8EB20D98C4CCC0E8528632">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function AddRef() in UIScrollingLayerListener.cpp is declared to return an unsigned value, but on line 39 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>UIScrollingLayerListener.cpp</FileName>
<FilePath>dev/word/endpoints/metro/dll/ui/UIScrollingLayerListener.cpp</FilePath>
<LineStart>39</LineStart>
<Snippet>unsigned int CUIScrollingLayerListener::AddRef() throw0
{
	return ++m_cRef;
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="13A2BA001B40E653C8888C92869F145F">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Release() in obtom.cpp is declared to return an unsigned value, but on line 1654 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obtom.cpp</FileName>
<FilePath>dev/word/client/desktop/obtom.cpp</FilePath>
<LineStart>1654</LineStart>
<Snippet>		return 0;
		}
	return m_cRef;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="8B10935C9BAEADCDF9C78D429D9F8995">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XchNormDigit() in dbcs.cpp is declared to return an unsigned value, but on line 1146 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dbcs.cpp</FileName>
<FilePath>dev/word/core/dbcs.cpp</FilePath>
<LineStart>1146</LineStart>
<Snippet>
	if (FBetween(xch, wchHindiNum0, wchHindiNum9))
		return xch - wchHindiNum0 + '0';	

	switch(xch)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="D1FDF648DAE869187718F0F34BE2061C">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ZaGetUnit() in htmldoc.cpp is declared to return an unsigned value, but on line 7543 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>htmldoc.cpp</FileName>
<FilePath>dev/word/core/htmldoc.cpp</FilePath>
<LineStart>7543</LineStart>
<Snippet>		AssertTag(dxp != 0, ASSERTTAG('b7vy'));

		return dxaInch / dxp;
		}
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="9446785AF876752786EA5E2C0EDA52A0">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicColSampleProc() in columns.cpp is declared to return an unsigned value, but on line 969 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>columns.cpp</FileName>
<FilePath>dev/word/client/desktop/columns.cpp</FilePath>
<LineStart>969</LineStart>
<Snippet>		FreeRtBmp(PrtFromHdcOrNil(HdcFromLUserTmc(tmc)));

		return FSetupHdcBmpTmc(tmc, fFalse);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="F7781B378652B717E7E7B6808018136B">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function KulSingleFromLineStyleBold() in oartodf.cpp is declared to return an unsigned value, but on line 7050 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartodf.cpp</FileName>
<FilePath>dev/word/core/oartodf.cpp</FilePath>
<LineStart>7050</LineStart>
<Snippet>			return fBold ? kulDashedHeavy : kulDashLine;
		case ODF::odfStyleLineStyleDotDash:
			return fBold ? kulDotDashHeavy : kulDotDashLine;
		case ODF::odfStyleLineStyleDotDotDash:
			return fBold ? kul2DotDashHeavy : kul2DotDashLine;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="25CCA8F576FC0C4CFA1E71E3F7DCE7E5">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function MsecBlinkCaret() in idle.cpp is declared to return an unsigned value, but on line 2607 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>idle.cpp</FileName>
<FilePath>dev/word/client/desktop/idle.cpp</FilePath>
<LineStart>2607</LineStart>
<Snippet>			msec = msecNoBlink;
		}
	return msec;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="C0FA8CBE06407F4E7AF03DE545059FA8">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IlinkSearchXch() in editlink.cpp is declared to return an unsigned value, but on line 3526 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>editlink.cpp</FileName>
<FilePath>dev/word/client/desktop/editlink.cpp</FilePath>
<LineStart>3526</LineStart>
<Snippet>			}
		if (XchUpper(**hInfo) == xch)
			return ilinkCur;
		}
	for (ilinkCur = 0; ilinkCur &lt; ilink; ilinkCur++)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="0C5D86AAD2A0463F962EB5384CE5B2E7">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IFmtXszExtFromRgEntbl() in dlbenum.cpp is declared to return an unsigned value, but on line 1209 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlbenum.cpp</FileName>
<FilePath>dev/word/client/desktop/dlbenum.cpp</FilePath>
<LineStart>1209</LineStart>
<Snippet>			GetXszExtFromXsz(xsz, xszWildExt, cchMaxFilterExt+1, fFalse /*fMulti*/);
			if (*xszWildExt != 0 &amp;&amp; !FNeNcXsz(xszWildExt, xszExt))
				return iFmt;
			iFmt++;
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="2523CFAEAF7A96EAC242DE2CBC5F6BC1">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WBorderArt() in border.cpp is declared to return an unsigned value, but on line 7978 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>border.cpp</FileName>
<FilePath>dev/word/client/desktop/border.cpp</FilePath>
<LineStart>7978</LineStart>
<Snippet>	case tmmCount:
		// Show &quot;none,&quot; we'll describe the rest later
		return _fbArt.fInited ? _fbArt.cFancyLbox : 1;

	case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="3A03B405A5FE240F581A2CFA772A61FD">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Release() in offstm.cpp is declared to return an unsigned value, but on line 90 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>offstm.cpp</FileName>
<FilePath>dev/word/core/offstm.cpp</FilePath>
<LineStart>90</LineStart>
<Snippet>	AssertTag(poffstm-&gt;fn != fnNil, ASSERTTAG('dtcg'));
	if (--poffstm-&gt;cRef &gt; 0)
		return poffstm-&gt;cRef;

	if (poffstm-&gt;fAllocated)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="289018AA07FDDBDFF17FBF550C5CF3D5">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicLabelSample() in label.cpp is declared to return an unsigned value, but on line 3044 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>label.cpp</FileName>
<FilePath>dev/word/client/desktop/label.cpp</FilePath>
<LineStart>3044</LineStart>
<Snippet>		if (!MsoFRunningSDMDAL())
			{
			return FSetupHdcBmpTmc(tmc, fFalse);
			}
		else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="00C3EE5105CECBCB009554E7CCD870F6">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function AddRef() in obvbe.cpp is declared to return an unsigned value, but on line 5564 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>obvbe.cpp</FileName>
<FilePath>dev/word/client/desktop/obvbe.cpp</FilePath>
<LineStart>5564</LineStart>
<Snippet>MSOMETHODIMP_(ULONG) CIHOST::AddRef() throw0
{
	return ++m_cref;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="6DFAC58692778F272CB9E027C765C0BD">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function Release() in proof.cpp is declared to return an unsigned value, but on line 2271 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>proof.cpp</FileName>
<FilePath>dev/word/client/shared/proof.cpp</FilePath>
<LineStart>2271</LineStart>
<Snippet>		return 0;
	}
	return m_cRef;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="4449BD84ABF0409085031588F0437363">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CbGetRegionData() in rtimrgn.cpp is declared to return an unsigned value, but on line 479 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtimrgn.cpp</FileName>
<FilePath>dev/word/core/rtimrgn.cpp</FilePath>
<LineStart>479</LineStart>
<Snippet>	if (prd == pNil)
		{
		return cbrd;
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EA88F9D4D0807D00EEB63D987DF325C4">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IcpsdFromFci() in cpanel.cpp is declared to return an unsigned value, but on line 84 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cpanel.cpp</FileName>
<FilePath>dev/word/client/desktop/cpanel.cpp</FilePath>
<LineStart>84</LineStart>
<Snippet>		(*pcpi-&gt;pfnCpsdiFromIcpsd)(pcpi, &amp;cpsdi, icpsd);
		if (FciFromCpsdi(&amp;cpsdi) == fci)
			return icpsd;
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="B23EA4725BDF4F92203C8AECBDDD2C80">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _WListEnc() in enctext.cpp is declared to return an unsigned value, but on line 2502 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>enctext.cpp</FileName>
<FilePath>dev/word/client/desktop/enctext.cpp</FilePath>
<LineStart>2502</LineStart>
<Snippet>		{
	case tmmCount:
		return CCpg(PetfiCur()-&gt;fSave);
	case tmmText:
		AssertDoTag(penl = PenlFromI(isz, PetfiCur()-&gt;fSave), ASSERTTAG('dasb'));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="39C14478CBC6320073E61F6F428A8538">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicTextFlowSample() in dlglook1.cpp is declared to return an unsigned value, but on line 14558 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlglook1.cpp</FileName>
<FilePath>dev/word/client/desktop/dlglook1.cpp</FilePath>
<LineStart>14558</LineStart>
<Snippet>		FreeRtBmp(PrtFromHdcOrNil(HdcFromLUserTmc(tmc)));

		return FSetupHdcBmpTmc(tmc, fFalse);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="3D6F5AB7832CC91A340877B229253E6A">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BShadeFromOartLumModAndOffset() in oartoss.h is declared to return an unsigned value, but on line 137 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartoss.h</FileName>
<FilePath>dev/word/inc/oartoss.h</FilePath>
<LineStart>137</LineStart>
<Snippet>
	// We add nMaxOartLumModAndOffset/2 to the numerator for proper rounding
	return nLumOff != 0
			? nMaxWordTintShade // No shade
			: (nLumMod * nMaxWordTintShade + nMaxOartLumModAndOffset/2) / nMaxOartLumModAndOffset; // Shade</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="CF41B63D42D3F1E62044C5333BB1320A">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IdslMacFromStt() in ostrglue.cpp is declared to return an unsigned value, but on line 421 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ostrglue.cpp</FileName>
<FilePath>dev/word/core/ostrglue.cpp</FilePath>
<LineStart>421</LineStart>
<Snippet>IDSL IdslMacFromStt(STT stt) throw0
{
	return MsoIdslMacFromStt(vhinstIntl, stt);
}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="50847CA401534D298FFFDB949FC10493">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function InnerRelease() in ole2srvr.cpp is declared to return an unsigned value, but on line 733 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ole2srvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ole2srvr.cpp</FilePath>
<LineStart>733</LineStart>
<Snippet>ULONG WWSERVEROBJ::InnerRelease() throw0
{
	return --m_cRefBogus;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="867005059E455CCEF89624D390105522">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CbOlePut() in ecdutil.cpp is declared to return an unsigned value, but on line 513 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ecdutil.cpp</FileName>
<FilePath>dev/word/client/win32/ecdutil.cpp</FilePath>
<LineStart>513</LineStart>
<Snippet>		return LcbWriteOleRtf(lpstream, /* temp */(char *)hpSrc, lcbPut);
	else
		return LcbOleTransfer(lpstream, /* temp */(BYTE *)hpSrc, lcbPut, fTrue/*fWrite*/);
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="43F04B564F20A8B389BF5407423DFF7E">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicInsPgNumSampleProc() in hddcmd.cpp is declared to return an unsigned value, but on line 2503 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>hddcmd.cpp</FileName>
<FilePath>dev/word/client/desktop/hddcmd.cpp</FilePath>
<LineStart>2503</LineStart>
<Snippet>		FreeRtBmp(PrtFromHdcOrNil(HdcFromLUserTmc(tmc)));

		return FSetupHdcBmpTmc(tmc, fFalse);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="1FC9A3DDB518DF28371D602C18B0305D">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FrrFetchRecODBCPmd() in pmhfetch.cpp is declared to return an unsigned value, but on line 4396 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhfetch.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhfetch.cpp</FilePath>
<LineStart>4396</LineStart>
<Snippet>
	AssertTag(lppmf-&gt;iRecCache == lppmd-&gt;pms.iRecCur, ASSERTTAG('dyfq'));
	return ((MmrDoMergePassPmd(lppmd) == mmrOK) ? frr : frrError); 
#else
	return frrError;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="EFFC676C277D7FCB3FF5AFF606654F02">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function BWordDelimiterCore() in stmmisc.cpp is declared to return an unsigned value, but on line 689 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stmmisc.cpp</FileName>
<FilePath>dev/word/client/shared/stmmisc.cpp</FilePath>
<LineStart>689</LineStart>
<Snippet>	case xchEllipsis:				return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;
	case xchParagraphSign:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		//  visible paragraph mark
	case xchOpenChevron:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		
	case xchCloseChevron:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;		
	case xchLowerRQuote:			return fForCSSBuffer ? splRepeatBreak : splWhiteSpace | splRepeatBreak;	</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="7E157154DF304981B8351C1046EB107E">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WLibraryListEntblStt() in library.cpp is declared to return an unsigned value, but on line 608 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>library.cpp</FileName>
<FilePath>dev/word/client/desktop/library.cpp</FilePath>
<LineStart>608</LineStart>
<Snippet>	// it hence we don't totally remove it. We hide it except when macro is active.
	case tmmCount:
		return vfMacroActive ? IdslMacFromStt(wParam) : IdslMacFromStt(wParam) - 2;

	case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="13108E002A2A7A25A623006F39DAFAE4">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _WListPropPages() in propsht.cpp is declared to return an unsigned value, but on line 1145 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>propsht.cpp</FileName>
<FilePath>dev/word/client/desktop/propsht.cpp</FilePath>
<LineStart>1145</LineStart>
<Snippet>		{
	case tmmCount:
		return _PspMax(ppsrs);

	case tmmText:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="FC39519C-2A34-401B-B2E2-0DA256246C35" iid="39C14478CBC6320073E61F6F428A8537">
                            <Category>Type Mismatch: Signed to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WPicTextFlowSample() in dlglook1.cpp is declared to return an unsigned value, but on line 14545 it returns a signed value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>dlglook1.cpp</FileName>
<FilePath>dev/word/client/desktop/dlglook1.cpp</FilePath>
<LineStart>14545</LineStart>
<Snippet>		if (!MsoFRunningSDMDAL())
			{
			return FSetupHdcBmpTmc(tmc, fFalse);
			}
		else</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                    </GroupingSection>
                    <GroupingSection count="39">
                        <groupTitle>Unreleased Resource</groupTitle>
                        <MajorAttributeSummary>
                            <MetaInfo>
<Name>Abstract</Name>
<Value>The program can potentially fail to release a system resource.</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Explanation</Name>
<Value>The program can potentially fail to release a system resource. 

Resource leaks have at least two common causes:

- Error conditions and other exceptional circumstances.

- Confusion over which part of the program is responsible for releasing the resource.

Most unreleased resource issues result in general software reliability problems, but if an attacker can intentionally trigger a resource leak, the attacker might be able to launch a denial of service by depleting the resource pool.

Example: The following function does not close the file handle it opens if an error occurs. If the process is long-lived, the process can run out of file handles.


int decodeFile(char* fName)
{
    char buf[BUF_SZ];
    FILE* f = fopen(fName, &quot;r&quot;);
    
    if (!f) {
        printf(&quot;cannot open %s\n&quot;, fName);
        return DECODE_FAIL;
    } else {
        while (fgets(buf, BUF_SZ, f)) {
            if (!checkChecksum(buf)) {
              return DECODE_FAIL;
            } else {
              decodeBlock(buf);
            }
        }
    }
    fclose(f);
    return DECODE_SUCCESS;
}
</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Recommendations</Name>
<Value>Because resource leaks can be hard to track down, establish a set of resource management patterns and idioms for your software and do not tolerate deviations from your conventions.

One good pattern for addressing the error handling mistake in this example is to use forward-reaching goto statements so that the function has a single well-defined region for handling errors, as follows:


int decodeFile(char* fName)
{
    char buf[BUF_SZ];
    FILE* f = fopen(fName, &quot;r&quot;);
    
    if (!f) {
      goto ERR;  
    } else {
        while (fgets(buf, BUF_SZ, f)) {
            if (!checkChecksum(buf)) {
              goto ERR;
            } else {
              decodeBlock(buf);
            }
        }
    }
    fclose(f);
    return DECODE_SUCCESS;

    ERR:
    if (!f) {
      printf(&quot;cannot open %s\n&quot;, fName);
    } else {
      fclose(f);
    }
    return DECODE_FAIL;
}
</Value>
                            </MetaInfo>
                            <AttributeValue>
<Name>&lt;Unaudited&gt;</Name>
<Count>39</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Not an Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Reliability Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Bad Practice</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Suspicious</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Exploitable</Name>
<Count>0</Count>
                            </AttributeValue>
                        </MajorAttributeSummary>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="E467E55CCC8C57FEAF05EC142D4A97BB">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FProcessMetafileDataOrMasqueradingPic() in pic.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 901.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pic.cpp</FileName>
<FilePath>dev/word/client/win32/pic.cpp</FilePath>
<LineStart>920</LineStart>
<Snippet>		}
	// note: failure implies bogus metafile: abort
	if (!FComputePictSize(pmfp, pdx, pdy))
		{
		WinGlobUnlock(hData);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="66980B6BC2B1E2450D989A1F7C7A00B2">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FProcessMetafileDataOrMasqueradingPic() in pic.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 901.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pic.cpp</FileName>
<FilePath>dev/word/client/win32/pic.cpp</FilePath>
<LineStart>901</LineStart>
<Snippet>	HANDLE hData = (HANDLE) pvData;	
	METAFILEPICT *pmfp;
	if ((pmfp = (METAFILEPICT *)WinGlobLock(hData)) == pNil)
		return fFalse;
	</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="DF06199BB73327146A006779A3FA641B">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HandlePicData() in rtfin.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 8722.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin.cpp</FilePath>
<LineStart>8722</LineStart>
<Snippet>				ChangeSexStructMac((char *)&amp;mpict, 1, cbMPICT, csmMPICT);
				
				*(MPICT *)(lpch = (LPCH)WinGlobLock(h)) = mpict;
				MoveRgb(rgbEmptyPict, lpch + cbMPICT, sizeof(rgbEmptyPict));
				WinGlobUnlock(h);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="F8E30A07FDC768397E9889D91C3CF2D1">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FServerDdeMsg() in ddesrvr.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 233.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ddesrvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ddesrvr.cpp</FilePath>
<LineStart>246</LineStart>
<Snippet>							if (FAssign(xszNew = (XCHAR *)WinGlobLock(hNew)))
								{
								SzToXsz(szDDE, xszNew, cb - 1, CP_SYSTEM);			
								AssertDoTag(Debug(!)WinGlobUnlock(h), ASSERTTAG('crkh'));
								AssertDoTag(Debug(!)WinGlobFree(h), ASSERTTAG('crki'));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="7B5120FAF1A83D5C59506F57A5A1970A">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FRtfInsPublisher() in rtfrare.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 2730.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfrare.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfrare.cpp</FilePath>
<LineStart>2730</LineStart>
<Snippet>		goto LRet;

	lpchData = (CHAR *)WinGlobLock((**hribl).hAlias);
	lcbData = mpsd.cbAlias;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="7C04908B014059EA5758EA7D203CAC86">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HGetDataIodtCreate() in olesubs2.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 2637.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>olesubs2.cpp</FileName>
<FilePath>dev/word/client/desktop/olesubs2.cpp</FilePath>
<LineStart>2637</LineStart>
<Snippet>
			// override object's size if requested.
			pmfp = (METAFILEPICT *)WinGlobLock(hData);
			if (pmfp)
				{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="BE147B98555F7B80C6327A552CA4DF0F">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HRenderFormatForOleCore() in ecdclnt.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 4133.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ecdclnt.cpp</FileName>
<FilePath>dev/word/client/desktop/ecdclnt.cpp</FilePath>
<LineStart>4133</LineStart>
<Snippet>			if (cf == CF_METAFILEPICT)
				{
				LPMETAFILEPICT lpMfp = (LPMETAFILEPICT)WinGlobLock(hResult);

				if (lpMfp)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="A7426B441EA28B72ED79CA5CB174ACCC">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FServerDdeMsg() in ddesrvr.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 259.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ddesrvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ddesrvr.cpp</FilePath>
<LineStart>282</LineStart>
<Snippet>					cchExtraDDE = CchXsz(xszBeforeDDE) + CchXsz(xszAfterDDE) + 1;

					if (FCompXszPartial(xszFileOpen, xszDDE, fTrue))
						{
						int cxch;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="89E6E731-0647-4FB3-B58B-2A07B5B81744" iid="41E07979340FF61FEEC902666C69F7F1">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FInitTbls() in pmhodbc.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/sql.h###615###0###0&quot;&gt;SQLAllocStmt()&lt;/a&gt; on line 1028.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhodbc.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhodbc.cpp</FilePath>
<LineStart>1028</LineStart>
<Snippet>	HSTMT hstmt;

	if (SQLAllocStmt(hdbc, &amp;hstmt) != SQL_SUCCESS)
		return fFalse;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="7F598ED598E75B1F57BBE813EDE2E511">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FServerDdeMsg() in ddesrvr.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 521.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ddesrvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ddesrvr.cpp</FilePath>
<LineStart>521</LineStart>
<Snippet>
			/*  get the options */
			if ((lpdms = (DMS far *)WinGlobLock (hOptions)) == NULL)
				{
				ReportDdeError (&quot;Cannot lock handle, dropping message&quot;,</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="7F598ED598E75B1F57BBE813EDE2E510">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FServerDdeMsg() in ddesrvr.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 380.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ddesrvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ddesrvr.cpp</FilePath>
<LineStart>380</LineStart>
<Snippet>				{
				/* incoming data--could easily not be lockable */
				lpdms = (DMS far *)WinGlobLock(hData);
				if (lpdms == NULL)
					/* still can't lock it */</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="2C03EAA91F3AB28E5DE1A4F64F049736">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HReadPicNative() in grutil.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 97.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>grutil.cpp</FileName>
<FilePath>dev/word/client/win32/grutil.cpp</FilePath>
<LineStart>97</LineStart>
<Snippet>	if (hData != hgdiNil)
		{
		lpmfp = (LPMFP) WinGlobLock(hData);
		hmf = lpmfp-&gt;hMF;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="89E6E731-0647-4FB3-B58B-2A07B5B81744" iid="2020834ADCE5697A09243742B716EE97">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FOpenODBCPmd() in pmhodbc.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/sql.h###615###0###0&quot;&gt;SQLAllocStmt()&lt;/a&gt; on line 1574.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhodbc.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhodbc.cpp</FilePath>
<LineStart>1574</LineStart>
<Snippet>
	// Allocate a ODBC hstmt
	if ((retcode = SQLAllocStmt(hdbcT, &amp;hstmtT)) != SQL_SUCCESS)
		{
		FrrOutputSqlErrorPmd(lpNil, hdbcT, hstmtT, retcode);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="15EAAEAB894CBEF2C1505CDAF3A78EF7">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FServerDdeMsg() in ddesrvr.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 291.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ddesrvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ddesrvr.cpp</FilePath>
<LineStart>291</LineStart>
<Snippet>							{
							XCHAR *xszNew;
							if (FAssign(xszNew = (XCHAR *)WinGlobLock(hNew)))
								{
								// szFilename = null terminated filename in </Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="89E6E731-0647-4FB3-B58B-2A07B5B81744" iid="6A6A491FC383E9C015F936DD62757141">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FOpenODBCPmd() in pmhodbc.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://dev/word/client/desktop/pmh/pmhodbc.cpp###536###0###0&quot;&gt;FConnectODBC()&lt;/a&gt; on line 1562.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhodbc.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhodbc.cpp</FilePath>
<LineStart>1562</LineStart>
<Snippet>		return fFalse;

	if (!FConnectODBC(&amp;hdbcT, lszConn, &amp;lszConnOut))
		{
LRetErr:</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="03CAC1FEE27AACB28FEEF9D8D30B31A3">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function CmdInsXLCore() in ecdclnt.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 2358.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ecdclnt.cpp</FileName>
<FilePath>dev/word/client/desktop/ecdclnt.cpp</FilePath>
<LineStart>2358</LineStart>
<Snippet>	if (FAssign(hData = WinGlobAlloc(GHND,sizeof(biff3))))
		{
		CopyRgb(&amp;biff3, WinGlobLock(hData), sizeof(biff3));
		FSetDataIodt(psel-&gt;pdod, iodt,cfBiff,hData);
		WinGlobUnlock(hData);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="7D51DB386BF4DDA726DBC58051EE1AF0">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function OnDocInit() in secureReaderClient.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 889.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>secureReaderClient.cpp</FileName>
<FilePath>dev/word/client/desktop/secureReaderClient.cpp</FilePath>
<LineStart>889</LineStart>
<Snippet>
			FailHrGoto(GetHGlobalFromStream(pistmDoc, &amp;hgDoc), _LRet);
			if (rgbDoc.Place(reinterpret_cast&lt;BYTE *&gt;(WinGlobLock(hgDoc)), hgDoc) == pNil)
				FailHrGoto(E_OUTOFMEMORY, _LRet);
			cbDoc = static_cast&lt;DWORD&gt;(WinGlobSize(hgDoc));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="6D3A260D00EAFB45D0CCCCB0BCBA7BEA">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _HpictFetchWord5Pict() in cnvmw.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 3036.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cnvmw.cpp</FileName>
<FilePath>dev/word/client/desktop/cnvmw.cpp</FilePath>
<LineStart>3037</LineStart>
<Snippet>		{
		lpchData = (char *)WinGlobLock(hpict);
		ReadFn(fn, istm, lpchData, lcb);

		MoveRgb(lpchData, (char far *)&amp;pictm5, cbPICTM5);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="89E6E731-0647-4FB3-B58B-2A07B5B81744" iid="768518CB4DAFD44F64E0D012CF852695">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FLoginODBCPmo() in pmhodbc.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://dev/word/client/desktop/pmh/pmhodbc.cpp###536###0###0&quot;&gt;FConnectODBC()&lt;/a&gt; on line 616.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhodbc.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhodbc.cpp</FilePath>
<LineStart>616</LineStart>
<Snippet>	char stzT[cbMaxStz];

	if (!FConnectODBC(&amp;hdbc, lszConn, plszConnOut))
		return fFalse;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="D3105DA223FD9D7B0132F1F48B67C3C6">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ParseShapePropFromRibl() in rtfin.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 10024.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin.cpp</FilePath>
<LineStart>10024</LineStart>
<Snippet>				// Do not assume hex has event bumbers
				cbAlloc = (cchSz + 1) / 2;
				pb = (BYTE *)WinGlobAllocPtr(GPTR, cbAlloc);
				for (iHex = 0, ipb = 0; iHex &lt; cchSz; iHex++)
					{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="49E05EA17D85E87E2D2C73C265F1D1D4">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function _HpictEmpty() in cnvmw.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 3142.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cnvmw.cpp</FileName>
<FilePath>dev/word/client/desktop/cnvmw.cpp</FilePath>
<LineStart>3142</LineStart>
<Snippet>	if ((hpict = WinGlobAlloc(GMEM_MOVEABLE, cbEmptyPict)) != hNil)
		{
		lpchData = (BYTE *)WinGlobLock(hpict);
		MoveRgb((BYTE FAR *)rgbEmptyPict, lpchData, cbEmptyPict);
		WinGlobUnlock(hpict);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="05E459604F0598A81203E8CEFD66F394">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FWriteExtScrap() in clipbrd2.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 297.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>clipbrd2.cpp</FileName>
<FilePath>dev/word/client/desktop/clipbrd2.cpp</FilePath>
<LineStart>297</LineStart>
<Snippet>		if (cf == CF_METAFILEPICT)
			{
			LPMETAFILEPICT lpMFP = (LPMETAFILEPICT) WinGlobLock(h);
			EnsureGDIMetaFileHandle(&amp;lpMFP-&gt;hMF);
			WinGlobUnlock(h);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="42E74FDB12E5054E43DA0C69BF0EFAFF">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function DdeChnlProc() in ddesub.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 410.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ddesub.cpp</FileName>
<FilePath>dev/word/client/desktop/ddesub.cpp</FilePath>
<LineStart>410</LineStart>
<Snippet>
					UnpackDDElParam(WM_DDE_EXECUTE, pdqm-&gt;lParam, &amp;w, (PUINT_PTR)&amp;h);
					p = WinGlobLock(h);
					if (p)
						{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="89E6E731-0647-4FB3-B58B-2A07B5B81744" iid="4396D54EF8882D56A69D099D1C0CA09E">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HsttbODBCMergeFields() in pmhodbc.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/sql.h###615###0###0&quot;&gt;SQLAllocStmt()&lt;/a&gt; on line 2262.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhodbc.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhodbc.cpp</FilePath>
<LineStart>2262</LineStart>
<Snippet>			// Generate a new stmt handle so that we can do a select all
			AssertTag (i == 0, ASSERTTAG('dyjr'));
			if ((retcode = SQLAllocStmt(lppmf-&gt;hdbc, &amp;hstmt)) != SQL_SUCCESS)
				goto LRetSQLErr;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="5C46D6562AC1C1A41FA7F3F25411A84D">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FRtfInsPublisher() in rtfrare.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 2740.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfrare.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfrare.cpp</FilePath>
<LineStart>2746</LineStart>
<Snippet>			lcbData -= (long)wcch, lpchData = LpchIncr(lpchData, (long)wcch))
		{
		FcAppendHprgchToFn(fnScratch, lpchData, (wcch = WcbFromLpchLcb(lpchData, 
				lcbData)));
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="89E6E731-0647-4FB3-B58B-2A07B5B81744" iid="F1B95B62BF876F4D8819D1229CB1AB14">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function RefreshTbl() in pmhodbc.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/sql.h###615###0###0&quot;&gt;SQLAllocStmt()&lt;/a&gt; on line 1314.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>pmhodbc.cpp</FileName>
<FilePath>dev/word/client/desktop/pmh/pmhodbc.cpp</FilePath>
<LineStart>1314</LineStart>
<Snippet>	XszToSz(xsz, rgch, cchMaxSz, CP_SYSTEM);

	if (SQLAllocStmt(hdbc, &amp;hstmt) != SQL_SUCCESS)
		return;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="F852B7464A5821CAD7576E311888FB54">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HdibFromBmp() in grutil.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 56.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>grutil.cpp</FileName>
<FilePath>dev/word/client/win32/grutil.cpp</FilePath>
<LineStart>56</LineStart>
<Snippet>		BITMAPINFO *pbi;

		pbi = (BITMAPINFO *)WinGlobLock(hdib);

		pdibinfo-&gt;bOffBitsDIB = CbDIBHeader(&amp;pbi-&gt;bmiHeader);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="A6D67513DAB18222CE507B95EFAADB10">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function DdeChnlProc() in ddesub.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 417.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ddesub.cpp</FileName>
<FilePath>dev/word/client/desktop/ddesub.cpp</FilePath>
<LineStart>417</LineStart>
<Snippet>						if (hNew)
							{
							pNew = WinGlobLock(hNew);
							if (pNew)
								{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="B197BDE01FF27E2DFFC16AAD44AE1BEA">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FSetRTF() in odraw.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 5418.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>odraw.cpp</FileName>
<FilePath>dev/word/client/desktop/odraw.cpp</FilePath>
<LineStart>5418</LineStart>
<Snippet>	AssertPdodTag(pdod, ASSERTTAG('xtfh'));

	pchT = (char *)WinGlobLock(hg);

	AssertTag(pch != pNil &amp;&amp; pchT != pNil, ASSERTTAG('drze'));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="7F598ED598E75B1F57BBE813EDE2E50F">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FServerDdeMsg() in ddesrvr.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 376.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ddesrvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ddesrvr.cpp</FilePath>
<LineStart>376</LineStart>
<Snippet>				goto LNoAckPoke;
				}
			if ((lpdms = (DMS FAR *)WinGlobLock(hData)) == NULL)
				/*  couldn't lock object, should be rare */
				{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="C514BF0842F0A71764DB9C71A7EA3A61">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function SetOdtHmfpX() in olesubs2.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 6440.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>olesubs2.cpp</FileName>
<FilePath>dev/word/client/desktop/olesubs2.cpp</FilePath>
<LineStart>6440</LineStart>
<Snippet>	ptd = pNil;
	if (lpodt-&gt;m_hicTargetDev)
		ptd = (DVTARGETDEVICE *)WinGlobLock(lpodt-&gt;m_hicTargetDev);
	if (lpodt-&gt;m_lpviewobject != pNil)
		{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="1A7114E660CF47008FED0EF925FAD81C">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FDdeMessageUnicode() in ddesub.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 211.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ddesub.cpp</FileName>
<FilePath>dev/word/client/desktop/ddesub.cpp</FilePath>
<LineStart>211</LineStart>
<Snippet>		if (h)
			{
			char *szDDE = (char *)WinGlobLock(h);

			if (szDDE &amp;&amp; szDDE[0] == '[')</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="A59720388A12E8385C1D076DBD7D3E6C">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HGetDataIodtCreate() in olesubs2.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 2655.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>olesubs2.cpp</FileName>
<FilePath>dev/word/client/desktop/olesubs2.cpp</FilePath>
<LineStart>2656</LineStart>
<Snippet>
				lpbi = (LPBITMAPINFOHEADER)WinGlobLock(hData);
				dibinfo.bOffBitsDIB = CbDIBHeader(lpbi);
				dibinfo.fColor = lpbi-&gt;biBitCount != 1;
				WinGlobUnlock(hData);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="0B874FEB2E9A88C7F27B3ED5F447F8B3">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function OnEvent() in odraw.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 701.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>odraw.cpp</FileName>
<FilePath>dev/word/client/desktop/odraw.cpp</FilePath>
<LineStart>701</LineStart>
<Snippet>		if (hg != hgNil)
			{
			WCHAR *wz = (WCHAR *)PxchSkipSpacesPxch((XCHAR *)WinGlobLock(hg));
			int cch;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="6C78B6047076C39BE8DFB574948883D8">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FServerDdeMsg() in ddesrvr.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 259.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ddesrvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ddesrvr.cpp</FilePath>
<LineStart>321</LineStart>
<Snippet>					else
						{						
						f=_FFilterSpecialCommand(xszDDE, pdqm, h, &amp;fAsync);
						if (f)
							{</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="EFB939411B22195DDAE7AFE9ED74DE8E">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function ParseShapePropFromRibl() in rtfin.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 10113.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin.cpp</FilePath>
<LineStart>10113</LineStart>
<Snippet>			goto LEndPInkData;
			
		if ((rgbClip = (BYTE *)WinGlobLock((*hribl)-&gt;hSvb)) == pNil)
			goto LEndPInkData;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="CDA2B20CFCE74AD44E7F7E0C8AB2F542">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function HandlePicData() in rtfin.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 8693.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfin.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfin.cpp</FilePath>
<LineStart>8693</LineStart>
<Snippet>			{
			LPMFP lpmfp;
			lpmfp = (LPMFP)WinGlobLock(HmfpX((**hribl).pic.picmid.dxaGoal, (**hribl).pic.picmid.dyaGoal));
			h = lpmfp-&gt;hMF;
			WinGlobUnlock(lpmfp);			</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="F8E30A07FDC768397E9889D91C3CF2D0">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FServerDdeMsg() in ddesrvr.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 244.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>ddesrvr.cpp</FileName>
<FilePath>dev/word/client/desktop/ddesrvr.cpp</FilePath>
<LineStart>246</LineStart>
<Snippet>							if (FAssign(xszNew = (XCHAR *)WinGlobLock(hNew)))
								{
								SzToXsz(szDDE, xszNew, cb - 1, CP_SYSTEM);			
								AssertDoTag(Debug(!)WinGlobUnlock(h), ASSERTTAG('crkh'));
								AssertDoTag(Debug(!)WinGlobFree(h), ASSERTTAG('crki'));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                        <Issue ruleID="A4F0399D-8D9B-4464-AFB9-98A4F1C518CA" iid="5BB9E3FECC38862CA05CB80F6199973C">
                            <Category>Unreleased Resource</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function FRtfInsPublisher() in rtfrare.cpp sometimes fails to release a system resource allocated by &lt;a href=&quot;location://C:/office/dev/otools/inc/CoreSDK/winbase.h###963###0###0&quot;&gt;GlobalLock()&lt;/a&gt; on line 2740.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>rtfrare.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfrare.cpp</FilePath>
<LineStart>2740</LineStart>
<Snippet>		}

	lpchData = (CHAR *)WinGlobLock((**hribl).hSect);
	lcbData = mpsd.cbSect;
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 404</ExternalCategory>
                        </Issue>
                    </GroupingSection>
                    <GroupingSection count="14">
                        <groupTitle>Buffer Overflow: Off-by-One</groupTitle>
                        <MajorAttributeSummary>
                            <MetaInfo>
<Name>Abstract</Name>
<Value>The program writes just past the bounds of allocated memory, which could corrupt data, crash the program, or lead to the execution of malicious code.</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Explanation</Name>
<Value>Buffer overflow is probably the best known form of software security vulnerability. Most software developers know what a buffer overflow vulnerability is, but buffer overflow attacks against both legacy and newly-developed applications are still quite common. Part of the problem is due to the wide variety of ways buffer overflows can occur, and part is due to the error-prone techniques often used to prevent them.

In a classic buffer overflow exploit, the attacker sends data to a program, which it stores in an undersized stack buffer. The result is that information on the call stack is overwritten, including the function's return pointer. The data sets the value of the return pointer so that when the function returns, it transfers control to malicious code contained in the attacker's data.

Although this type of off-by-one error is still common on some platforms and in some development communities, there are a variety of other types of buffer overflow, including stack and heap buffer overflows among others. There are a number of excellent books that provide detailed information on how buffer overflow attacks work, including Building Secure Software [1], Writing Secure Code [2], and The Shellcoder's Handbook [3].

At the code level, buffer overflow vulnerabilities usually involve the violation of a programmer's assumptions. Many memory manipulation functions in C and C++ do not perform bounds checking and can easily exceed the allocated bounds of the buffers they operate upon. Even bounded functions, such as strncpy(), can cause vulnerabilities when used incorrectly. The combination of memory manipulation and mistaken assumptions about the size or makeup of a piece of data is the root cause of most buffer overflows.

Example: The following code contains an off-by-one buffer overflow, which occurs when recv returns the maximum allowed sizeof(buf) bytes read. In this case, the subsequent dereference of buf[nbytes] will write the null byte outside the bounds of allocated memory. 


void receive(int socket) {
   char buf[MAX];
   int nbytes = recv(socket, buf, sizeof(buf), 0);
   buf[nbytes] = '\0'; 
   ...
}
</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Recommendations</Name>
<Value>Although the careful use of bounded functions can greatly reduce the risk of buffer overflow, this migration cannot be done blindly and does not go far enough on its own to ensure security. Whenever you manipulate memory, especially strings, remember that buffer overflow vulnerabilities typically occur in code that:

- Relies on external data to control its behavior.

- Depends upon properties of the data that are enforced outside of the immediate scope of the code.

- Is so complex that a programmer cannot accurately predict its behavior.

Additionally, consider the following principles:

- Never trust an external source to provide correct control information to a memory operation. 

- Never trust that properties about the data your program is manipulating will be maintained throughout the program. Sanity check data before you operate on it.

- Limit the complexity of memory manipulation and bounds-checking code. Keep it simple and clearly document the checks you perform, the assumptions that you test, and what the expected behavior of the program is in the case that input validation fails.

- When input data is too large, be leery of truncating the data and continuing to process it. Truncation can change the meaning of the input.

- Do not rely on tools, such as StackGuard, or non-executable stacks to prevent buffer overflow vulnerabilities. These approaches do not address heap buffer overflows and the more subtle stack overflows that can change the contents of variables that control the program. Additionally, many of these approaches are easily defeated, and even when they are working properly, they address the symptom of the problem and not its cause.</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Tips</Name>
<Value>1. On Windows, less secure functions like memcpy() can be replaced with their more secure versions, such as memcpy_s(). However, this still needs to be done with caution. Because parameter validation provided by the _s family of functions varies, relying on it can lead to unexpected behavior. Furthermore, incorrectly specifying the size of the destination buffer can still result in buffer overflows.</Value>
                            </MetaInfo>
                            <AttributeValue>
<Name>&lt;Unaudited&gt;</Name>
<Count>14</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Not an Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Reliability Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Bad Practice</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Suspicious</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Exploitable</Name>
<Count>0</Count>
                            </AttributeValue>
                        </MajorAttributeSummary>
                        <Issue ruleID="9B72907F-B3C0-37CD-EFF0-A368ABC8A142" iid="4C80963A029DCE02850AE07FABA17031">
                            <Category>Buffer Overflow: Off-by-One</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function CmdDeletePselCore() in cmdsel.cpp writes one location past the bounds of psepSav on line 1701, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>cmdsel.cpp</FileName>
<FilePath>dev/word/client/shared/cmdsel.cpp</FilePath>
<LineStart>1701</LineStart>
<Snippet>			CacheSect(psel-&gt;ca.pdod, psel-&gt;ca.cpFirst);
			psepSav = (SEP *)PvAllocStack(cbSEP);
			*psepSav = vsepFetch;
			}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 129, CWE ID 131, CWE ID 193, CWE ID 787, CWE ID 805</ExternalCategory>
                        </Issue>
                        <Issue ruleID="9B72907F-B3C0-37CD-EFF0-A368ABC8A142" iid="F288CBCF3EEF5708BF585226D453A9CC">
                            <Category>Buffer Overflow: Off-by-One</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function FDlgFontSub() in fontui.cpp writes one location past the bounds of rgspanCols on line 1109, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>fontui.cpp</FileName>
<FilePath>dev/word/client/desktop/fontui.cpp</FilePath>
<LineStart>1109</LineStart>
<Snippet>						// the same breathing room afforded to the left edge of
						// the first column.)
						ptsd-&gt;rgspanCols[1].xpRight = recCol1.dx + dxColMargin +
							recCol2.dx - (vsci.dxpScrlBar + dxListBorder +
							(vsci.dxpTmWidth &gt;&gt; 1));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 129, CWE ID 131, CWE ID 193, CWE ID 787, CWE ID 805</ExternalCategory>
                        </Issue>
                        <Issue ruleID="9B72907F-B3C0-37CD-EFF0-A368ABC8A142" iid="B32292B1B9164FCAC9BEB59EAD1EB7B9">
                            <Category>Buffer Overflow: Off-by-One</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The program writes just past the bounds of allocated memory, which could corrupt data, crash the program, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>savebin.cpp</FileName>
<FilePath>dev/word/core/savebin.cpp</FilePath>
<LineStart>3197</LineStart>
<Snippet>				{
				xszBase[cch] = xchBackSlash;
				xszBase[cch + 1] = xchNull;
				}
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 129, CWE ID 131, CWE ID 193, CWE ID 787, CWE ID 805</ExternalCategory>
                        </Issue>
                        <Issue ruleID="9B72907F-B3C0-37CD-EFF0-A368ABC8A142" iid="CB3FDC7D3D2F20F1980A7BF82193F993">
                            <Category>Buffer Overflow: Off-by-One</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function PstdClonePstd() in style.cpp writes one location past the bounds of rgbUpe on line 17518, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>style.cpp</FileName>
<FilePath>dev/word/core/style.cpp</FilePath>
<LineStart>17518</LineStart>
<Snippet>					if (hpl != hNil)
						{
						if ((*(HPL *)(pspd-&gt;rgbUpe) = HplcnfClone(hpl)) == hNil)
							{
							int iupxT = 0;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 129, CWE ID 131, CWE ID 193, CWE ID 787, CWE ID 805</ExternalCategory>
                        </Issue>
                        <Issue ruleID="9B72907F-B3C0-37CD-EFF0-A368ABC8A142" iid="8793F0CFDD1A3AACBE52DB0D06D7EF64">
                            <Category>Buffer Overflow: Off-by-One</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function FSetLetterIderNum() in letters.cpp writes one location past the bounds of xszEnclosure on line 632, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>letters.cpp</FileName>
<FilePath>dev/word/client/desktop/letters.cpp</FilePath>
<LineStart>632</LineStart>
<Snippet>		if (CchXsz(&amp;pxsz[cpFirst]) &gt; cbMaxSz)
			return fFalse;
		pcabletters-&gt;xszEnclosure[cpFirst] = xchNull;
		CopyXsz(&amp;pxsz[cpFirst], xszT, CxchMaxXsz(xszT));
		xszT[cpLim+1] = xchNull;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 129, CWE ID 131, CWE ID 193, CWE ID 787, CWE ID 805</ExternalCategory>
                        </Issue>
                        <Issue ruleID="9B72907F-B3C0-37CD-EFF0-A368ABC8A142" iid="C630A8D8C09BDD24EFD7AAEE72E2FFD2">
                            <Category>Buffer Overflow: Off-by-One</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function CmdDeletePselCore() in cmdsel.cpp writes one location past the bounds of ppapSav on line 1706, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>cmdsel.cpp</FileName>
<FilePath>dev/word/client/shared/cmdsel.cpp</FilePath>
<LineStart>1706</LineStart>
<Snippet>		CacheParaSel(psel);
		ppapSav = (PAP *)PvAllocStack(cbPAP);
		*ppapSav = vpapFetch;
		}
	// If selecting from middle to end, apply para and section props</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 129, CWE ID 131, CWE ID 193, CWE ID 787, CWE ID 805</ExternalCategory>
                        </Issue>
                        <Issue ruleID="9B72907F-B3C0-37CD-EFF0-A368ABC8A142" iid="C630A8D8C09BDD24EFD7AAEE72E2FFD1">
                            <Category>Buffer Overflow: Off-by-One</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function CmdDeletePselCore() in cmdsel.cpp writes one location past the bounds of ppapSav on line 1677, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>cmdsel.cpp</FileName>
<FilePath>dev/word/client/shared/cmdsel.cpp</FilePath>
<LineStart>1677</LineStart>
<Snippet>		CacheParaPure(psel-&gt;ca.pdod, psel-&gt;ca.cpFirst);
		ppapSav = (PAP *)PvAllocStack(cbPAP);
		*ppapSav = vpapFetch;
		if (ppapSav-&gt;ilfo != ilfoNil &amp;&amp; caPara.cpLim &lt;= psel-&gt;ca.cpLim)
			{ // o12 #329183, 346024</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 129, CWE ID 131, CWE ID 193, CWE ID 787, CWE ID 805</ExternalCategory>
                        </Issue>
                        <Issue ruleID="9B72907F-B3C0-37CD-EFF0-A368ABC8A142" iid="B894D3296B463D2CD7B08EF548B31325">
                            <Category>Buffer Overflow: Off-by-One</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function FDlgStyleVis() in fmtpane.cpp writes one location past the bounds of rgspanCols on line 5532, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>fmtpane.cpp</FileName>
<FilePath>dev/word/client/desktop/fmtpane.cpp</FilePath>
<LineStart>5532</LineStart>
<Snippet>						ptsd-&gt;rgspanCols[0].xpRight + dxpSpace;
					
					ptsd-&gt;rgspanCols[1].xpRight = rec.dx - dxpScroll - dxpMargin;

					pbtlb-&gt;drcBmp.xp = ptsd-&gt;rgspanCols[0].xpRight;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 129, CWE ID 131, CWE ID 193, CWE ID 787, CWE ID 805</ExternalCategory>
                        </Issue>
                        <Issue ruleID="9B72907F-B3C0-37CD-EFF0-A368ABC8A142" iid="894288BA24D0DFC68A783D09D109ACDA">
                            <Category>Buffer Overflow: Off-by-One</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function FDlgStyleVis() in fmtpane.cpp writes one location past the bounds of rgspanCols on line 5529, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>fmtpane.cpp</FileName>
<FilePath>dev/word/client/desktop/fmtpane.cpp</FilePath>
<LineStart>5529</LineStart>
<Snippet>					ptsd-&gt;rgspanCols[0].xpRight = dxpCol0 + dxpMargin;

					ptsd-&gt;rgspanCols[1].xpLeft =
						ptsd-&gt;rgspanCols[0].xpRight + dxpSpace;
					</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 129, CWE ID 131, CWE ID 193, CWE ID 787, CWE ID 805</ExternalCategory>
                        </Issue>
                        <Issue ruleID="9B72907F-B3C0-37CD-EFF0-A368ABC8A142" iid="C630A8D8C09BDD24EFD7AAEE72E2FFD3">
                            <Category>Buffer Overflow: Off-by-One</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function CmdDeletePselCore() in cmdsel.cpp writes one location past the bounds of ppapSav on line 1718, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>cmdsel.cpp</FileName>
<FilePath>dev/word/client/shared/cmdsel.cpp</FilePath>
<LineStart>1718</LineStart>
<Snippet>		CacheParaSel(psel);
		ppapSav = (PAP *)PvAllocStack(cbPAP);
		*ppapSav = vpapFetch;
		if (fDelete &amp;&amp; caPara.cpLim &lt; psel-&gt;cpLim &amp;&amp;
			CpFirstStyCore(psel-&gt;hwwd, psel-&gt;ca.pdod, psel-&gt;ca.cpLim,</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 129, CWE ID 131, CWE ID 193, CWE ID 787, CWE ID 805</ExternalCategory>
                        </Issue>
                        <Issue ruleID="9B72907F-B3C0-37CD-EFF0-A368ABC8A142" iid="1739C1F640664A104A2C9A0756FC50A3">
                            <Category>Buffer Overflow: Off-by-One</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function FChangeColSettings() in columns.cpp writes one location past the bounds of rgdxaColWidthSpacing on line 2706, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>columns.cpp</FileName>
<FilePath>dev/word/client/desktop/columns.cpp</FilePath>
<LineStart>2706</LineStart>
<Snippet>				SetColWidthRgdxaIcol(RgdxaColCur(), icol, wVal);
			else
				SetColSpaceRgdxaIcol(RgdxaColCur(), icol, wVal);
			if (!FCkResetColWidthSpacing(icol, xaValOld, wVal, fEven, fWidth))
				return fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 129, CWE ID 131, CWE ID 193, CWE ID 787, CWE ID 805</ExternalCategory>
                        </Issue>
                        <Issue ruleID="9B72907F-B3C0-37CD-EFF0-A368ABC8A142" iid="E03EA11A544C95733E7CB8ACB81FC4CC">
                            <Category>Buffer Overflow: Off-by-One</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The program writes just past the bounds of allocated memory, which could corrupt data, crash the program, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>factoid.h</FileName>
<FilePath>c:/office/dev/word/client/desktop/inc/factoid.h</FilePath>
<LineStart>365</LineStart>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 129, CWE ID 131, CWE ID 193, CWE ID 787, CWE ID 805</ExternalCategory>
                        </Issue>
                        <Issue ruleID="9B72907F-B3C0-37CD-EFF0-A368ABC8A142" iid="82223A83B237CD9B84FBE6034DBC4C90">
                            <Category>Buffer Overflow: Off-by-One</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function FGetHHCUserDict() in hhc.cpp writes one location past the bounds of wz on line 913, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>hhc.cpp</FileName>
<FilePath>dev/word/client/desktop/hhc.cpp</FilePath>
<LineStart>913</LineStart>
<Snippet>	if (rc == ERROR_SUCCESS &amp;&amp; lType == REG_SZ &amp;&amp; ixchMax &gt; 1)
		{
		pwfnsUDict-&gt;wz[ixchMax] = xchNull;
		if (FEmptyWfns(pwfnsUDict))
			return fFalse;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 129, CWE ID 131, CWE ID 193, CWE ID 787, CWE ID 805</ExternalCategory>
                        </Issue>
                        <Issue ruleID="9B72907F-B3C0-37CD-EFF0-A368ABC8A142" iid="388AB2496B19DFAEF9E30E23FC148AD5">
                            <Category>Buffer Overflow: Off-by-One</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function FDlgFontSub() in fontui.cpp writes one location past the bounds of rgspanCols on line 1103, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>fontui.cpp</FileName>
<FilePath>dev/word/client/desktop/fontui.cpp</FilePath>
<LineStart>1103</LineStart>
<Snippet>						// the left of the second column in non-BiDi and to the
						// right of the first column in BiDi).
						ptsd-&gt;rgspanCols[1].xpLeft = ptsd-&gt;rgspanCols[0].xpRight +
							dxColMargin + dxFontTypeIconSpace;
						// The second column should end slightly indented from</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 129, CWE ID 131, CWE ID 193, CWE ID 787, CWE ID 805</ExternalCategory>
                        </Issue>
                    </GroupingSection>
                    <GroupingSection count="13">
                        <groupTitle>Buffer Overflow</groupTitle>
                        <MajorAttributeSummary>
                            <MetaInfo>
<Name>Abstract</Name>
<Value>The program writes outside the bounds of allocated memory, which could corrupt data, crash the program, or lead to the execution of malicious code.</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Explanation</Name>
<Value>Buffer overflow is probably the best known form of software security vulnerability. Most software developers know what a buffer overflow vulnerability is, but buffer overflow attacks against both legacy and newly-developed applications are still quite common. Part of the problem is due to the wide variety of ways buffer overflows can occur, and part is due to the error-prone techniques often used to prevent them.

In a classic buffer overflow exploit, the attacker sends data to a program, which it stores in an undersized stack buffer. The result is that information on the call stack is overwritten, including the function's return pointer. The data sets the value of the return pointer so that when the function returns, it transfers control to malicious code contained in the attacker's data.

Although this type of stack buffer overflow is still common on some platforms and in some development communities, there are a variety of other types of buffer overflow, including heap buffer overflows and off-by-one errors among others. There are a number of excellent books that provide detailed information on how buffer overflow attacks work, including Building Secure Software [1], Writing Secure Code [2], and The Shellcoder's Handbook [3]. 

At the code level, buffer overflow vulnerabilities usually involve the violation of a programmer's assumptions. Many memory manipulation functions in C and C++ do not perform bounds checking and can easily overwrite the allocated bounds of the buffers they operate upon. Even bounded functions, such as strncpy(), can cause vulnerabilities when used incorrectly. The combination of memory manipulation and mistaken assumptions about the size or makeup of a piece of data is the root cause of most buffer overflows.

Buffer overflow vulnerabilities typically occur in code that:

- Relies on external data to control its behavior.

- Depends upon properties of the data that are enforced outside of the immediate scope of the code.

- Is so complex that a programmer cannot accurately predict its behavior.



The following examples demonstrate all three of the scenarios.

Example 1: This is an example of the second scenario in which the code depends on properties of the data that are not verified locally. In this example a function named lccopy() takes a string as its argument and returns a heap-allocated copy of the string with all uppercase letters converted to lowercase. The function performs no bounds checking on its input because it expects str to always be smaller than BUFSIZE. If an attacker bypasses checks in the code that calls lccopy(), or if a change in that code makes the assumption about the size of str untrue, then lccopy() will overflow buf with the unbounded call to strcpy().


char *lccopy(const char *str) {
	char buf[BUFSIZE];
	char *p;

	strcpy(buf, str);
	for (p = buf; *p; p++) {
		if (isupper(*p)) {
			*p = tolower(*p);
		}
	}	
	return strdup(buf);
}


Example 2.a: The following sample code demonstrates a simple buffer overflow that is often caused by the first scenario in which the code  relies on external data to control its behavior. The code uses the gets() function to read an arbitrary amount of data into a stack buffer. Because there is no way to limit the amount of data read by this function, the safety of the code depends on the user to always enter fewer than BUFSIZE characters.


	...
	char buf[BUFSIZE]; 
	gets(buf);
	...


Example 2.b: This example shows how easy it is to mimic the unsafe behavior of the gets() function in C++ by using the &gt;&gt; operator to read input into a char[] string. 


	...
	char buf[BUFSIZE]; 
	cin &gt;&gt; (buf);
	...


Example 3: The code in this example also relies on user input to control its behavior, but it adds a level of indirection with the use of the bounded memory copy function memcpy(). This function accepts a destination buffer, a source buffer, and the number of bytes to copy. The input buffer is filled by a bounded call to read(), but the user specifies the number of bytes that memcpy() copies.


	...
char buf[64], in[MAX_SIZE];
printf(&quot;Enter buffer contents:\n&quot;);
read(0, in, MAX_SIZE-1);
printf(&quot;Bytes to copy:\n&quot;);
scanf(&quot;%d&quot;, &amp;bytes);
memcpy(buf, in, bytes);
	... 


Note: This type of buffer overflow vulnerability (where a program reads data and then trusts a value from the data in subsequent memory operations on the remaining data) has turned up with some frequency in image, audio, and other file processing libraries. 

Example 4: The following code demonstrates the third scenario in which the code is so complex its behavior cannot be easily predicted. This code is from the popular libPNG image decoder, which is used by a wide array of applications, including Mozilla and some versions of Internet Explorer. 

The code appears to safely perform bounds checking because it checks the size of the variable length, which it later uses to control the amount of data copied by png_crc_read(). However, immediately before it tests length, the code performs a check on png_ptr-&gt;mode, and if this check fails a warning is issued and processing continues. Because length is tested in an else if block, length would not be tested if the first check fails, and is used blindly in the call to png_crc_read(), potentially allowing a stack buffer overflow. 

Although the code in this example is not the most complex we have seen, it demonstrates why complexity should be minimized in code that performs memory operations. 


if (!(png_ptr-&gt;mode &amp; PNG_HAVE_PLTE)) {
	/* Should be an error, but we can cope with it */
png_warning(png_ptr, &quot;Missing PLTE before tRNS&quot;);
}
else if (length &gt; (png_uint_32)png_ptr-&gt;num_palette) {
png_warning(png_ptr, &quot;Incorrect tRNS chunk length&quot;);
png_crc_finish(png_ptr, length);
return;
}
...
png_crc_read(png_ptr, readbuf, (png_size_t)length);


Example 5: This example also demonstrates the third scenario in which the program's complexity exposes it to buffer overflows. In this case, the exposure is due to the ambiguous interface of one of the functions rather than the structure of the code (as was the case in the previous example).

The getUserInfo() function takes a username specified as a multibyte string and a pointer to a structure for user information, and populates the structure with information about the user. Since Windows authentication uses Unicode for usernames, the username argument is first converted from a multibyte string to a Unicode string. This function then incorrectly passes the size of unicodeUser in bytes rather than characters. The call to MultiByteToWideChar() may therefore write up to (UNLEN+1)*sizeof(WCHAR) wide characters, or
(UNLEN+1)*sizeof(WCHAR)*sizeof(WCHAR) bytes, to the unicodeUser array, which has only (UNLEN+1)*sizeof(WCHAR) bytes allocated. If the username string contains more than UNLEN characters, the call to MultiByteToWideChar() will overflow the buffer unicodeUser. 


void getUserInfo(char *username, struct _USER_INFO_2 info){
WCHAR unicodeUser[UNLEN+1];
	MultiByteToWideChar(CP_ACP, 0, username, -1,
    	      			unicodeUser, sizeof(unicodeUser));
NetUserGetInfo(NULL, unicodeUser, 2, (LPBYTE *)&amp;info);
}
</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Recommendations</Name>
<Value>Never use inherently unsafe functions, such as gets(), and avoid the use of functions that are difficult to use safely such as strcpy(). Replace unbounded functions like strcpy() with their bounded equivalents, such as strncpy() or the WinAPI functions defined in strsafe.h [4]. 

Although the careful use of bounded functions can greatly reduce the risk of buffer overflow, this migration cannot be done blindly and does not go far enough on its own to ensure security. Whenever you manipulate memory, especially strings, remember that buffer overflow vulnerabilities typically occur in code that:

- Relies on external data to control its behavior

- Depends upon properties of the data that are enforced outside of the immediate scope of the code

- Is so complex that a programmer cannot accurately predict its behavior.

Additionally, consider the following principles:

- Never trust an external source to provide correct control information to a memory operation. 

- Never trust that properties about the data your program is manipulating will be maintained throughout the program. Sanity check data before you operate on it.

- Limit the complexity of memory manipulation and bounds-checking code. Keep it simple and clearly document the checks you perform, the assumptions that you test, and what the expected behavior of the program is in the case that input validation fails.

- When input data is too large, be leery of truncating the data and continuing to process it. Truncation can change the meaning of the input.

- Do not rely on tools, such as StackGuard, or non-executable stacks to prevent buffer overflow vulnerabilities. These approaches do not address heap buffer overflows and the more subtle stack overflows that can change the contents of variables that control the program. Additionally, many of these approaches are easily defeated, and even when they are working properly, they address the symptom of the problem and not its cause.</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Tips</Name>
<Value>1. On Windows, less secure functions like memcpy() can be replaced with their more secure versions, such as memcpy_s(). However, this still needs to be done with caution. Because parameter validation provided by the _s family of functions varies, relying on it can lead to unexpected behavior. Furthermore, incorrectly specifying the size of the destination buffer can still result in buffer overflows.</Value>
                            </MetaInfo>
                            <AttributeValue>
<Name>&lt;Unaudited&gt;</Name>
<Count>13</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Not an Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Reliability Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Bad Practice</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Suspicious</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Exploitable</Name>
<Count>0</Count>
                            </AttributeValue>
                        </MajorAttributeSummary>
                        <Issue ruleID="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019" iid="18B210A39B3E57893AC6B1CAD8708101">
                            <Category>Buffer Overflow</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function HklConvertKbdToKbdCa() in lad.cpp writes outside the bounds of pKeyState on line 1774, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>lad.cpp</FileName>
<FilePath>dev/word/client/desktop/lad.cpp</FilePath>
<LineStart>1774</LineStart>
<Snippet>	if ((pKeyState = (BYTE *)PvAllocStack(256)) == pNil)
		goto LDone;
	ClearBytes(pKeyState, 256);

	// Convert the CA range</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 120, CWE ID 129, CWE ID 131, CWE ID 787</ExternalCategory>
                        </Issue>
                        <Issue ruleID="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019" iid="19BF4110073DF4E3F9FF276108342BDE">
                            <Category>Buffer Overflow</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function CmdInsTableAction() in dlgtable.cpp writes outside the bounds of fOptBorders on line 713, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>dlgtable.cpp</FileName>
<FilePath>dev/word/client/shared/dlgtable.cpp</FilePath>
<LineStart>713</LineStart>
<Snippet>
		// Break up bit flags in grfatl into separate fields
		ClearBytes(&amp;cabTblLooks.fOptBorders, 
			sizeof(cabTblLooks.fOptBorders) * cfFatl);
		GrfatlToCab(&amp;cabTblLooks, pcab-&gt;grfatl);</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 120, CWE ID 129, CWE ID 131, CWE ID 787</ExternalCategory>
                        </Issue>
                        <Issue ruleID="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019" iid="8A52939DAAC2AC8101D5D230D6CCEFFF">
                            <Category>Buffer Overflow</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function CchGetAutoCompleteXstz() in bubble.cpp writes outside the bounds of xstzT on line 2455, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>bubble.cpp</FileName>
<FilePath>dev/word/client/desktop/bubble.cpp</FilePath>
<LineStart>2455</LineStart>
<Snippet>		CopyXsz(XszFromXstz(xstzT2), xstzT + 3, CxchMaxXstz(xstzT) - 3);
		xstzT[xstzT[0]] = xchPDF;
		xstzT[xstzT[0] + 1] = xchNull;
		}
	</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 120, CWE ID 129, CWE ID 131, CWE ID 787</ExternalCategory>
                        </Issue>
                        <Issue ruleID="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019" iid="F71E6789E4D20198DB49AFC470F5D47B">
                            <Category>Buffer Overflow</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function TmcDoControlPanelPane() in cpanel.cpp writes outside the bounds of dnpsp on line 478, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>cpanel.cpp</FileName>
<FilePath>dev/word/client/desktop/cpanel.cpp</FilePath>
<LineStart>478</LineStart>
<Snippet>		if (icpsd == (int) HIWORD(dnpsp[psp].id))
			break;
	dnpsp[psp].pv = pcmb-&gt;pv;

	/* go for it! */</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 120, CWE ID 129, CWE ID 131, CWE ID 787</ExternalCategory>
                        </Issue>
                        <Issue ruleID="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019" iid="B8D305564BF08E5AC8B6A13937C0795D">
                            <Category>Buffer Overflow</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The program writes outside the bounds of allocated memory, which could corrupt data, crash the program, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>styledef.cpp</FileName>
<FilePath>dev/word/core/styledef.cpp</FilePath>
<LineStart>3435</LineStart>
<Snippet>	default:
		AssertTag(fFalse, ASSERTTAG('jaus'));
		ClearBytes(pupd, cbof(*pupd));
		break;
		}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 120, CWE ID 129, CWE ID 131, CWE ID 787</ExternalCategory>
                        </Issue>
                        <Issue ruleID="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019" iid="48499184E63D40A77D3A1D9FD344FB42">
                            <Category>Buffer Overflow</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function FSetScanningContextPca() in proof2.cpp writes outside the bounds of ptsc_ on line 1180, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>proof2.cpp</FileName>
<FilePath>dev/word/client/shared/proof2.cpp</FilePath>
<LineStart>1180</LineStart>
<Snippet>		}

	ClearBytes(&amp;pptsc-&gt;ptsc_, cbPTSC_);
	
	pptsc-&gt;pdodScan = pcaScan-&gt;pdod;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 120, CWE ID 129, CWE ID 131, CWE ID 787</ExternalCategory>
                        </Issue>
                        <Issue ruleID="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019" iid="611FF8E40E40CC19519E1E1DA19EFADD">
                            <Category>Buffer Overflow</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The program writes outside the bounds of allocated memory, which could corrupt data, crash the program, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>findrplc.cpp</FileName>
<FilePath>dev/word/client/shared/findrplc.cpp</FilePath>
<LineStart>254</LineStart>
<Snippet>	// Warning: this is a C/C++ nightmare
	ssel.poasvs.Empty();
	ClearBytes(this, sizeof(*this));
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 120, CWE ID 129, CWE ID 131, CWE ID 787</ExternalCategory>
                        </Issue>
                        <Issue ruleID="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019" iid="9D651BD4531559497E438ABD0FD4B2BB">
                            <Category>Buffer Overflow</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function ChngToRdsBackground() in rtfrare.cpp writes outside the bounds of ~t1083739144 on line 1720, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>rtfrare.cpp</FileName>
<FilePath>dev/word/core/rtf/rtfrare.cpp</FilePath>
<LineStart>1720</LineStart>
<Snippet>	(*hribl)-&gt;rds = val;

	ClearBytes(&amp;(**hribl).stzBackground, sizeof((**hribl).stzBackground));
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 120, CWE ID 129, CWE ID 131, CWE ID 787</ExternalCategory>
                        </Issue>
                        <Issue ruleID="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019" iid="488720D7F76A1E8C2F91F35387FCEF77">
                            <Category>Buffer Overflow</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The program writes outside the bounds of allocated memory, which could corrupt data, crash the program, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>factoid.h</FileName>
<FilePath>c:/office/dev/word/client/desktop/inc/factoid.h</FilePath>
<LineStart>362</LineStart>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 120, CWE ID 129, CWE ID 131, CWE ID 787</ExternalCategory>
                        </Issue>
                        <Issue ruleID="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019" iid="832A315729DAD35770FD53AFAF24694B">
                            <Category>Buffer Overflow</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function _DeleteNonReferencedFns() in file.cpp writes outside the bounds of chp on line 5638, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>file.cpp</FileName>
<FilePath>dev/word/core/file.cpp</FilePath>
<LineStart>5638</LineStart>
<Snippet>		AssertTag(psfd-&gt;fkpdChp.bFreeLim == 0, ASSERTTAG('0xrk'));
		AssertTag(psfd-&gt;fkpdChp.fcFirst == fc0, ASSERTTAG('0xrl'));
		ClearBytes(&amp;psfd-&gt;fkpdChp.chp, cbMaxGrpprlForGenChpx);
		psfd-&gt;fkpdChp.cbChpx = 0;
		psfd-&gt;fkpdText.pn = pnNil;</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 120, CWE ID 129, CWE ID 131, CWE ID 787</ExternalCategory>
                        </Issue>
                        <Issue ruleID="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019" iid="D44CB3ED726B19D3FA2615C262C33417">
                            <Category>Buffer Overflow</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function FreeExcr() in filecvt.cpp writes outside the bounds of vpexcr on line 628, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>filecvt.cpp</FileName>
<FilePath>dev/word/client/desktop/filecvt.cpp</FilePath>
<LineStart>628</LineStart>
<Snippet>		FreePv(vpexcr-&gt;xstzCnvSplashScreenName);

	SetBytes(vpexcr, 0, sizeof(EXCR));

	vcpgRtfForConverter = CP_ACP;	// default to whatever word wants to use</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 120, CWE ID 129, CWE ID 131, CWE ID 787</ExternalCategory>
                        </Issue>
                        <Issue ruleID="5D2B7B98-B81A-4B28-A6E6-F3C5C6268019" iid="BB496C33998E13F571480963E2C9164A">
                            <Category>Buffer Overflow</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function FSetScanningContextFromPsels() in proof2.cpp writes outside the bounds of ptsc_ on line 996, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>proof2.cpp</FileName>
<FilePath>dev/word/client/shared/proof2.cpp</FilePath>
<LineStart>996</LineStart>
<Snippet>	int itap = 0;					// only valid if itcLim != 0

	ClearBytes(&amp;pptsc-&gt;ptsc_, cbPTSC_);

	if (psels-&gt;ca.pdod == pdodNil)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 120, CWE ID 129, CWE ID 131, CWE ID 787</ExternalCategory>
                        </Issue>
                        <Issue ruleID="86C7916D-A73B-4EBE-A235-9E570095EE66" iid="9EEFF02B76369BEDA667A7C5DD241E50">
                            <Category>Buffer Overflow</Category>
                            <Folder>Critical</Folder>
                            <Kingdom>Input Validation and Representation</Kingdom>
                            <Abstract>The function DwSendMailThread() in cmd3.cpp might be able to write outside the bounds of allocated memory on line 8961, which could corrupt data, cause the program to crash, or lead to the execution of malicious code.</Abstract>
                            <Friority>Critical</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>8961</LineStart>
<Snippet>			if (FAssign(xszPath = (XCHAR *)PvAllocStack(CbBufSizeXsz(smp.cchPath))))
				{
				if (!ReadFile(hpipeSendMailRead, xszPath, truncate_cast&lt;DWORD&gt;(CbBufSizeXsz(smp.cchPath)), &amp;cbRead, pNil/*lpOverlapped*/)
					|| cbRead != CbBufSizeXsz(smp.cchPath))
					{</Snippet>
                            </Primary>
                            <Source>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>8932</LineStart>
<Snippet>		// Read from pipe
		AssertTag(hpipeSendMailRead, ASSERTTAG('jgfi'));
		if (!ReadFile(hpipeSendMailRead, &amp;smp, sizeof(smp), &amp;cbRead, pNil/*lpOverlapped*/))
			{
			AssertTag(fFalse, ASSERTTAG('jgfj'));</Snippet>
                            </Source>
                            <ExternalCategory type="CWE">CWE ID 120, CWE ID 129, CWE ID 131, CWE ID 787</ExternalCategory>
                        </Issue>
                    </GroupingSection>
                    <GroupingSection count="5">
                        <groupTitle>Format String: Argument Number Mismatch</groupTitle>
                        <MajorAttributeSummary>
                            <MetaInfo>
<Name>Abstract</Name>
<Value> The program uses an improperly constructed format string that contains a different number of conversion specifiers than the function has arguments. Incorrect format strings can lead the program to read data outside the bounds of allocated memory, which can allow access to sensitive information, introduce incorrect behavior, or crash the program. 
</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Explanation</Name>
<Value>Buffer overflow is probably the best known form of software security vulnerability. Most software developers know what a buffer overflow vulnerability is, but buffer overflow attacks against both legacy and newly-developed applications are still quite common. Part of the problem is due to the wide variety of ways buffer overflows can occur, and part is due to the error-prone techniques often used to prevent them.

In a classic buffer overflow exploit, the attacker sends data to a program, which it stores in an undersized stack buffer. The result is that information on the call stack is overwritten, including the function's return pointer. The data sets the value of the return pointer so that when the function returns, it transfers control to malicious code contained in the attacker's data.

Although this type of stack buffer overflow is still common on some platforms and in some development communities, there are a variety of other types of buffer overflow, including heap buffer overflows and off-by-one errors among others. There are a number of excellent books that provide detailed information on how buffer overflow attacks work, including Building Secure Software [1], Writing Secure Code [2], and The Shellcoder's Handbook [3]. 

At the code level, buffer overflow vulnerabilities usually involve the violation of a programmer's assumptions. Many memory manipulation functions in C and C++ do not perform bounds checking and can easily exceed the allocated bounds of the buffers they operate upon. Even bounded functions, such as strncpy(), can cause vulnerabilities when used incorrectly. The combination of memory manipulation and mistaken assumptions about the size or makeup of a piece of data is the root cause of most buffer overflows.

In this case, an improperly constructed format string causes the program to access values outside the bounds of allocated memory. 

Example: The following reads arbitrary values from the stack because the number of format specifiers does not align with the number of arguments passed to the function.  

void wrongNumberArgs(char *s, float f, int d) {
   char buf[1024];
   sprintf(buf, &quot;Wrong number of %.512s&quot;);
}
</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Recommendations</Name>
<Value>Although the careful use of bounded functions can greatly reduce the risk of buffer overflow, this migration cannot be done blindly and does not go far enough on its own to ensure security. Whenever you manipulate memory, especially strings, remember that buffer overflow vulnerabilities typically occur in code that:

- Relies on external data to control its behavior.

- Depends upon properties of the data that are enforced outside of the immediate scope of the code.

- Is so complex that a programmer cannot accurately predict its behavior.

Additionally, consider the following principles:

- Never trust an external source to provide correct control information to a memory operation. 

- Never trust that properties about the data your program is manipulating will be maintained throughout the program. Sanity check data before you operate on it.

- Limit the complexity of memory manipulation and bounds-checking code. Keep it simple and clearly document the checks you perform, the assumptions that you test, and what the expected behavior of the program is in the case that input validation fails.

- When input data is too large, be leery of truncating the data and continuing to process it. Truncation can change the meaning of the input.

- Do not rely on tools, such as StackGuard, or non-executable stacks to prevent buffer overflow vulnerabilities. These approaches do not address heap buffer overflows and the more subtle stack overflows that can change the contents of variables that control the program. Additionally, many of these approaches are easily defeated, and even when they are working properly, they address the symptom of the problem and not its cause.</Value>
                            </MetaInfo>
                            <AttributeValue>
<Name>&lt;Unaudited&gt;</Name>
<Count>5</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Not an Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Reliability Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Bad Practice</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Suspicious</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Exploitable</Name>
<Count>0</Count>
                            </AttributeValue>
                        </MajorAttributeSummary>
                        <Issue ruleID="EB41B05A-F725-4662-8868-2EEA9D7589CA" iid="25382350C4525D692F837CE92A0F30FA">
                            <Category>Format String: Argument Number Mismatch</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract> The program uses an improperly constructed format string that contains a different number of conversion specifiers than the function has arguments. Incorrect format strings can lead the program to read data outside the bounds of allocated memory, which can allow access to sensitive information, introduce incorrect behavior, or crash the program. 
</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>export.cpp</FileName>
<FilePath>dev/word/client/win32/export.cpp</FilePath>
<LineStart>615</LineStart>
<Snippet>
	// Generate string with attributes 'l' (left), 't' (top), 'w' (width), and 'h' (height)
	return _snwprintf_s(xszRcf, cchMax, _TRUNCATE, L&quot;a l \&quot;%.1f\&quot;;a t \&quot;%.1f\&quot;;a w \&quot;%.1f\&quot;;a h \&quot;%.1f\&quot;;&quot;,
					prcf-&gt;X * wacRatio,
					prcf-&gt;Y * wacRatio,</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 126</ExternalCategory>
                        </Issue>
                        <Issue ruleID="EB41B05A-F725-4662-8868-2EEA9D7589CA" iid="25382350C4525D692F837CE92A0F30FB">
                            <Category>Format String: Argument Number Mismatch</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract> The program uses an improperly constructed format string that contains a different number of conversion specifiers than the function has arguments. Incorrect format strings can lead the program to read data outside the bounds of allocated memory, which can allow access to sensitive information, introduce incorrect behavior, or crash the program. 
</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>export.cpp</FileName>
<FilePath>dev/word/client/win32/export.cpp</FilePath>
<LineStart>615</LineStart>
<Snippet>
	// Generate string with attributes 'l' (left), 't' (top), 'w' (width), and 'h' (height)
	return _snwprintf_s(xszRcf, cchMax, _TRUNCATE, L&quot;a l \&quot;%.1f\&quot;;a t \&quot;%.1f\&quot;;a w \&quot;%.1f\&quot;;a h \&quot;%.1f\&quot;;&quot;,
					prcf-&gt;X * wacRatio,
					prcf-&gt;Y * wacRatio,</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 126</ExternalCategory>
                        </Issue>
                        <Issue ruleID="EB41B05A-F725-4662-8868-2EEA9D7589CA" iid="25382350C4525D692F837CE92A0F30F9">
                            <Category>Format String: Argument Number Mismatch</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract> The program uses an improperly constructed format string that contains a different number of conversion specifiers than the function has arguments. Incorrect format strings can lead the program to read data outside the bounds of allocated memory, which can allow access to sensitive information, introduce incorrect behavior, or crash the program. 
</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>export.cpp</FileName>
<FilePath>dev/word/client/win32/export.cpp</FilePath>
<LineStart>615</LineStart>
<Snippet>
	// Generate string with attributes 'l' (left), 't' (top), 'w' (width), and 'h' (height)
	return _snwprintf_s(xszRcf, cchMax, _TRUNCATE, L&quot;a l \&quot;%.1f\&quot;;a t \&quot;%.1f\&quot;;a w \&quot;%.1f\&quot;;a h \&quot;%.1f\&quot;;&quot;,
					prcf-&gt;X * wacRatio,
					prcf-&gt;Y * wacRatio,</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 126</ExternalCategory>
                        </Issue>
                        <Issue ruleID="EB41B05A-F725-4662-8868-2EEA9D7589CA" iid="25382350C4525D692F837CE92A0F30FC">
                            <Category>Format String: Argument Number Mismatch</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract> The program uses an improperly constructed format string that contains a different number of conversion specifiers than the function has arguments. Incorrect format strings can lead the program to read data outside the bounds of allocated memory, which can allow access to sensitive information, introduce incorrect behavior, or crash the program. 
</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>export.cpp</FileName>
<FilePath>dev/word/client/win32/export.cpp</FilePath>
<LineStart>615</LineStart>
<Snippet>
	// Generate string with attributes 'l' (left), 't' (top), 'w' (width), and 'h' (height)
	return _snwprintf_s(xszRcf, cchMax, _TRUNCATE, L&quot;a l \&quot;%.1f\&quot;;a t \&quot;%.1f\&quot;;a w \&quot;%.1f\&quot;;a h \&quot;%.1f\&quot;;&quot;,
					prcf-&gt;X * wacRatio,
					prcf-&gt;Y * wacRatio,</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 126</ExternalCategory>
                        </Issue>
                        <Issue ruleID="EB41B05A-F725-4662-8868-2EEA9D7589CA" iid="0F7FD6BEA5AB425E918E621F1017B582">
                            <Category>Format String: Argument Number Mismatch</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract> The program uses an improperly constructed format string that contains a different number of conversion specifiers than the function has arguments. Incorrect format strings can lead the program to read data outside the bounds of allocated memory, which can allow access to sensitive information, introduce incorrect behavior, or crash the program. 
</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cwordloggerwinfile.cpp</FileName>
<FilePath>dev/word/wal/win/win32/cwordloggerwinfile.cpp</FilePath>
<LineStart>148</LineStart>
<Snippet>		}

	_snwprintf_s(xszFile + cchFile, _countof(xszFile) - cchFile, _TRUNCATE, L&quot;\\word-%lu.log&quot;, GetCurrentProcessId());

	// create the log</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 126</ExternalCategory>
                        </Issue>
                    </GroupingSection>
                    <GroupingSection count="4">
                        <groupTitle>Type Mismatch: Negative to Unsigned</groupTitle>
                        <MajorAttributeSummary>
                            <MetaInfo>
<Name>Abstract</Name>
<Value>The function is declared to return an unsigned value, but in some cases it returns a negative value.</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Explanation</Name>
<Value>It is dangerous to rely on implicit casts between signed and unsigned numbers because the result can take on an unexpected value and violate weak assumptions made elsewhere in the program. 

Example: In this example the variable amount can hold a negative value when it is returned. Because the function is declared to return an unsigned int, amount will be implicitly converted to unsigned.


unsigned int readdata () {
	int amount = 0; 
...
	if (result == ERROR)
		amount = -1;
	... 
	return amount;
}


If the error condition in the code above is met, then the return value of readdata() will be 4,294,967,295 on a system uses 32-bit integers.

Conversion between signed and unsigned values can lead to a variety of errors, but from a security standpoint is most commonly associated with integer overflow and buffer overflow vulnerabilities.</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Recommendations</Name>
<Value>Although unexpected conversion between signed and unsigned quantities typically creates general quality problems, depending on the assumptions that a conversion violates, it can lead to serious security risks. Pay attention to compiler warnings related to signed/unsigned conversions. Some programmers may believe that these warnings are innocuous, but in some cases they point out potential integer overflow problems.</Value>
                            </MetaInfo>
                            <AttributeValue>
<Name>&lt;Unaudited&gt;</Name>
<Count>4</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Not an Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Reliability Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Bad Practice</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Suspicious</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Exploitable</Name>
<Count>0</Count>
                            </AttributeValue>
                        </MajorAttributeSummary>
                        <Issue ruleID="E21078E8-25FD-4897-A047-7308B75D05F7" iid="60092EBC4D62F034AEDB576A6D1A0B3F">
                            <Category>Type Mismatch: Negative to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function IstLbBNFromIstd() in stylecmd.cpp is declared to return an unsigned value, but on line 2255 it returns a negative value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>stylecmd.cpp</FileName>
<FilePath>dev/word/client/desktop/stylecmd.cpp</FilePath>
<LineStart>2255</LineStart>
<Snippet>				AssertTag(!fBase || istLbBN != istCurrent, ASSERTTAG('eick'));

				return (((!fBase || istLbBN &gt; istCurrent) ? istLbBN : istLbBN + 1)) + dist;
				}
			}</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="E21078E8-25FD-4897-A047-7308B75D05F7" iid="0D3FDB53D1CE0A92BBAF43D1CCCF074F">
                            <Category>Type Mismatch: Negative to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function DwSendMailCore() in cmd3.cpp is declared to return an unsigned value, but on line 8899 it returns a negative value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>8899</LineStart>
<Snippet>	vrf.fInMail = fFalse;
	DirtyToolbars();
	return (eid);
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="E21078E8-25FD-4897-A047-7308B75D05F7" iid="F61A366A7D66A42F277D61748DC55100">
                            <Category>Type Mismatch: Negative to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function WListRubyAlignment() in cmd3.cpp is declared to return an unsigned value, but on line 3501 it returns a negative value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>cmd3.cpp</FileName>
<FilePath>dev/word/client/desktop/cmd3.cpp</FilePath>
<LineStart>3501</LineStart>
<Snippet>			SetLbxLbg(hlbx, &amp;lbg);
			}
		return iMax;
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                        <Issue ruleID="E21078E8-25FD-4897-A047-7308B75D05F7" iid="7CCBD10C9745E62C548667DB64B62FB1">
                            <Category>Type Mismatch: Negative to Unsigned</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function UInitFromTmc() in filline.cpp is declared to return an unsigned value, but on line 1010 it returns a negative value.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>filline.cpp</FileName>
<FilePath>dev/word/client/desktop/filline.cpp</FilePath>
<LineStart>1010</LineStart>
<Snippet>		}

	return uResult;
}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 195</ExternalCategory>
                        </Issue>
                    </GroupingSection>
                    <GroupingSection count="1">
                        <groupTitle>Code Correctness: Function Not Invoked</groupTitle>
                        <MajorAttributeSummary>
                            <MetaInfo>
<Name>Abstract</Name>
<Value>Because it is missing trailing parentheses, this expression refers to the value of the function pointer rather than the return value of the function.</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Explanation</Name>
<Value>This expression will always be non-null because it references a function pointer rather than the return value of the function.

Example: The following conditional will never fire. The predicate getChunk == NULL will always be false because getChunk is the name of a function defined in the program. 


  if (getChunk == NULL)
    return ERR;
</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Recommendations</Name>
<Value>Add parentheses so that the function will be invoked.

Example 1 Revisited: The following code will now invoke the getChunk() function.


  if (getChunk() == NULL)
    return ERR;
</Value>
                            </MetaInfo>
                            <AttributeValue>
<Name>&lt;Unaudited&gt;</Name>
<Count>1</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Not an Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Reliability Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Bad Practice</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Suspicious</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Exploitable</Name>
<Count>0</Count>
                            </AttributeValue>
                        </MajorAttributeSummary>
                        <Issue ruleID="499B1772-F385-4CC0-8211-39983F724369" iid="7D647FB786D5117E57ED01DDB11BEF07">
                            <Category>Code Correctness: Function Not Invoked</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>Because it is missing trailing parentheses, the expression on line 1817 in idle.cpp refers to the value of a function pointer rather than the return value of the function.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>idle.cpp</FileName>
<FilePath>dev/word/client/desktop/idle.cpp</FilePath>
<LineStart>1817</LineStart>
<Snippet>		|| (FBetween(wm, WM_DDE_FIRST, WM_DDE_LAST)
			&amp;&amp; pmsg-&gt;hwnd != hwndNil
			&amp;&amp; (WNDPROC)GetWindowLongPtr(pmsg-&gt;hwnd, GWLP_WNDPROC) == DdeChnlWndProc)
		|| (wm == WM_PAINT 
			&amp;&amp; pmsg-&gt;hwnd == vhwndApp)</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 398</ExternalCategory>
                        </Issue>
                    </GroupingSection>
                    <GroupingSection count="1">
                        <groupTitle>Code Correctness: Function Returns Stack Address</groupTitle>
                        <MajorAttributeSummary>
                            <MetaInfo>
<Name>Abstract</Name>
<Value>Returning the address of a stack variable will cause unintended program behavior, typically in the form of a crash.</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Explanation</Name>
<Value>Because local variables are allocated on the stack, when a program returns a pointer to a local variable, it is returning a stack address. A subsequent function call is likely to re-use this same stack address, thereby overwriting the value of the pointer, which no longer corresponds to the same variable since a function's stack frame is invalidated when it returns. At best this will cause the value of the pointer to change unexpectedly. In many cases it causes the program to crash the next time the pointer is dereferenced. The problem can be hard to debug because the cause of the problem is often far removed from the symptom.

Example 1: The following function returns a stack address.


char* getName() {
  char name[STR_MAX];
  fillInName(name);
  return name;
}
</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Recommendations</Name>
<Value>Return pointers must point to the heap in order to remain valid. In most cases that means dynamically allocated memory, as in the following example.

Example 2:   


char* getName() {
  char* name = (char*) malloc(STR_MAX);
  fillInName(name);
  return name;
}


(Be certain that the memory will be freed appropriately by the caller or else this will introduce a memory leak to your program.)

In some situations it may be appropriate to return a pointer to a static variable, as in the following example. This is acceptable because static variables are allocated on the heap.

Example 3:


char* getName() {
  static char name[STR_MAX];
  fillInName(name);
  return name;
}


If you return a pointer to static variable, be sure that the code is not required to be thread-safe.</Value>
                            </MetaInfo>
                            <AttributeValue>
<Name>&lt;Unaudited&gt;</Name>
<Count>1</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Not an Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Reliability Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Bad Practice</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Suspicious</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Exploitable</Name>
<Count>0</Count>
                            </AttributeValue>
                        </MajorAttributeSummary>
                        <Issue ruleID="2DC02653-70AD-41C0-9E34-8705907D2E4D" iid="A53801E1CB88BA8D251B022E19CEF284">
                            <Category>Code Correctness: Function Returns Stack Address</Category>
                            <Folder>High</Folder>
                            <Kingdom>Code Quality</Kingdom>
                            <Abstract>The function XszPackTreeWithHeadings() in fieldcmd.cpp returns the address of a stack variable on line 4031. This will cause unintended program behavior, typically in the form of a program crash.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>fieldcmd.cpp</FileName>
<FilePath>dev/word/client/shared/fieldcmd.cpp</FilePath>
<LineStart>4031</LineStart>
<Snippet>			{
			*plvlChild = lvc.lvlOtl;
			return pxsz;
			}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 562</ExternalCategory>
                        </Issue>
                    </GroupingSection>
                    <GroupingSection count="1">
                        <groupTitle>Insecure Randomness</groupTitle>
                        <MajorAttributeSummary>
                            <MetaInfo>
<Name>Abstract</Name>
<Value>Standard pseudo-random number generators cannot withstand cryptographic attacks.</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Explanation</Name>
<Value>Insecure randomness errors occur when a function that can produce predictable values is used as a source of randomness in a security-sensitive context. 

Computers are deterministic machines, and as such are unable to produce true randomness. Pseudo-Random Number Generators (PRNGs) approximate randomness algorithmically, starting with a seed from which subsequent values are calculated. 

There are two types of PRNGs: statistical and cryptographic. Statistical PRNGs provide useful statistical properties, but their output is highly predictable and forms an easy to reproduce numeric stream that is unsuitable for use in cases where security depends on generated values being unpredictable. Cryptographic PRNGs address this problem by generating output that is more difficult to predict. For a value to be cryptographically secure, it must be impossible or highly improbable for an attacker to distinguish between it and a truly random value. In general, if a PRNG algorithm is not advertised as being cryptographically secure, it is probably a statistical PRNG and should not be used in security-sensitive contexts, where its use can lead to serious vulnerabilities such as easy-to-guess temporary passwords, predictable cryptographic keys, session hijacking, and DNS spoofing.

Example: The following code uses a statistical PRNG to create a URL for a receipt that remains active for some period of time after a purchase.


char* CreateReceiptURL() {
    int num;
    time_t t1;
    char *URL = (char*) malloc(MAX_URL);
    if (URL) {
        (void) time(&amp;t1);
        srand48((long) t1);     /* use time to set seed */
        sprintf(URL, &quot;%s%d%s&quot;, &quot;http://test.com/&quot;, lrand48(), &quot;.html&quot;);
    }
    return URL;
}


This code uses the lrand48() function to generate &quot;unique&quot; identifiers for the receipt pages it generates. Because lrand48() is a statistical PRNG, it is easy for an attacker to guess the strings it generates. Although the underlying design of the receipt system is also faulty, it would be more secure if it used a random number generator that did not produce predictable receipt identifiers.</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Recommendations</Name>
<Value>When unpredictability is critical, as is the case with most security-sensitive uses of randomness, use a cryptographic PRNG. Regardless of the PRNG you choose, always use a value with sufficient entropy to seed the algorithm. (Values such as the current time offer only negligible entropy and should not be used.)

There are various cross-platform solutions for C and C++ programs that offer cryptographically secure PRNGs, such as Yarrow [1], CryptLib [2], Crypt++ [3], BeeCrypt [4] and OpenSSL [5]. 

On Windows(R) systems, C and C++ programs can use the CryptGenRandom() function in the CryptoAPI [6]. To avoid the overhead of pulling in the entire CryptoAPI, access the underlying RtlGenRandom() function directly [7]. 

In the Windows .NET framework, use the GetBytes() function in any class that implements System.Security.Cryptography.RandomNumberGenerator, such as System.Security.Cryptography.RNGCryptoServiceProvider [8].</Value>
                            </MetaInfo>
                            <AttributeValue>
<Name>&lt;Unaudited&gt;</Name>
<Count>1</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Not an Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Reliability Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Bad Practice</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Suspicious</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Exploitable</Name>
<Count>0</Count>
                            </AttributeValue>
                        </MajorAttributeSummary>
                        <Issue ruleID="CB0D4A41-677E-49CF-926F-F8EFBB7AF919" iid="6A91D3CF57E3DCEF404D2FC82C9D742F">
                            <Category>Insecure Randomness</Category>
                            <Folder>High</Folder>
                            <Kingdom>Security Features</Kingdom>
                            <Abstract>The random number generator implemented by srand() cannot withstand a cryptographic attack.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oarth.cpp</FileName>
<FilePath>dev/word/core/oarth.cpp</FilePath>
<LineStart>115</LineStart>
<Snippet>	try // TOwningPtr constructor can throw
		{
		::srand(DebugElse(0, (uint)::GetTickCount64())); // for m_pdod-&gt;pud-&gt;pidgenArtid

		POADC poadc(new ADC(m_pdod));</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 330</ExternalCategory>
                        </Issue>
                    </GroupingSection>
                    <GroupingSection count="1">
                        <groupTitle>Race Condition: File System Access</groupTitle>
                        <MajorAttributeSummary>
                            <MetaInfo>
<Name>Abstract</Name>
<Value>The window of time between when a file property is checked and when the file is used can be exploited to launch a privilege escalation attack.</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Explanation</Name>
<Value>File access race conditions, known as time-of-check, time-of-use (TOCTOU) race conditions, occur when:

1. The program checks a property of a file, referencing the file by name. 

2. The program later performs a filesystem operation using the same filename and assumes that the previously-checked property still holds.


Example 1: The following code is from a program installed setuid root. The program performs certain file operations on behalf of non-privileged users, and uses access checks to ensure that it does not use its root privileges to perform operations that should otherwise be unavailable the current user. The program uses the access() system call to check if the person running the program has permission to access the specified file before it opens the file and performs the necessary operations. 


  if (!access(file,W_OK)) {
    f = fopen(file,&quot;w+&quot;);
    operate(f);
    ...
  }
  else {
    fprintf(stderr,&quot;Unable to open file %s.\n&quot;,file);
  }


The call to access() behaves as expected, and returns 0 if the user running the program has the necessary permissions to write to the file, and -1 otherwise. However, because both access() and fopen() operate on filenames rather than on file handles, there is no guarantee that the file variable still refers to the same file on disk when it is passed to fopen() that it did when it was passed to access(). If an attacker replaces file after the call to access() with a symbolic link to a different file, the program will use its root privileges to operate on the file even if it is a file that the attacker would otherwise be unable to modify. By tricking the program into performing an operation that would otherwise be impermissible, the attacker has gained elevated privileges. 

This type of vulnerability is not limited to programs with root privileges. If the application is capable of performing any operation that the attacker would not otherwise be allowed perform, then it is a possible target.

The window of vulnerability for such an attack is the period of time between when the property is tested and when the file is used. Even if the use immediately follows the check, modern operating systems offer no guarantee about the amount of code that will be executed before the process yields the CPU. Attackers have a variety of techniques for expanding the length of the window of opportunity in order to make exploits easier, but even with a small window, an exploit attempt can simply be repeated over and over until it is successful.

Example 2: The following code creates a file and then changes the owner of the file.


    fd = creat(FILE, 0644);  /* Create file */
    if (fd == -1)
        return;
    if (chown(FILE, UID, -1) &lt; 0) {  /* Change file owner */
      ...
    }


The code assumes that the file operated upon by the call to chown() is the same as the file created by the call to creat(), but that is not necessarily the case.  Because chown() operates on a file name and not on a file handle, an attacker might be able to replace the file with a link to file the attacker does not own.  The call to chown() would then give the attacker ownership of the linked file.</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Recommendations</Name>
<Value>To prevent file access race conditions, you must ensure that a file cannot be replaced or modified once the program has begun a series of operations on it. Avoid functions that operate on filenames, since they are not guaranteed to refer to the same file on disk outside of the scope of a single function call. Open the file first and then use functions that operate on file handles rather than filenames. 

The most effective way to check file access permissions is to drop to the privilege of the current user and attempt to open the file with those reduced privileges. If the file open succeeds, additional access checks can be performed atomically using the resulting file handle. If the file open fails, then the user does not have access to the file and the operation should be aborted. By dropping to the user's privilege before attempting a series of file operations, the program cannot be easily tricked by changes to the underlying filesystem.</Value>
                            </MetaInfo>
                            <MetaInfo>
<Name>Tips</Name>
<Value>1. Be careful, a race condition can still exist after the file is opened if later operations depend on a property that was checked before the file was opened. For example, if a stat structure is populated before a file is opened, and then a later decision about whether to operate on the file is based on a value read from the stat structure, the file could be modified prior to being opened, rendering the stat information stale. Always verify that file operations are performed on open file handles rather than filenames.

2. Some file system APIs do not have alternatives that operate on file handles. For example, there is no way to delete a file via a file handle using standard C functions. Thus, some race conditions can only be avoided by placing the file in a directory path that is completely under the control of the program. If this mitigation is taken, then otherwise unsafe system calls can be used safely.</Value>
                            </MetaInfo>
                            <AttributeValue>
<Name>&lt;Unaudited&gt;</Name>
<Count>1</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Not an Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Reliability Issue</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Bad Practice</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Suspicious</Name>
<Count>0</Count>
                            </AttributeValue>
                            <AttributeValue>
<Name>Exploitable</Name>
<Count>0</Count>
                            </AttributeValue>
                        </MajorAttributeSummary>
                        <Issue ruleID="57B0CA93-7DF5-4452-9A00-08AC165BA412" iid="35403B2A493936AB717279D671365012">
                            <Category>Race Condition: File System Access</Category>
                            <Folder>High</Folder>
                            <Kingdom>Time and State</Kingdom>
                            <Abstract>The window of time between the call to &lt;a href=&quot;location://C:/office/dev/otools/inc/liblet/msofile.h###289###0###0&quot;&gt;MsoFFileExist()&lt;/a&gt; and &lt;a href=&quot;location://C:/office/dev/otools/inc/liblet/msofile.h###200###0###0&quot;&gt;MsoDeleteFileW()&lt;/a&gt; can be exploited to launch a privilege escalation attack.</Abstract>
                            <Friority>High</Friority>
                            <Primary>
<FileName>oartcmd.cpp</FileName>
<FilePath>dev/word/client/shared/oartcmd.cpp</FilePath>
<LineStart>5038</LineStart>
<Snippet>			}
		if (fTempTransfer || !fResult)
			MsoDeleteFileW(xszLocalSavePath);
		}
</Snippet>
                            </Primary>
                            <ExternalCategory type="CWE">CWE ID 362, CWE ID 367</ExternalCategory>
                        </Issue>
                    </GroupingSection>
                </Chart>
            </IssueListing>
        </SubSection>
    </ReportSection>
    <ReportSection optionalSubsections="true" enabled="true">
        <Title>Detailed Project Summary</Title>
        <SubSection enabled="true">
            <Title>Files Scanned</Title>
            <Description>A detailed listing of all scanned files.  Files are listed with paths relative to the Source Base Path</Description>
            <Text>Code base location: C:/Office&#xD;
Files Scanned:&#xD;
Build/x86/ship/word/client/desktop/lib/obj/i386/cdsbcd.cpp		cpp	17 Lines	1.1 MB	May 29, 2014 1:24:31 PM
Build/x86/ship/word/client/desktop/lib/obj/i386/cdsbmnu.cpp		cpp	28 Lines	130 KB	May 29, 2014 1:24:31 PM
Build/x86/ship/word/client/desktop/lib/obj/i386/dsctl_i.c		cpp	1 Lines	1.8 KB	May 29, 2014 1:24:31 PM
Build/x86/ship/word/client/fastmodel/imm/obj/i386/pch_hdr.src		cpp		19 bytes	May 29, 2014 8:37:50 PM
Build/x86/ship/word/client/fastmodel/shared/obj/i386/cdsbcd.cpp		cpp	17 Lines	132.2 KB	May 29, 2014 1:23:59 PM
Build/x86/ship/word/client/fastmodel/shared/obj/i386/cdsctc_.h		secondary		805 bytes	May 29, 2014 1:23:59 PM
Build/x86/ship/word/client/fastmodel/shared/obj/i386/insrows.hs		secondary		855 bytes	May 29, 2014 1:23:59 PM
Build/x86/ship/word/client/fastmodel/shared/obj/i386/numgal.hs		secondary		2.4 KB	May 29, 2014 1:23:59 PM
Build/x86/ship/word/client/fastmodel/shared/obj/i386/para.hs		secondary		4.1 KB	May 29, 2014 1:23:59 PM
Build/x86/ship/word/client/fastmodel/shared/obj/i386/pch_hdr.src		cpp		19 bytes	May 29, 2014 6:56:11 PM
Build/x86/ship/word/client/fastmodel/shared/obj/i386/spprops.hs		secondary		7.1 KB	May 29, 2014 1:23:59 PM
Build/x86/ship/word/client/fastmodel/shared/obj/i386/tableins.hs		secondary		2.7 KB	May 29, 2014 1:23:59 PM
Build/x86/ship/word/client/fastmodel/shared/obj/i386/textflow.hs		secondary		1.5 KB	May 29, 2014 1:23:59 PM
Build/x86/ship/word/client/fastmodel/unittest/obj/i386/pch_hdr.src		cpp		19 bytes	May 29, 2014 8:43:39 PM
Build/x86/ship/word/client/fastmodel/wp/obj/i386/pch_hdr.src		cpp		19 bytes	May 29, 2014 8:41:18 PM
Build/x86/ship/word/client/shared/app/obj/i386/pch_hdr.src		cpp		19 bytes	May 29, 2014 8:44:46 PM
Build/x86/ship/word/client/shared/comptest/inproctests/obj/i386/pch_hdr.src		cpp		19 bytes	May 30, 2014 12:52:34 AM
Build/x86/ship/word/client/shared/ct_stub/obj/i386/pch_hdr.src		cpp		19 bytes	May 30, 2014 12:09:48 AM
Build/x86/ship/word/client/shared/lib/obj/i386/pch_hdr.src		cpp		19 bytes	May 29, 2014 9:13:46 PM
Build/x86/ship/word/client/shared/uia/obj/i386/pch_hdr.src		cpp		19 bytes	May 30, 2014 12:20:27 AM
Build/x86/ship/word/client/shared/unittest/obj/i386/pch_hdr.src		cpp		19 bytes	May 30, 2014 12:10:55 AM
Build/x86/ship/word/client/stubs/imm/obj/i386/pch_hdr.src		cpp		19 bytes	May 30, 2014 12:27:27 AM
Build/x86/ship/word/client/win32/wdoart/obj/i386/pch_hdr.src		cpp		19 bytes	May 30, 2014 12:49:59 AM
Build/x86/ship/word/core/comptest/obj/i386/pch_hdr.src		cpp		19 bytes	May 29, 2014 5:51:34 PM
Build/x86/ship/word/core/lib/obj/i386/log_gen.cpp		cpp	730 Lines	314.7 KB	May 29, 2014 1:23:27 PM
Build/x86/ship/word/core/lib/obj/i386/pch_hdr.src		cpp		19 bytes	May 29, 2014 2:38:56 PM
Build/x86/ship/word/core/lib/obj/i386/stidef_.cpp		cpp	6,738 Lines	1.3 MB	May 29, 2014 1:23:27 PM
Build/x86/ship/word/core/lib/obj/i386/xmltk_.cpp		cpp	11,504 Lines	848.9 KB	May 29, 2014 1:23:27 PM
Build/x86/ship/word/core/lib/obj/i386/xmltk_dsp_.cpp		cpp	6,926 Lines	415.7 KB	May 29, 2014 1:23:27 PM
Build/x86/ship/word/core/rtf/obj/i386/pch_hdr.src		cpp		19 bytes	May 29, 2014 5:44:15 PM
Build/x86/ship/word/core/unittest/obj/i386/pch_hdr.src		cpp		19 bytes	May 29, 2014 5:54:37 PM
Build/x86/ship/word/core/wdoart/obj/i386/pch_hdr.src		cpp		19 bytes	May 29, 2014 6:14:11 PM
Build/x86/ship/word/core/wdoart/obj/i386/wddrs_gen.cpp		cpp	67 Lines	9.6 KB	May 29, 2014 1:21:51 PM
Build/x86/ship/word/core/wdoart/obj/i386/wddrs_gen.h		secondary		2.1 KB	May 29, 2014 1:21:50 PM
Build/x86/ship/word/endpoints/converters/lyncconv/proxy/obj/i386/dlldata.c		cpp	2 Lines	829 bytes	May 29, 2014 1:21:23 PM
Build/x86/ship/word/endpoints/converters/lyncconv/proxy/obj/i386/lynchtmlconverter_p.c		secondary		19.2 KB	May 29, 2014 1:21:23 PM
Build/x86/ship/word/endpoints/converters/wordcnvpxy/obj/i386/dlldata.c		cpp	2 Lines	821 bytes	May 29, 2014 1:21:17 PM
Build/x86/ship/word/endpoints/converters/wordcnvpxy/obj/i386/wordconverter_p.c		secondary		27.5 KB	May 29, 2014 1:21:17 PM
Build/x86/ship/word/endpoints/metro/wpstubs/obj/i386/pch_hdr.src		cpp		19 bytes	May 29, 2014 1:28:04 PM
Build/x86/ship/word/endpoints/srv/wordsrv/obj/i386/pch_hdr.src		cpp		19 bytes	May 29, 2014 1:30:39 PM
Build/x86/ship/word/inc/IWordLogger_gen.h		secondary		74.4 KB	May 29, 2014 1:21:12 PM
Build/x86/ship/word/inc/LogCommon_gen.h		secondary		4.9 KB	May 29, 2014 1:21:12 PM
Build/x86/ship/word/inc/Log_gen.h		secondary		61.6 KB	May 29, 2014 1:21:12 PM
Build/x86/ship/word/inc/arto_xml.cpp		secondary		3.3 KB	May 29, 2014 1:23:24 PM
Build/x86/ship/word/inc/arto_xml.h		secondary		2.9 KB	May 29, 2014 1:23:24 PM
Build/x86/ship/word/inc/ctkclnt_.h		secondary		44.4 KB	May 29, 2014 1:23:23 PM
Build/x86/ship/word/inc/guid.h		secondary		28.1 KB	May 29, 2014 1:23:56 PM
Build/x86/ship/word/inc/htkdsp_.h		secondary		14.8 KB	May 29, 2014 1:23:24 PM
Build/x86/ship/word/inc/htkval_.h		secondary		18.8 KB	May 29, 2014 1:23:24 PM
Build/x86/ship/word/inc/lynchtmlconverter.h		secondary		8.1 KB	May 29, 2014 1:21:23 PM
Build/x86/ship/word/inc/lynchtmlconverter_i.c		secondary		1.8 KB	May 29, 2014 1:21:23 PM
Build/x86/ship/word/inc/manifest_OfficeWord.h		secondary		94.9 KB	May 29, 2014 1:21:13 PM
Build/x86/ship/word/inc/metro/bartbt.h		secondary		13.5 KB	May 29, 2014 1:23:33 PM
Build/x86/ship/word/inc/metro/dsctl.h		secondary		6 KB	May 29, 2014 1:23:35 PM
Build/x86/ship/word/inc/metro/kmeusa_.h		secondary		16.7 KB	May 29, 2014 1:23:50 PM
Build/x86/ship/word/inc/metro/ostrman.h		secondary		629.8 KB	May 29, 2014 1:23:52 PM
Build/x86/ship/word/inc/metro/walert.h		secondary		1 KB	May 29, 2014 1:23:33 PM
Build/x86/ship/word/inc/oacproto.h		secondary		191.7 KB	May 29, 2014 1:23:56 PM
Build/x86/ship/word/inc/oactbl.h		secondary		22.7 KB	May 29, 2014 1:23:56 PM
Build/x86/ship/word/inc/obaid.h		secondary		228.5 KB	May 29, 2014 1:23:56 PM
Build/x86/ship/word/inc/obconst.h		secondary		31.9 KB	May 29, 2014 1:23:56 PM
Build/x86/ship/word/inc/obrecfto.h		secondary		1.6 MB	May 29, 2014 1:23:58 PM
Build/x86/ship/word/inc/wdoart14_gen.cpp		secondary		11.3 KB	May 29, 2014 1:21:55 PM
Build/x86/ship/word/inc/wdoart14_gen.h		secondary		2.9 KB	May 29, 2014 1:21:55 PM
Build/x86/ship/word/inc/wdoart_gen.cpp		secondary		102.6 KB	May 29, 2014 1:21:53 PM
Build/x86/ship/word/inc/wdoart_gen.h		secondary		31.5 KB	May 29, 2014 1:21:53 PM
Build/x86/ship/word/inc/word/ATCategory.HS		secondary		898 bytes	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/Afmtdef.h		secondary		110.5 KB	May 29, 2014 1:23:19 PM
Build/x86/ship/word/inc/word/Afmteval.c		secondary		407.7 KB	May 29, 2014 1:23:19 PM
Build/x86/ship/word/inc/word/Afmtfilt.c		secondary		633 bytes	May 29, 2014 1:23:19 PM
Build/x86/ship/word/inc/word/Afmtruli.h		secondary		1.8 MB	May 29, 2014 1:23:19 PM
Build/x86/ship/word/inc/word/AutoText.HS		secondary		1.9 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/BBDDAddModifyDlg.h		secondary		2.6 KB	May 29, 2014 1:24:01 PM
Build/x86/ship/word/inc/word/BBPropertiesDlg.h		secondary		42.4 KB	May 29, 2014 1:24:01 PM
Build/x86/ship/word/inc/word/BibEdit.HS		secondary		5.8 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/ChgAllConfirm.h		secondary		2.5 KB	May 29, 2014 1:24:01 PM
Build/x86/ship/word/inc/word/CommentPopout.h		secondary		3.2 KB	May 29, 2014 1:24:02 PM
Build/x86/ship/word/inc/word/CompMrg.HS		secondary		1002 bytes	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/DOCSTAT.HS		secondary		2.3 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/DOCSUM.HS		secondary		2.6 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/Datedef.h		secondary		11.2 KB	May 29, 2014 1:23:21 PM
Build/x86/ship/word/inc/word/Dateeval.c		secondary		26.2 KB	May 29, 2014 1:23:21 PM
Build/x86/ship/word/inc/word/Dateruli.h		secondary		404.5 KB	May 29, 2014 1:23:21 PM
Build/x86/ship/word/inc/word/DefinitionsCallout.h		secondary		10.2 KB	May 29, 2014 1:24:02 PM
Build/x86/ship/word/inc/word/Emact.c_		secondary		6.9 KB	May 29, 2014 1:23:21 PM
Build/x86/ship/word/inc/word/Emactr.h		secondary		11.4 KB	May 29, 2014 1:23:21 PM
Build/x86/ship/word/inc/word/Emacts.h		secondary		31.2 KB	May 29, 2014 1:23:21 PM
Build/x86/ship/word/inc/word/FCC.HS		secondary		1.1 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/Filexist.HS		secondary		1.1 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/FindOptionsDialog.h		secondary		9.3 KB	May 29, 2014 1:24:01 PM
Build/x86/ship/word/inc/word/FontSub.HS		secondary		1.4 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/INSBREAK.HS		secondary		1.4 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/INSPGNUM.HS		secondary		1.2 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/INSROWS.HS		secondary		855 bytes	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/ImmzoomPane.h		secondary		3.2 KB	May 29, 2014 1:24:01 PM
Build/x86/ship/word/inc/word/ImmzoomPaneButton.h		secondary		1 KB	May 29, 2014 1:24:01 PM
Build/x86/ship/word/inc/word/InUse.HS		secondary		1 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/InsFld2.HS		secondary		2 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/Letters.HS		secondary		3 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/LettrGer.HS		secondary		3.1 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/ListForm.HS		secondary		2.4 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/LockTrackingPassDialog.h		secondary		2.3 KB	May 29, 2014 1:24:00 PM
Build/x86/ship/word/inc/word/MMDOCTYP.HS		secondary		1.4 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/Mntrdef.h		secondary		73.9 KB	May 29, 2014 1:23:20 PM
Build/x86/ship/word/inc/word/Mntreval.c		secondary		327 KB	May 29, 2014 1:23:20 PM
Build/x86/ship/word/inc/word/Mntrfilt.c		secondary		541 bytes	May 29, 2014 1:23:20 PM
Build/x86/ship/word/inc/word/Mntrruli.h		secondary		1.1 MB	May 29, 2014 1:23:20 PM
Build/x86/ship/word/inc/word/MrgConf.HS		secondary		1 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/NUMSETLV.HS		secondary		1.1 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/NavPane.h		secondary		29.8 KB	May 29, 2014 1:24:01 PM
Build/x86/ship/word/inc/word/NotifyDocDialog.h		secondary		1.3 KB	May 29, 2014 1:24:02 PM
Build/x86/ship/word/inc/word/Ole2Conv.HS		secondary		1.9 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/OptionsDoc.h		secondary		62.8 KB	May 29, 2014 1:24:00 PM
Build/x86/ship/word/inc/word/OptionsGenericList.h		secondary		2.4 KB	May 29, 2014 1:24:00 PM
Build/x86/ship/word/inc/word/OptionsGlobal.h		secondary		166 KB	May 29, 2014 1:24:00 PM
Build/x86/ship/word/inc/word/OptionsMathDoc.h		secondary		8.9 KB	May 29, 2014 1:24:02 PM
Build/x86/ship/word/inc/word/OsrWord.messages.h		secondary		11.2 KB	May 29, 2014 1:23:21 PM
Build/x86/ship/word/inc/word/OsrWord.requestHandler.cpp		secondary		13 KB	May 29, 2014 1:23:21 PM
Build/x86/ship/word/inc/word/OsrWord.requests.h		secondary		103.6 KB	May 29, 2014 1:23:21 PM
Build/x86/ship/word/inc/word/OsrWord.structs.h		secondary		4.5 KB	May 29, 2014 1:23:21 PM
Build/x86/ship/word/inc/word/OutDocInfo.h		secondary		22.7 KB	May 29, 2014 1:24:01 PM
Build/x86/ship/word/inc/word/OutSaveAs.h		secondary		9.2 KB	May 29, 2014 1:24:01 PM
Build/x86/ship/word/inc/word/PICT.HS		secondary		2.1 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/PROOFING.HS		secondary		2.3 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/PRSETUPL.HS		secondary		1.2 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/PrintPagesPerSheet.h		secondary		3.1 KB	May 29, 2014 1:24:01 PM
Build/x86/ship/word/inc/word/PrivWarn.HS		secondary		975 bytes	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/RMWarn.HS		secondary		1004 bytes	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/ReadingModeDlg.h		secondary		3.6 KB	May 29, 2014 1:24:02 PM
Build/x86/ship/word/inc/word/ResumeReadingCallout.h		secondary		2.8 KB	May 29, 2014 1:24:02 PM
Build/x86/ship/word/inc/word/RevPaneFlex.h		secondary		9.4 KB	May 29, 2014 1:24:01 PM
Build/x86/ship/word/inc/word/RevisionOptionsDialog.h		secondary		7.4 KB	May 29, 2014 1:24:00 PM
Build/x86/ship/word/inc/word/SRAddWrd.HS		secondary		949 bytes	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/Scandef.h		secondary		32.8 KB	May 29, 2014 1:23:20 PM
Build/x86/ship/word/inc/word/Scaneval.c		secondary		76.9 KB	May 29, 2014 1:23:20 PM
Build/x86/ship/word/inc/word/Scanruli.h		secondary		442.9 KB	May 29, 2014 1:23:20 PM
Build/x86/ship/word/inc/word/Strdef.h		secondary		10.1 KB	May 29, 2014 1:23:20 PM
Build/x86/ship/word/inc/word/Streval.c		secondary		17.6 KB	May 29, 2014 1:23:20 PM
Build/x86/ship/word/inc/word/Strruli.h		secondary		146.7 KB	May 29, 2014 1:23:20 PM
Build/x86/ship/word/inc/word/StyleBulNum.h		secondary		2.4 KB	May 29, 2014 1:24:00 PM
Build/x86/ship/word/inc/word/StylePri.HS		secondary		967 bytes	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/Symbol.HS		secondary		1.8 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/TBLPROPS.HS		secondary		5.3 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/TextFlow.HS		secondary		1.5 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/TimeFilteringDialog.h		secondary		4.3 KB	May 29, 2014 1:24:00 PM
Build/x86/ship/word/inc/word/TrustCenter.h		secondary		6.9 KB	May 29, 2014 1:24:01 PM
Build/x86/ship/word/inc/word/UnlockTrackingPassDialog.h		secondary		1.2 KB	May 29, 2014 1:24:00 PM
Build/x86/ship/word/inc/word/WORDCNT.HS		secondary		1.7 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/WordPrintSettings.h		secondary		27.3 KB	May 29, 2014 1:24:01 PM
Build/x86/ship/word/inc/word/XMLWarn.HS		secondary		942 bytes	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/XSLWarn.HS		secondary		861 bytes	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/XmlMappingPane.h		secondary		13 KB	May 29, 2014 1:24:01 PM
Build/x86/ship/word/inc/word/acexcept.HS		secondary		2.3 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/acexcept.sdm		secondary		10.5 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/afmtmsg.HS		secondary		1.2 KB	May 29, 2014 1:22:40 PM
Build/x86/ship/word/inc/word/afmtmsg.sdm		secondary		5.9 KB	May 29, 2014 1:22:40 PM
Build/x86/ship/word/inc/word/afmtprmt.HS		secondary		1.2 KB	May 29, 2014 1:22:40 PM
Build/x86/ship/word/inc/word/afmtprmt.sdm		secondary		4.7 KB	May 29, 2014 1:22:40 PM
Build/x86/ship/word/inc/word/afmtrev.HS		secondary		1 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/afmtrev.sdm		secondary		7.1 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/align.HS		secondary		1.5 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/align.sdm		secondary		5.1 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/apprun.HS		secondary		942 bytes	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/apprun.sdm		secondary		2.7 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/atmain.HS		secondary		2.1 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/atmain.sdm		secondary		10.1 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/autedit.HS		secondary		1.4 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/autedit.sdm		secondary		5.5 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/automan.HS		secondary		8.8 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/automan.sdm		secondary		47.3 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/autotext.sdm		secondary		5.7 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/barchn.htb		secondary		141.1 KB	May 29, 2014 1:21:57 PM
Build/x86/ship/word/inc/word/barjpn.htb		secondary		141 KB	May 29, 2014 1:21:56 PM
Build/x86/ship/word/inc/word/barkor.htb		secondary		141.1 KB	May 29, 2014 1:21:57 PM
Build/x86/ship/word/inc/word/barnew.HS		secondary		984 bytes	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/barnew.sdm		secondary		3.2 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/bartbt.h		secondary		13.5 KB	May 29, 2014 1:21:57 PM
Build/x86/ship/word/inc/word/bartpe.htb		secondary		141.1 KB	May 29, 2014 1:21:57 PM
Build/x86/ship/word/inc/word/barusa.htb		secondary		140.1 KB	May 29, 2014 1:21:56 PM
Build/x86/ship/word/inc/word/bibedit.sdm		secondary		31 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/biborg.HS		secondary		2.1 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/biborg.sdm		secondary		11.4 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/bookmark.HS		secondary		1.7 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/bookmark.sdm		secondary		7.5 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/border.HS		secondary		8.2 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/border.sdm		secondary		35.1 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/callout.HS		secondary		2 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/callout.sdm		secondary		9.9 KB	May 29, 2014 1:22:41 PM
Build/x86/ship/word/inc/word/capadd.HS		secondary		849 bytes	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/capadd.sdm		secondary		2.4 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/capauto.HS		secondary		1.7 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/capauto.sdm		secondary		8.4 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/capnum.HS		secondary		1.4 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/capnum.sdm		secondary		6.1 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/caption.HS		secondary		1.9 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/caption.sdm		secondary		9.3 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/cautofmt.HS		secondary		2.3 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/cautofmt.sdm		secondary		10.2 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/cbidi.HS		secondary		2.5 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/cbidi.sdm		secondary		12.6 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/cdirs.HS		secondary		1.2 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/cdirs.sdm		secondary		5.6 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/cdsbmcr.cpp		secondary		135.2 KB	May 29, 2014 1:22:35 PM
Build/x86/ship/word/inc/word/cdsctc_.h		secondary		805 bytes	May 29, 2014 1:22:35 PM
Build/x86/ship/word/inc/word/cdselk.h		secondary		90.9 KB	May 29, 2014 1:22:40 PM
Build/x86/ship/word/inc/word/cedit.HS		secondary		2.7 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/cedit.sdm		secondary		14 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/cellfmt.HS		secondary		856 bytes	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/cellfmt.sdm		secondary		4.3 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/cellopt.HS		secondary		1.5 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/cellopt.sdm		secondary		7 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/cfuzzy.HS		secondary		2 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/cfuzzy.sdm		secondary		9.3 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/cgeneral.HS		secondary		3.4 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/cgeneral.sdm		secondary		13.4 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/char.HS		secondary		4.7 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/char.sdm		secondary		44.3 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/chooseab.HS		secondary		1 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/chooseab.sdm		secondary		3 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/cimew2.HS		secondary		1 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/cimew2.sdm		secondary		2.4 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/citedit.HS		secondary		1.2 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/citedit.sdm		secondary		3.9 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/cmdcase.HS		secondary		1.3 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/cmdcase.sdm		secondary		4.7 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/cmdlist.HS		secondary		996 bytes	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/cmdlist.sdm		secondary		3.1 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/cmntr.HS		secondary		3.6 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/cmntr.sdm		secondary		10.4 KB	May 29, 2014 1:22:42 PM
Build/x86/ship/word/inc/word/colfmt.HS		secondary		1.2 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/colfmt.sdm		secondary		5.5 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/columns.HS		secondary		2.7 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/columns.sdm		secondary		16.7 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/compat.HS		secondary		6.7 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/compat.sdm		secondary		18.6 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/compatm.HS		secondary		977 bytes	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/compatm.sdm		secondary		3 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/compmrg.sdm		secondary		2.9 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/connect.HS		secondary		1.3 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/connect.sdm		secondary		4.8 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/consis.HS		secondary		1.4 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/consis.sdm		secondary		5.3 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/copypast.HS		secondary		1.6 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/copypast.sdm		secondary		6.5 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/cprint.HS		secondary		2.4 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/cprint.sdm		secondary		14.7 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/creatlab.HS		secondary		1.1 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/creatlab.sdm		secondary		4.1 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/crevmark.HS		secondary		4 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/crevmark.sdm		secondary		21.6 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/csave.HS		secondary		2.8 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/csave.sdm		secondary		13.5 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/csecure.HS		secondary		2 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/cspell.HS		secondary		4.9 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/cspell.sdm		secondary		22.6 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/csslink.HS		secondary		1.6 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/csslink.sdm		secondary		6 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/ctypo.HS		secondary		2.1 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/ctypo.sdm		secondary		8.5 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/cuser.HS		secondary		1.1 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/cuser.sdm		secondary		4.2 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/cust.HS		secondary		900 bytes	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/cust.sdm		secondary		4.4 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/cview.HS		secondary		3.4 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/cview.sdm		secondary		18.4 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/delcells.HS		secondary		793 bytes	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/delcells.sdm		secondary		3.5 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/dictnry.HS		secondary		1.4 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/dictnry.sdm		secondary		5.9 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/dircr.HS		secondary		974 bytes	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/dircr.sdm		secondary		3.2 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/doccomp.HS		secondary		3.7 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/doccomp.sdm		secondary		14 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/docstat.sdm		secondary		10.4 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/docsum.sdm		secondary		9.4 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/dropcap.HS		secondary		1.5 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/dropcap.sdm		secondary		8.2 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/dsctl.h		secondary		6 KB	May 29, 2014 1:21:58 PM
Build/x86/ship/word/inc/word/edmacro.HS		secondary		1.4 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/edmacro.sdm		secondary		6.2 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/edstyle.HS		secondary		1.8 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/edstyle.sdm		secondary		10.1 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/emailopt.HS		secondary		1.6 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/emailopt.sdm		secondary		6.4 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/enclose.HS		secondary		1.5 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/enclose.sdm		secondary		6.7 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/envlabel.HS		secondary		5.8 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/envlabel.sdm		secondary		25.9 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/envsetup.HS		secondary		4.3 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/envsetup.sdm		secondary		21.4 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/envsize.HS		secondary		991 bytes	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/envsize.sdm		secondary		3.7 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/epssub.HS		secondary		912 bytes	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/epssub.sdm		secondary		3 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/eqaspace.HS		secondary		1.4 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/eqaspace.sdm		secondary		6 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/factoid.HS		secondary		1.3 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/factoid.sdm		secondary		6.2 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/fcc.sdm		secondary		4.6 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/filetmpl.HS		secondary		4.2 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/filetmpl.sdm		secondary		21.7 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/filexist.sdm		secondary		3.8 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/fittext.HS		secondary		1 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/fittext.sdm		secondary		3.8 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/fixdlts.h		secondary		8.3 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/fldmgmt.HS		secondary		1.2 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/fldmgmt.sdm		secondary		4.2 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/fmtframe.HS		secondary		2.6 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/fmtframe.sdm		secondary		14.1 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/fmtinsp.HS		secondary		1.6 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/fmtinsp.sdm		secondary		5.1 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/fmtpane.HS		secondary		2.3 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/fmtpane.sdm		secondary		9.9 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/fmtpgnum.HS		secondary		1.6 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/fmtpgnum.sdm		secondary		7.5 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/fontsub.sdm		secondary		6.1 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/footopt.HS		secondary		2 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/formfld.HS		secondary		3.7 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/formfld.sdm		secondary		17.2 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/formfldh.HS		secondary		1.6 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/formfldh.sdm		secondary		5.9 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/formhlp.HS		secondary		864 bytes	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/formhlp.sdm		secondary		2.2 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/formula.HS		secondary		1.2 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/formula.sdm		secondary		4.7 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/frprop.HS		secondary		2.6 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/frprop.sdm		secondary		14.4 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/ftnedn.HS		secondary		2.7 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/ftnmerge.HS		secondary		1 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/ftnmerge.sdm		secondary		3.1 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/ftnview.HS		secondary		1 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/ftnview.sdm		secondary		3.3 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/glsy.HS		secondary		1.4 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/glsy.sdm		secondary		9 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/gramset.HS		secondary		1.1 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/gramset.sdm		secondary		4.1 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/gramstat.HS		secondary		840 bytes	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/gramstat.sdm		secondary		2.3 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/greeting.HS		secondary		1.5 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/greeting.sdm		secondary		5.9 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/grtsub.HS		secondary		926 bytes	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/grtsub.sdm		secondary		2.9 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/hdropts.HS		secondary		936 bytes	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/hdropts.sdm		secondary		3.8 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/hyphen.HS		secondary		1.1 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/hyphen.sdm		secondary		5 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/hypheno.HS		secondary		985 bytes	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/hypheno.sdm		secondary		3.1 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/iconsel.HS		secondary		1.1 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/iconsel.sdm		secondary		4 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/indexent.HS		secondary		2.4 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/indexent.sdm		secondary		10.1 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/insbreak.sdm		secondary		6.1 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/inscells.HS		secondary		808 bytes	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/inscells.sdm		secondary		3.6 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/insdata.HS		secondary		2.1 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/insdata.sdm		secondary		7.8 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/insdopts.HS		secondary		1.2 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/insdopts.sdm		secondary		4.1 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/insdttm.HS		secondary		1.4 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/insdttm.sdm		secondary		5.9 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/insertocx.HS		secondary		841 bytes	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/insfield.HS		secondary		6.2 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/insfield.sdm		secondary		29.9 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/insfld2.sdm		secondary		8.7 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/insmerge.HS		secondary		1 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/insmerge.sdm		secondary		3.5 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/insnum.HS		secondary		1014 bytes	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/insnum.sdm		secondary		3.2 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/inspgnum.sdm		secondary		4.6 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/insrows.sdm		secondary		2.9 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/inuse.sdm		secondary		3.7 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/kmeusa_.h		secondary		35.2 KB	May 29, 2014 1:22:35 PM
Build/x86/ship/word/inc/word/kumimoji.HS		secondary		1.3 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/kumimoji.sdm		secondary		6.9 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/label.HS		secondary		2.3 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/label.sdm		secondary		10.9 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/labeldet.HS		secondary		2.3 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/labeldet.sdm		secondary		13.2 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/lang.HS		secondary		1.2 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/lang.sdm		secondary		4.7 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/letters.sdm		secondary		46.4 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/libname.HS		secondary		933 bytes	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/libname.sdm		secondary		2.4 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/library.HS		secondary		2.1 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/library.sdm		secondary		8.9 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/listform.sdm		secondary		8.4 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/mathfns.HS		secondary		1.1 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/mathfns.sdm		secondary		4.3 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/matspace.HS		secondary		1.8 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/matspace.sdm		secondary		9.5 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/mmdoctyp.sdm		secondary		4.2 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/mmfax.HS		secondary		1.3 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/mmfax.sdm		secondary		4.7 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/mmnewdoc.HS		secondary		1.3 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/mmnewdoc.sdm		secondary		4.1 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/mmprint.HS		secondary		1.3 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/mmprint.sdm		secondary		4.3 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/mrgconf.sdm		secondary		3.5 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/mrgcorer.HS		secondary		1.2 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/mrgcorer.sdm		secondary		5.9 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/mrgopts.HS		secondary		1.9 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/mrgopts.sdm		secondary		7.6 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/mrgsetup.HS		secondary		1.1 KB	May 29, 2014 1:22:48 PM
Build/x86/ship/word/inc/word/mrgsetup.sdm		secondary		3.7 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/msgbox.HS		secondary		1.3 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/msgbox.sdm		secondary		3.3 KB	May 29, 2014 1:22:47 PM
Build/x86/ship/word/inc/word/newdfile.HS		secondary		2.1 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/newdfile.sdm		secondary		9.3 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/numcust.HS		secondary		6 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/numcust.sdm		secondary		40.6 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/numgal.HS		secondary		2.4 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/numgal.sdm		secondary		11.5 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/numsetlv.sdm		secondary		5.1 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/ole2conv.sdm		secondary		6.8 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/ole2ins.HS		secondary		2 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/ole2ins.sdm		secondary		8.2 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/ole2link.HS		secondary		2.3 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/ole2link.sdm		secondary		10.1 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/ole2pste.HS		secondary		1.9 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/ole2pste.sdm		secondary		7.2 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/openpass.HS		secondary		961 bytes	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/openpass.sdm		secondary		2.9 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/organizer.HS		secondary		1.4 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/organizer.sdm		secondary		5.4 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/ostrman.h		secondary		1.1 MB	May 29, 2014 1:22:40 PM
Build/x86/ship/word/inc/word/para.HS		secondary		4.1 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/para.sdm		secondary		30 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/passconf.HS		secondary		991 bytes	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/passconf.sdm		secondary		2.6 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/pfnlst.h		secondary		64.3 KB	May 29, 2014 1:23:00 PM
Build/x86/ship/word/inc/word/pgsetup.HS		secondary		7.3 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/pgsetup.sdm		secondary		40.3 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/pict.sdm		secondary		11.7 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/placeh.HS		secondary		985 bytes	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/placeh.sdm		secondary		3.5 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmask.HS		secondary		1.2 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmask.sdm		secondary		4.4 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmbarcod.HS		secondary		1.1 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmbarcod.sdm		secondary		4.7 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmcheck.HS		secondary		966 bytes	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmcheck.sdm		secondary		3.6 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmconfrm.HS		secondary		995 bytes	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/pmconfrm.sdm		secondary		3 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/pmdde.HS		secondary		1.5 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/pmdde.sdm		secondary		5 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/pmdelim.HS		secondary		1.1 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmdelim.sdm		secondary		5.4 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmedsql.HS		secondary		889 bytes	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmedsql.sdm		secondary		2.6 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmexcel.HS		secondary		956 bytes	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmexcel.sdm		secondary		2.9 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmfillin.HS		secondary		1.1 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmfillin.sdm		secondary		3.5 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmfind.HS		secondary		1 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmfind.sdm		secondary		3.1 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmif.HS		secondary		1.6 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmif.sdm		secondary		6.8 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmnextif.HS		secondary		1.1 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmnextif.sdm		secondary		4 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmselect.HS		secondary		3.1 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmselect.sdm		secondary		23.8 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmset.HS		secondary		1.2 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmset.sdm		secondary		4 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmsetup.HS		secondary		2 KB	May 29, 2014 1:22:50 PM
Build/x86/ship/word/inc/word/pmsetup.sdm		secondary		9.7 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/pmskipif.HS		secondary		1.1 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/pmskipif.sdm		secondary		4 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/pmtable.HS		secondary		1.2 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/pmtable.sdm		secondary		3.9 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/pmtblopt.HS		secondary		1.1 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/pmtblopt.sdm		secondary		3.2 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/postab.HS		secondary		1.3 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/postab.sdm		secondary		5.4 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/print.HS		secondary		3.4 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/print.sdm		secondary		18.1 KB	May 29, 2014 1:22:59 PM
Build/x86/ship/word/inc/word/privwarn.sdm		secondary		2.9 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/prmsg.HS		secondary		823 bytes	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/prompt.HS		secondary		867 bytes	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/prompt.sdm		secondary		2.5 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/proofing.sdm		secondary		11.7 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/protdel.HS		secondary		1015 bytes	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/protdel.sdm		secondary		3.4 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/protect.HS		secondary		1.4 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/protect.sdm		secondary		5.1 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/protpane.HS		secondary		2.2 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/protpane.sdm		secondary		11.8 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/protpass.HS		secondary		1.4 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/protpass.sdm		secondary		6 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/protuser.HS		secondary		997 bytes	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/protuser.sdm		secondary		3.1 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/prsetupl.sdm		secondary		5.9 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/recorder.HS		secondary		1.1 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/recorder.sdm		secondary		5.9 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/renfld.HS		secondary		863 bytes	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/renfld.sdm		secondary		2.4 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/renum.HS		secondary		3 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/renum.sdm		secondary		15.4 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/replace.HS		secondary		6.2 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/replace.sdm		secondary		35.8 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/revmark.HS		secondary		1.2 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/revmark.sdm		secondary		5.2 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/rmprompt.HS		secondary		1.2 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/rmprompt.sdm		secondary		5.2 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/rmreview.HS		secondary		1.1 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/rmreview.sdm		secondary		9.8 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/rmwarn.sdm		secondary		4.5 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/rowfmt.HS		secondary		1.7 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/rowfmt.sdm		secondary		8.2 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/rtfstr_.h		secondary		134.2 KB	May 29, 2014 1:22:40 PM
Build/x86/ship/word/inc/word/rtftbl.h		secondary		440.5 KB	May 29, 2014 1:21:57 PM
Build/x86/ship/word/inc/word/ruby.HS		secondary		2.2 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/ruby.sdm		secondary		11.5 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/savechk.HS		secondary		1.3 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/savechk.sdm		secondary		5 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/sect.HS		secondary		1.9 KB	May 29, 2014 1:22:51 PM
Build/x86/ship/word/inc/word/sect.sdm		secondary		8.3 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/sectline.HS		secondary		1.4 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/sectline.sdm		secondary		6.3 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/sectlock.HS		secondary		1.1 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/sectlock.sdm		secondary		3.8 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/snapgrid.HS		secondary		2.4 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/snapgrid.sdm		secondary		12.2 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/sort.HS		secondary		3.5 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/sort.sdm		secondary		15.6 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/sortopt.HS		secondary		1.7 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/sortopt.sdm		secondary		6.7 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/splayout.HS		secondary		6 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/splayout.sdm		secondary		51.3 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/spltcell.HS		secondary		1 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/spltcell.sdm		secondary		4.2 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/spprops.HS		secondary		7.1 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/spprops.sdm		secondary		91.8 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/sraddwrd.sdm		secondary		3 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/stripes.HS		secondary		983 bytes	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/stripes.sdm		secondary		3.1 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/styleapp.HS		secondary		1.1 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/styleapp.sdm		secondary		4 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/stylebro.HS		secondary		1.3 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/stylebro.sdm		secondary		5.2 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/stylelst.HS		secondary		944 bytes	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/stylelst.sdm		secondary		3.2 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/stylemod.HS		secondary		4.5 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/stylemod.sdm		secondary		34.8 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/stylepri.sdm		secondary		3.1 KB	May 29, 2014 1:22:58 PM
Build/x86/ship/word/inc/word/styleren.HS		secondary		1017 bytes	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/styleren.sdm		secondary		2.9 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/stylevis.HS		secondary		5.8 KB	May 29, 2014 1:22:46 PM
Build/x86/ship/word/inc/word/stylock.HS		secondary		1.4 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/stylock.sdm		secondary		7.5 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/stymsg.HS		secondary		1.1 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/stymsg.sdm		secondary		4 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/symbol.sdm		secondary		11.8 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/tableins.HS		secondary		2.7 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/tableins.sdm		secondary		10.4 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/tableopt.HS		secondary		1.6 KB	May 29, 2014 1:22:52 PM
Build/x86/ship/word/inc/word/tableopt.sdm		secondary		8.7 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/tabletxt.HS		secondary		1.2 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/tabletxt.sdm		secondary		4.4 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/tabs.HS		secondary		1.9 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/tabs.sdm		secondary		8.5 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/tbllook.HS		secondary		1.9 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/tbllook.sdm		secondary		7.1 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/tblprops.sdm		secondary		31.9 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/tblsty.HS		secondary		1.8 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/tblsty.sdm		secondary		8 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/tcsc.HS		secondary		1.1 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/tcsc.sdm		secondary		4.5 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/textflow.sdm		secondary		6.8 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/thesaur.HS		secondary		1.2 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/thesaur.sdm		secondary		4.9 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/tny.HS		secondary		1.2 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/tny.sdm		secondary		4.3 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/toaentry.HS		secondary		1.9 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/toaentry.sdm		secondary		7.7 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/toasect.HS		secondary		1015 bytes	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/toasect.sdm		secondary		3.4 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/toc.HS		secondary		5.4 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/toc.sdm		secondary		28.7 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/tocent.HS		secondary		1.3 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/tocent.sdm		secondary		5.4 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/tocopt.HS		secondary		1.3 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/tocopt.sdm		secondary		4.8 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/tocopt2.HS		secondary		2.3 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/tocopt2.sdm		secondary		13.6 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/tstydflt.HS		secondary		1 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/tstydflt.sdm		secondary		2.8 KB	May 29, 2014 1:22:53 PM
Build/x86/ship/word/inc/word/uicust.HS		secondary		3.1 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/uicust.sdm		secondary		13.1 KB	May 29, 2014 1:22:44 PM
Build/x86/ship/word/inc/word/uitpmenu.HS		secondary		1.3 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/uitpmenu.sdm		secondary		3.7 KB	May 29, 2014 1:22:43 PM
Build/x86/ship/word/inc/word/unprotec.HS		secondary		897 bytes	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/unprotec.sdm		secondary		2.5 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/updtoc.HS		secondary		1 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/updtoc.sdm		secondary		4 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/verdate.h		secondary		1.5 KB	May 29, 2014 1:21:56 PM
Build/x86/ship/word/inc/word/vrfcnvtr.HS		secondary		916 bytes	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/vrfcnvtr.sdm		secondary		3.2 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/vrfenc.HS		secondary		2.3 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/vrfenc.sdm		secondary		9 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/walert.h		secondary		1 KB	May 29, 2014 1:21:56 PM
Build/x86/ship/word/inc/word/warichu.HS		secondary		1.2 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/warichu.sdm		secondary		4.4 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/watermrk.HS		secondary		2.2 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/watermrk.sdm		secondary		12.3 KB	May 29, 2014 1:22:56 PM
Build/x86/ship/word/inc/word/wmoption.HS		secondary		4.7 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/wmoption.sdm		secondary		34.1 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/wmsigname.HS		secondary		1008 bytes	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/wmsigname.sdm		secondary		2.6 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/wndlist.HS		secondary		859 bytes	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/wndlist.sdm		secondary		2.6 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/wordcnt.sdm		secondary		6.8 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/wrpass.HS		secondary		1.1 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/wrpass.sdm		secondary		3.6 KB	May 29, 2014 1:22:49 PM
Build/x86/ship/word/inc/word/wrpfmt.HS		secondary		2.3 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/wrpfmt.sdm		secondary		11.2 KB	May 29, 2014 1:22:55 PM
Build/x86/ship/word/inc/word/xmlattr.HS		secondary		1.9 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/xmldocmap.HS		secondary		2.3 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/xmldocmap.sdm		secondary		9.7 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/xmlopt.HS		secondary		1.9 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/xmlopt.sdm		secondary		7.5 KB	May 29, 2014 1:22:57 PM
Build/x86/ship/word/inc/word/xref.HS		secondary		1.7 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/xref.sdm		secondary		7.3 KB	May 29, 2014 1:22:54 PM
Build/x86/ship/word/inc/word/zoom.HS		secondary		1.4 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/word/zoom.sdm		secondary		9.6 KB	May 29, 2014 1:22:45 PM
Build/x86/ship/word/inc/wordEtw_gen.h		secondary		778.5 KB	May 29, 2014 1:21:14 PM
Build/x86/ship/word/inc/wordconverter.h		secondary		10.7 KB	May 29, 2014 1:21:17 PM
Build/x86/ship/word/inc/wordconverter_i.c		secondary		1.8 KB	May 29, 2014 1:21:17 PM
Build/x86/ship/word/inc/xmltk_.h		secondary		436.2 KB	May 29, 2014 1:23:25 PM
Build/x86/ship/word/inc/xmltk_dsp_.h		secondary		565 bytes	May 29, 2014 1:23:25 PM
Build/x86/ship/word/inc/xtk_.c		secondary		29.1 KB	May 29, 2014 1:23:24 PM
Build/x86/ship/word/inc/xtk_.h		secondary		17.7 KB	May 29, 2014 1:23:24 PM
Build/x86/ship/word/pch/word_win32_h/obj/i386/pch_hdr.src		cpp		48 bytes	May 29, 2014 1:24:32 PM
Build/x86/ship/word/pch/word_win32_h_named_word_h/obj/i386/pch_hdr.src		cpp		68 bytes	May 29, 2014 1:25:46 PM
Build/x86/ship/word/wal/android/obj/i386/pch_hdr.src		cpp	1 Lines	22 bytes	May 30, 2014 1:08:07 AM
Build/x86/ship/word/wal/common/obj/i386/awordloggerstring_gen.cpp		cpp	1,503 Lines	387.9 KB	May 29, 2014 1:21:52 PM
Build/x86/ship/word/wal/common/obj/i386/cwordloggermultiplex_gen.cpp		cpp	1,824 Lines	380 KB	May 29, 2014 1:21:52 PM
Build/x86/ship/word/wal/common/obj/i386/cwordloggeruls_gen.cpp		cpp	854 Lines	382.3 KB	May 29, 2014 1:21:52 PM
Build/x86/ship/word/wal/common/obj/i386/pch_hdr.src		cpp	1 Lines	22 bytes	May 30, 2014 1:08:42 AM
Build/x86/ship/word/wal/win/common/obj/i386/cwordloggeretw_gen.cpp		cpp	2,363 Lines	520 KB	May 29, 2014 1:21:51 PM
Build/x86/ship/word/wal/win/common/obj/i386/pch_hdr.src		cpp	1 Lines	22 bytes	May 30, 2014 1:10:00 AM
Build/x86/ship/word/wal/win/win32/obj/i386/pch_hdr.src		cpp		22 bytes	May 30, 2014 1:10:47 AM
Build/x86/ship/word/wal/win/winrt/obj/i386/pch_hdr.src		cpp	1 Lines	22 bytes	May 30, 2014 1:11:55 AM
Import/x86/ship/word/x-none/foundation/x-none/inc/lkrhash/hashfn.h		secondary	5 Lines	7.4 KB	Nov 8, 2013 3:44:02 PM
Import/x86/ship/word/x-none/foundation/x-none/inc/lkrhash/irtldbg.h		secondary		4.8 KB	Apr 25, 2014 2:04:24 PM
Import/x86/ship/word/x-none/foundation/x-none/inc/lkrhash/irtlmisc.h		secondary		1.6 KB	Nov 8, 2013 3:44:02 PM
Import/x86/ship/word/x-none/foundation/x-none/inc/lkrhash/lkrhash.h		secondary	25 Lines	107.6 KB	Nov 8, 2013 3:44:02 PM
Import/x86/ship/word/x-none/foundation/x-none/inc/lkrhash/locks.h		secondary		58.1 KB	Feb 17, 2014 3:28:19 PM
Import/x86/ship/word/x-none/foundation/x-none/inc/lkrhash/lstentry.h		secondary		7.8 KB	Nov 8, 2013 3:44:02 PM
Import/x86/ship/word/x-none/gimme/x-none/inc/mso.gimmedataset.h		secondary		25 KB	May 27, 2014 6:40:49 PM
Import/x86/ship/word/x-none/gimme/x-none/inc/word.gimmedataset.cpp		secondary	5 Lines	18 KB	May 27, 2014 6:40:49 PM
Import/x86/ship/word/x-none/gimme/x-none/inc/word.gimmedataset.h		secondary		3.4 KB	May 27, 2014 6:40:49 PM
Import/x86/ship/word/x-none/kohhc/x-none/inc/mshjdic.h		secondary		44.6 KB	May 27, 2014 6:42:13 PM
Import/x86/ship/word/x-none/kohhc/x-none/inc/mshjdic_i.c		secondary	7 Lines	2.3 KB	May 27, 2014 6:42:13 PM
Import/x86/ship/word/x-none/liblet/x-none/inc/msoctk.h		secondary		122.7 KB	May 27, 2014 6:40:53 PM
Import/x86/ship/word/x-none/liblet/x-none/inc/msohtk.h		secondary		30.8 KB	May 27, 2014 6:40:53 PM
Import/x86/ship/word/x-none/liblet/x-none/inc/msoperfscenarios.h		secondary		29.2 KB	May 27, 2014 6:40:55 PM
Import/x86/ship/word/x-none/liblet/x-none/inc/msoperfscenarios.inc		secondary	1,812 Lines	807.9 KB	May 27, 2014 6:40:56 PM
Import/x86/ship/word/x-none/liblet/x-none/inc/office.ui.xaml.core.settings.h		secondary	15 Lines	75.1 KB	May 27, 2014 6:41:46 PM
Import/x86/ship/word/x-none/liblet/x-none/inc/office.ui.xaml.core.silhouette.h		secondary	17 Lines	130.9 KB	May 27, 2014 6:41:46 PM
Import/x86/ship/word/x-none/liblet/x-none/inc/perftrackids.h		secondary	521 Lines	100.1 KB	May 27, 2014 6:40:54 PM
Import/x86/ship/word/x-none/liblet/x-none/publicinc/logging/msologging.h		secondary	12 Lines	6 KB	May 27, 2014 6:40:52 PM
Import/x86/ship/word/x-none/liblet/x-none/publicinc/logging/structuredtracing.h		secondary	10 Lines	10.9 KB	May 27, 2014 6:40:52 PM
Import/x86/ship/word/x-none/licensingconfig/x-none/inc/licpriv.h		secondary		1.5 KB	May 27, 2014 6:46:07 PM
Import/x86/ship/word/x-none/lowrights/x-none/inc/lrbase.messages.h		secondary	6 Lines	17.2 KB	May 27, 2014 6:40:56 PM
Import/x86/ship/word/x-none/mso/x-none/inc/supertip.helpids.h		secondary		16.3 KB	May 27, 2014 6:52:03 PM
Import/x86/ship/word/x-none/msoprep/x-none/inc/msocolortableenum.h		secondary		165.8 KB	May 27, 2014 6:46:32 PM
Import/x86/ship/word/x-none/msoprep/x-none/inc/msodrp.h		secondary		114.8 KB	May 27, 2014 6:46:24 PM
Import/x86/ship/word/x-none/msoprep/x-none/inc/msogelp.h		secondary		68.4 KB	May 27, 2014 6:46:24 PM
Import/x86/ship/word/x-none/msoprep/x-none/inc/msoitf.h		secondary	4 Lines	36.4 KB	May 27, 2014 6:46:22 PM
Import/x86/ship/word/x-none/msoprep/x-none/inc/msosndxx.h		secondary		2.4 KB	May 27, 2014 6:46:09 PM
Import/x86/ship/word/x-none/msoprep/x-none/inc/msosttw.h		secondary		2.8 MB	May 27, 2014 6:46:57 PM
Import/x86/ship/word/x-none/msoprep/x-none/inc/msotl_generated.h		secondary		677.2 KB	May 27, 2014 6:46:23 PM
Import/x86/ship/word/x-none/msoprep/x-none/inc/oarttextwrapcalloutparams.h		secondary	15 Lines	5.4 KB	May 27, 2014 6:46:13 PM
Import/x86/ship/word/x-none/msoprep/x-none/inc/officecenterlanguage.h		secondary	1 Lines	39.1 KB	May 27, 2014 6:46:18 PM
Import/x86/ship/word/x-none/msoprep/x-none/inc/officespacecontrols.h		secondary	90 Lines	2 MB	May 27, 2014 6:46:14 PM
Import/x86/ship/word/x-none/msoprep/x-none/inc/optionsshared.h		secondary	1 Lines	12.9 KB	May 27, 2014 6:46:16 PM
Import/x86/ship/word/x-none/msoprep/x-none/inc/oresman.h		secondary		2.8 MB	May 27, 2014 6:46:57 PM
Import/x86/ship/word/x-none/msoprep/x-none/inc/osrmso.messages.h		secondary	3 Lines	18 KB	May 27, 2014 6:46:31 PM
Import/x86/ship/word/x-none/msoprep/x-none/inc/osrmso.requests.h		secondary	5 Lines	103 KB	May 27, 2014 6:46:31 PM
Import/x86/ship/word/x-none/msoprep/x-none/inc/outspacedocinfoshared.h		secondary	6 Lines	15.2 KB	May 27, 2014 6:46:18 PM
Import/x86/ship/word/x-none/msoprep/x-none/inc/outspaceshare.h		secondary		119.4 KB	May 27, 2014 6:46:18 PM
Import/x86/ship/word/x-none/msoprep/x-none/inc/ptkopt.h		secondary	1 Lines	14.3 KB	May 27, 2014 6:46:15 PM
Import/x86/ship/word/x-none/msoprep/x-none/inc/trustcentersettings.h		secondary	3 Lines	92.5 KB	May 27, 2014 6:46:14 PM
Import/x86/ship/word/x-none/netui/x-none/inc/textstyleslibraryidlist.h		secondary		23.1 KB	May 27, 2014 6:40:56 PM
Import/x86/ship/word/x-none/oartshared/x-none/inc/metroversioning_gen.h		secondary		676 bytes	May 27, 2014 6:46:20 PM
Import/x86/ship/word/x-none/oartshared/x-none/inc/msotabledata.h		secondary		29.6 KB	May 27, 2014 6:41:12 PM
Import/x86/ship/word/x-none/oartshared/x-none/inc/oartfontfacetable.h		secondary		4 KB	May 27, 2014 6:41:11 PM
Import/x86/ship/word/x-none/oartshared/x-none/inc/orel_gen.h		secondary		713 bytes	May 27, 2014 6:46:18 PM
Import/x86/ship/word/x-none/oleo/x-none/inc/oleodata.h		secondary		374.3 KB	May 27, 2014 6:41:42 PM
Import/x86/ship/word/x-none/orapi/x-none/inc/word_orapi.h		secondary		65.8 KB	May 27, 2014 6:40:42 PM
Import/x86/ship/word/x-none/orapi/x-none/inc/word_orapi.inc		secondary	3,612 Lines	434.1 KB	May 27, 2014 6:40:42 PM
Import/x86/ship/word/x-none/osipartner/x-none/inc/osidatacenter/ulscats.h		secondary		34.7 KB	May 27, 2014 6:46:23 PM
Import/x86/ship/word/x-none/osipartner/x-none/instrumentation/msoservercategories.h		secondary		19.3 KB	May 27, 2014 6:41:05 PM
Import/x86/ship/word/x-none/osipartner/x-none/instrumentation/msoserverevents.h		secondary		4.9 KB	May 27, 2014 6:41:05 PM
Import/x86/ship/word/x-none/roaming/x-none/inc/roaming.h		secondary		5 KB	May 27, 2014 6:40:53 PM
Import/x86/ship/word/x-none/tcids/x-none/inc/msobar.h		secondary		372.8 KB	May 27, 2014 6:40:46 PM
Import/x86/ship/word/x-none/tcids/x-none/inc/msobtn.h		secondary		979 KB	May 27, 2014 6:40:40 PM
Import/x86/ship/word/x-none/tcids/x-none/inc/word/msobtn_winrt.h		secondary		2.2 MB	May 27, 2014 6:40:51 PM
Import/x86/ship/word/x-none/util_ddcs/x-none/inc/iwaitable.h		secondary		29.3 KB	May 27, 2014 6:40:47 PM
Import/x86/ship/word/x-none/util_shutdown/x-none/inc/msoshutdown.h		secondary		11.9 KB	May 27, 2014 6:40:50 PM
Target/x86/ship/otools/x-none/inc/OfficeVersion.h		secondary		4.9 KB	May 29, 2014 1:20:41 PM
Target/x86/ship/word/x-none/inc/ostrman.h		secondary		1.1 MB	May 29, 2014 1:24:28 PM
Target/x86/ship/word/x-none/walert.h		secondary		1 KB	May 29, 2014 1:21:56 PM
dev/otools/inc/CRT/algorithm		secondary		128.3 KB	May 28, 2014 5:00:20 PM
dev/otools/inc/CRT/ammintrin.h		secondary		13 KB	May 28, 2014 5:00:20 PM
dev/otools/inc/CRT/array		secondary		13.5 KB	May 28, 2014 5:00:20 PM
dev/otools/inc/CRT/assert.h		secondary		904 bytes	May 28, 2014 5:00:20 PM
dev/otools/inc/CRT/atomic		secondary		32.8 KB	May 28, 2014 5:00:20 PM
dev/otools/inc/CRT/bitset		secondary		16.3 KB	May 28, 2014 5:00:20 PM
dev/otools/inc/CRT/cerrno		secondary		533 bytes	May 28, 2014 5:00:20 PM
dev/otools/inc/CRT/cfloat		secondary		295 bytes	May 28, 2014 5:00:20 PM
dev/otools/inc/CRT/chrono		secondary		19.7 KB	May 28, 2014 5:00:20 PM
dev/otools/inc/CRT/climits		secondary		300 bytes	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/cmath		secondary		4.2 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/codecvt		secondary		21.3 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/comdef.h		secondary		12.9 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/comdefsp.h		secondary		77.6 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/comip.h		secondary		25.8 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/comutil.h		secondary		58.5 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/concurrencysal.h		secondary		15.4 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/crtdbg.h		secondary		37.8 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/crtdefs.h		secondary		106.5 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/crtwrn.h		secondary		1.8 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/cstddef		secondary		713 bytes	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/cstdint		secondary		1.9 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/cstdio		secondary		1.9 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/cstdlib		secondary		1.4 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/cstring		secondary		1.1 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/ctime		secondary		786 bytes	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/ctype.h		secondary		18.3 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/cwchar		secondary		2 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/delayimp.h		secondary		4.3 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/deque		secondary		52.1 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/eh.h		secondary		2.7 KB	May 28, 2014 5:00:21 PM
dev/otools/inc/CRT/emmintrin.h		secondary		14.7 KB	May 28, 2014 5:00:22 PM
dev/otools/inc/CRT/errno.h		secondary		3.5 KB	May 28, 2014 5:00:22 PM
dev/otools/inc/CRT/exception		secondary		12.7 KB	May 28, 2014 5:00:22 PM
dev/otools/inc/CRT/excpt.h		secondary		4.2 KB	May 28, 2014 5:00:22 PM
dev/otools/inc/CRT/fcntl.h		secondary		2.6 KB	May 28, 2014 5:00:22 PM
dev/otools/inc/CRT/float.h		secondary		13.8 KB	May 28, 2014 5:00:22 PM
dev/otools/inc/CRT/forward_list		secondary		43 KB	May 28, 2014 5:00:22 PM
dev/otools/inc/CRT/fstream		secondary		38.6 KB	May 28, 2014 5:00:22 PM
dev/otools/inc/CRT/functional		secondary		36.6 KB	May 28, 2014 5:00:22 PM
dev/otools/inc/CRT/gcroot.h		secondary		1.4 KB	May 28, 2014 5:00:22 PM
dev/otools/inc/CRT/hash_map		secondary		14.8 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/hash_set		secondary		13.3 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/immintrin.h		secondary		86.4 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/initializer_list		secondary		1.8 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/intrin.h		secondary		61.3 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/io.h		secondary		17.9 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/iomanip		secondary		8.3 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/ios		secondary		9.4 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/iosfwd		secondary		23.2 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/iostream		secondary		1.8 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/istream		secondary		33.6 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/iterator		secondary		18.6 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/limits		secondary		33.6 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/limits.h		secondary		3.5 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/list		secondary		53.1 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/locale		secondary		8.1 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/locale.h		secondary		4.2 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/malloc.h		secondary		11.4 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/map		secondary		13.4 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/math.h		secondary		43.5 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/mbstring.h		secondary		31.9 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/memory		secondary		53 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/memory.h		secondary		4.6 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/mm3dnow.h		secondary		1.7 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/mmintrin.h		secondary		6.3 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/msclr/gcroot.h		secondary		5.5 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/new		secondary		3.4 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/new.h		secondary		3.7 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/nmmintrin.h		secondary		4 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/numeric		secondary		13.4 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/ostream		secondary		28 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/pmmintrin.h		secondary		3 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/queue		secondary		13.2 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/ratio		secondary		9.2 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/regex		secondary		147.6 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/safeint.h		secondary		51.6 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/safeint_internal.h		secondary		93.6 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/sal.h		secondary		209.6 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/set		secondary		11.7 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/setjmp.h		secondary		4.1 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/share.h		secondary		899 bytes	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/smmintrin.h		secondary		9.4 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/sstream		secondary		19 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/stack		secondary		6.5 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/stddef.h		secondary		1.8 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/stdexcept		secondary		6.1 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/stdint.h		secondary		4.2 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/stdio.h		secondary		52 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/stdlib.h		secondary		52.4 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/streambuf		secondary		17.9 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/string		secondary		17 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/string.h		secondary		31.6 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/swprintf.inl		secondary		4.3 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/system_error		secondary		17.5 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/tchar.h		secondary		101.9 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/thr/xthrcommon.h		secondary		2.9 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/thr/xtimec.h		secondary		1.8 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/time.h		secondary		13 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/time.inl		secondary		3.8 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/tmmintrin.h		secondary		3.5 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/tuple		secondary		21.4 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/type_traits		secondary		41.4 KB	May 28, 2014 5:00:23 PM
dev/otools/inc/CRT/typeinfo		secondary		7.2 KB	May 28, 2014 5:00:24 PM
dev/otools/inc/CRT/unordered_map		secondary		20.6 KB	May 28, 2014 5:00:24 PM
dev/otools/inc/CRT/unordered_set		secondary		18.9 KB	May 28, 2014 5:00:24 PM
dev/otools/inc/CRT/use_ansi.h		secondary		1.3 KB	May 28, 2014 5:00:24 PM
dev/otools/inc/CRT/utility		secondary		12.6 KB	May 28, 2014 5:00:24 PM
dev/otools/inc/CRT/vadefs.h		secondary		4.3 KB	May 28, 2014 5:00:24 PM
dev/otools/inc/CRT/vcclr.h		secondary		1.4 KB	May 28, 2014 5:00:24 PM
dev/otools/inc/CRT/vector		secondary		80.3 KB	May 28, 2014 5:00:24 PM
dev/otools/inc/CRT/wchar.h		secondary		79.3 KB	May 28, 2014 5:00:24 PM
dev/otools/inc/CRT/wmmintrin.h		secondary		2.3 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/wtime.inl		secondary		1.5 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xatomic.h		secondary		68.6 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xatomic0.h		secondary		6.1 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xdebug		secondary		2.4 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xfacet		secondary		1.3 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xfunctional		secondary		25.8 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xhash		secondary		30.6 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xiosbase		secondary		18.9 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xkeycheck.h		secondary		7.9 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xlocale		secondary		91 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xlocbuf		secondary		14.7 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xlocinfo		secondary		8.9 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xlocinfo.h		secondary		5.8 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xlocmes		secondary		4.1 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xlocmon		secondary		29.5 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xlocnum		secondary		50 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xloctime		secondary		32.7 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xmemory		secondary		29 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xmemory0		secondary		25.6 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xmmintrin.h		secondary		18.3 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xrefwrap		secondary		18.7 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xstddef		secondary		14.3 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xstring		secondary		74 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xtgmath.h		secondary		7.1 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xtr1common		secondary		9 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xtree		secondary		66.9 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xutility		secondary		93.6 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/xxatomic		secondary		54.5 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/ymath.h		secondary		3.6 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CRT/yvals.h		secondary		23.2 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/CoreSDK/AccCtrl.h		secondary		27.1 KB	May 28, 2014 4:59:51 PM
dev/otools/inc/CoreSDK/AclAPI.h		secondary		20.2 KB	May 28, 2014 4:59:51 PM
dev/otools/inc/CoreSDK/BaseTsd.h		secondary		10.6 KB	May 28, 2014 4:59:52 PM
dev/otools/inc/CoreSDK/BaseTyps.h		secondary		8.5 KB	May 28, 2014 4:59:52 PM
dev/otools/inc/CoreSDK/CGuid.h		secondary		5.4 KB	May 28, 2014 4:59:53 PM
dev/otools/inc/CoreSDK/ComCat.h		secondary		28.7 KB	May 28, 2014 4:59:53 PM
dev/otools/inc/CoreSDK/Combaseapi.h		secondary		36.6 KB	May 28, 2014 4:59:53 PM
dev/otools/inc/CoreSDK/CommCtrl.h		secondary		269.6 KB	May 28, 2014 4:59:53 PM
dev/otools/inc/CoreSDK/CommDlg.h		secondary		44.7 KB	May 28, 2014 4:59:53 PM
dev/otools/inc/CoreSDK/ConcurrencySal.h		secondary		15.4 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/D3D10_1shader.H		secondary		11.9 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/D3DCommon.h		secondary		39.3 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/DCommon.h		secondary		3 KB	May 28, 2014 4:59:55 PM
dev/otools/inc/CoreSDK/DbgHelp.h		secondary		135.9 KB	May 28, 2014 4:59:55 PM
dev/otools/inc/CoreSDK/Dbt.h		secondary		15.6 KB	May 28, 2014 4:59:55 PM
dev/otools/inc/CoreSDK/Dde.h		secondary		5.6 KB	May 28, 2014 4:59:55 PM
dev/otools/inc/CoreSDK/Dlgs.h		secondary		6.2 KB	May 28, 2014 4:59:56 PM
dev/otools/inc/CoreSDK/DocObj.h		secondary		59.6 KB	May 28, 2014 4:59:56 PM
dev/otools/inc/CoreSDK/DocumentTarget.h		secondary		18.7 KB	May 28, 2014 4:59:56 PM
dev/otools/inc/CoreSDK/Evntrace.h		secondary		59.7 KB	May 28, 2014 4:59:58 PM
dev/otools/inc/CoreSDK/ExDisp.h		secondary		268.8 KB	May 28, 2014 4:59:58 PM
dev/otools/inc/CoreSDK/GdiPlus.h		secondary		2 KB	May 28, 2014 4:59:58 PM
dev/otools/inc/CoreSDK/GdiPlusBase.h		secondary		3.4 KB	May 28, 2014 4:59:58 PM
dev/otools/inc/CoreSDK/GdiPlusBitmap.h		secondary		25.2 KB	May 28, 2014 4:59:58 PM
dev/otools/inc/CoreSDK/GdiPlusBrush.h		secondary		27.2 KB	May 28, 2014 4:59:58 PM
dev/otools/inc/CoreSDK/GdiPlusCachedBitmap.h		secondary		1.3 KB	May 28, 2014 4:59:58 PM
dev/otools/inc/CoreSDK/GdiPlusColor.h		secondary		10.1 KB	May 28, 2014 4:59:58 PM
dev/otools/inc/CoreSDK/GdiPlusColorMatrix.h		secondary		2.5 KB	May 28, 2014 4:59:58 PM
dev/otools/inc/CoreSDK/GdiPlusEnums.h		secondary		48.6 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusFlat.h		secondary		87.4 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusFont.h		secondary		5.9 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusFontCollection.h		secondary		3.3 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusFontFamily.h		secondary		4.6 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusGpStubs.h		secondary		2.9 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusGraphics.h		secondary		88.9 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusHeaders.h		secondary		28.4 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusImageCodec.h		secondary		1.7 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusImaging.h		secondary		25.7 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusInit.h		secondary		4.2 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusLineCaps.h		secondary		6.8 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusMatrix.h		secondary		9.3 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusMem.h		secondary		992 bytes	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusMetaFile.h		secondary		12.6 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusMetaHeader.h		secondary		8 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusPath.h		secondary		47.5 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusPen.h		secondary		14.1 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusPixelFormats.h		secondary		6.3 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusRegion.h		secondary		14.8 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusStringFormat.h		secondary		8.2 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusTypes.h		secondary		17.7 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/GdiPlusimageAttributes.h		secondary		12.8 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/Guiddef.h		secondary		5 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/HLink.h		secondary		66.8 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/HlGuids.h		secondary		3.6 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/Icm.h		secondary		46.9 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/Ime_cmodes.h		secondary		785 bytes	May 28, 2014 5:00:00 PM
dev/otools/inc/CoreSDK/Imm.h		secondary		28.2 KB	May 28, 2014 5:00:00 PM
dev/otools/inc/CoreSDK/InitGuid.h		secondary		816 bytes	May 28, 2014 5:00:00 PM
dev/otools/inc/CoreSDK/InputScope.h		secondary		15.3 KB	May 28, 2014 5:00:00 PM
dev/otools/inc/CoreSDK/IsGuids.h		secondary		967 bytes	May 28, 2014 5:00:00 PM
dev/otools/inc/CoreSDK/KnownFolders.h		secondary		20.8 KB	May 28, 2014 5:00:00 PM
dev/otools/inc/CoreSDK/LM.h		secondary		1.5 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMAPIbuf.h		secondary		1.8 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMConfig.h		secondary		2 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMCons.h		secondary		7.6 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMErr.h		secondary		42.2 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMErrlog.h		secondary		67.8 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMJoin.h		secondary		12.8 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMMsg.h		secondary		2.4 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMRemUtl.h		secondary		3.3 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMRepl.h		secondary		6.9 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMSName.h		secondary		4.2 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMServer.h		secondary		58.4 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMShare.h		secondary		19.5 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMStats.h		secondary		5.3 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMSvc.h		secondary		13.5 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMUse.h		secondary		5.2 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMUseFlg.h		secondary		925 bytes	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMWksta.h		secondary		17.1 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMaccess.h		secondary		53.8 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMalert.h		secondary		3.9 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/LMaudit.h		secondary		11 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/MAPI.h		secondary		13 KB	May 28, 2014 5:00:02 PM
dev/otools/inc/CoreSDK/MLang.h		secondary		148.3 KB	May 28, 2014 5:00:02 PM
dev/otools/inc/CoreSDK/MMSyscom.h		secondary		11 KB	May 28, 2014 5:00:02 PM
dev/otools/inc/CoreSDK/MMSystem.h		secondary		3.8 KB	May 28, 2014 5:00:02 PM
dev/otools/inc/CoreSDK/MSWSock.h		secondary		18 KB	May 28, 2014 5:00:05 PM
dev/otools/inc/CoreSDK/MSWSockDef.h		secondary		4.2 KB	May 28, 2014 5:00:05 PM
dev/otools/inc/CoreSDK/MciApi.h		secondary		49.4 KB	May 28, 2014 5:00:02 PM
dev/otools/inc/CoreSDK/Mcx.h		secondary		23.9 KB	May 28, 2014 5:00:02 PM
dev/otools/inc/CoreSDK/MsHtmHst.h		secondary		43.9 KB	May 28, 2014 5:00:03 PM
dev/otools/inc/CoreSDK/MsXml.h		secondary		387.2 KB	May 28, 2014 5:00:05 PM
dev/otools/inc/CoreSDK/MsXml2.h		secondary		849.3 KB	May 28, 2014 5:00:05 PM
dev/otools/inc/CoreSDK/Msi.h		secondary		122.2 KB	May 28, 2014 5:00:04 PM
dev/otools/inc/CoreSDK/MultiMon.h		secondary		16.2 KB	May 28, 2014 5:00:05 PM
dev/otools/inc/CoreSDK/NtDsAPI.h		secondary		115.4 KB	May 28, 2014 5:00:06 PM
dev/otools/inc/CoreSDK/OAIdl.h		secondary		185.2 KB	May 28, 2014 5:00:06 PM
dev/otools/inc/CoreSDK/OCIdl.h		secondary		214.9 KB	May 28, 2014 5:00:06 PM
dev/otools/inc/CoreSDK/ObjBase.h		secondary		14.6 KB	May 28, 2014 5:00:06 PM
dev/otools/inc/CoreSDK/ObjIdl.h		secondary		446.3 KB	May 28, 2014 5:00:06 PM
dev/otools/inc/CoreSDK/ObjIdlbase.h		secondary		222.5 KB	May 28, 2014 5:00:06 PM
dev/otools/inc/CoreSDK/ObjectArray.h		secondary		8.3 KB	May 28, 2014 5:00:06 PM
dev/otools/inc/CoreSDK/Ole2.h		secondary		15 KB	May 28, 2014 5:00:07 PM
dev/otools/inc/CoreSDK/OleAcc.h		secondary		65.1 KB	May 28, 2014 5:00:07 PM
dev/otools/inc/CoreSDK/OleAuto.h		secondary		56.5 KB	May 28, 2014 5:00:07 PM
dev/otools/inc/CoreSDK/OleCtl.h		secondary		21.8 KB	May 28, 2014 5:00:07 PM
dev/otools/inc/CoreSDK/OleIdl.h		secondary		132.1 KB	May 28, 2014 5:00:07 PM
dev/otools/inc/CoreSDK/PrSht.h		secondary		29.5 KB	May 28, 2014 5:00:09 PM
dev/otools/inc/CoreSDK/PrintPreview.h		secondary		5.8 KB	May 28, 2014 5:00:08 PM
dev/otools/inc/CoreSDK/PropIdl.h		secondary		42.7 KB	May 28, 2014 5:00:08 PM
dev/otools/inc/CoreSDK/Qos.h		secondary		7.5 KB	May 28, 2014 5:00:09 PM
dev/otools/inc/CoreSDK/Reason.h		secondary		4.9 KB	May 28, 2014 5:00:09 PM
dev/otools/inc/CoreSDK/Reconcil.h		secondary		5.6 KB	May 28, 2014 5:00:09 PM
dev/otools/inc/CoreSDK/RestrictedErrorInfo.h		secondary		8.7 KB	May 28, 2014 5:00:09 PM
dev/otools/inc/CoreSDK/Rpc.h		secondary		4.7 KB	May 28, 2014 5:00:09 PM
dev/otools/inc/CoreSDK/RpcAsync.h		secondary		18.3 KB	May 28, 2014 5:00:09 PM
dev/otools/inc/CoreSDK/RpcDce.h		secondary		76.4 KB	May 28, 2014 5:00:09 PM
dev/otools/inc/CoreSDK/RpcDceP.h		secondary		29.1 KB	May 28, 2014 5:00:09 PM
dev/otools/inc/CoreSDK/RpcNdr.h		secondary		74.8 KB	May 28, 2014 5:00:09 PM
dev/otools/inc/CoreSDK/RpcNsi.h		secondary		14.9 KB	May 28, 2014 5:00:09 PM
dev/otools/inc/CoreSDK/RpcNsip.h		secondary		1.5 KB	May 28, 2014 5:00:09 PM
dev/otools/inc/CoreSDK/RpcNtErr.h		secondary		16.9 KB	May 28, 2014 5:00:09 PM
dev/otools/inc/CoreSDK/RpcProxy.h		secondary		22.6 KB	May 28, 2014 5:00:09 PM
dev/otools/inc/CoreSDK/Schedule.h		secondary		2.3 KB	May 28, 2014 5:00:10 PM
dev/otools/inc/CoreSDK/ServProv.h		secondary		7.5 KB	May 28, 2014 5:00:10 PM
dev/otools/inc/CoreSDK/ShObjIdl.h		secondary		1.2 MB	May 28, 2014 5:00:10 PM
dev/otools/inc/CoreSDK/ShTypes.h		secondary		14.5 KB	May 28, 2014 5:00:10 PM
dev/otools/inc/CoreSDK/ShellAPI.h		secondary		70.1 KB	May 28, 2014 5:00:10 PM
dev/otools/inc/CoreSDK/ShlDisp.h		secondary		278.5 KB	May 28, 2014 5:00:10 PM
dev/otools/inc/CoreSDK/ShlGuid.h		secondary		48.1 KB	May 28, 2014 5:00:10 PM
dev/otools/inc/CoreSDK/ShlObj.h		secondary		202.9 KB	May 28, 2014 5:00:10 PM
dev/otools/inc/CoreSDK/Shlwapi.h		secondary		123.1 KB	May 28, 2014 5:00:10 PM
dev/otools/inc/CoreSDK/Sti.h		secondary		27 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/Stierr.h		secondary		4.3 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/Stireg.h		secondary		4.1 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/StrAlign.h		secondary		15.9 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/TextStor.h		secondary		91.1 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/Transact.h		secondary		32.5 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/Tvout.h		secondary		4 KB	May 28, 2014 5:00:12 PM
dev/otools/inc/CoreSDK/UIAutomationClient.h		secondary		508.2 KB	May 28, 2014 5:00:12 PM
dev/otools/inc/CoreSDK/UIAutomationCore.h		secondary		209.8 KB	May 28, 2014 5:00:12 PM
dev/otools/inc/CoreSDK/UIAutomationCoreApi.h		secondary		62.8 KB	May 28, 2014 5:00:12 PM
dev/otools/inc/CoreSDK/Unknwn.h		secondary		15.9 KB	May 28, 2014 5:00:12 PM
dev/otools/inc/CoreSDK/Unknwnbase.h		secondary		16 KB	May 28, 2014 5:00:12 PM
dev/otools/inc/CoreSDK/UrlMon.h		secondary		366.5 KB	May 28, 2014 5:00:12 PM
dev/otools/inc/CoreSDK/Uxtheme.h		secondary		79.3 KB	May 28, 2014 5:00:13 PM
dev/otools/inc/CoreSDK/VerRsrc.h		secondary		6.3 KB	May 28, 2014 5:00:13 PM
dev/otools/inc/CoreSDK/WS2tcpip.h		secondary		27 KB	May 28, 2014 5:00:15 PM
dev/otools/inc/CoreSDK/WTypes.h		secondary		23.3 KB	May 28, 2014 5:00:16 PM
dev/otools/inc/CoreSDK/WTypesbase.h		secondary		12.6 KB	May 28, 2014 5:00:16 PM
dev/otools/inc/CoreSDK/WebServices.h		secondary		293.9 KB	May 28, 2014 5:00:13 PM
dev/otools/inc/CoreSDK/WinBase.Inl		secondary		20.5 KB	May 28, 2014 5:00:13 PM
dev/otools/inc/CoreSDK/WinBase.h		secondary		212.8 KB	May 28, 2014 5:00:13 PM
dev/otools/inc/CoreSDK/WinCon.h		secondary		23.3 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/WinCrypt.h		secondary		853 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/WinDef.h		secondary		5.6 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/WinError.h		secondary		1.3 MB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/WinGDI.h		secondary		227.5 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/WinInet.h		secondary		134.4 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/WinIoCtl.h		secondary		302.9 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/WinNT.h		secondary		630.5 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/WinNetWk.h		secondary		23.2 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/WinNls.h		secondary		94.4 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/WinReg.h		secondary		33.1 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/WinSock2.h		secondary		112 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/WinSpool.h		secondary		114.5 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/WinSvc.h		secondary		52.4 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/WinUser.Inl		secondary		35.6 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/WinUser.h		secondary		374.7 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/WinVer.h		secondary		7.5 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/Windows.h		secondary		6.5 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/WindowsX.h		secondary		73.6 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/Wmistr.h		secondary		18 KB	May 28, 2014 5:00:15 PM
dev/otools/inc/CoreSDK/apiset.h		secondary		7.6 KB	May 28, 2014 4:59:51 PM
dev/otools/inc/CoreSDK/apisetcconv.h		secondary		2 KB	May 28, 2014 4:59:51 PM
dev/otools/inc/CoreSDK/bcrypt.h		secondary		45 KB	May 28, 2014 4:59:52 PM
dev/otools/inc/CoreSDK/bemapiset.h		secondary		2.2 KB	May 28, 2014 4:59:52 PM
dev/otools/inc/CoreSDK/commctrl.inl		secondary		175.7 KB	May 28, 2014 4:59:53 PM
dev/otools/inc/CoreSDK/commdlg.inl		secondary		35.3 KB	May 28, 2014 4:59:53 PM
dev/otools/inc/CoreSDK/consoleapi.h		secondary		4.4 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/ctffunc.h		secondary		97.8 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/ctfutb.h		secondary		76.9 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/d2d1.h		secondary		244.5 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/d2d1Helper.h		secondary		28 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/d2d1_1.h		secondary		156.4 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/d2d1_1helper.h		secondary		25.8 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/d2d1_2.h		secondary		35.9 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/d2d1_2helper.h		secondary		1.6 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/d2d1effects.h		secondary		70.2 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/d2d1effects_1.h		secondary		3.2 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/d2dBaseTypes.h		secondary		5.6 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/d2derr.h		secondary		1.7 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/d3d10.h		secondary		229 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/d3d10_1.h		secondary		70.5 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/d3d10effect.h		secondary		71.9 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/d3d10misc.h		secondary		4.8 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/d3d10sdklayers.h		secondary		93.1 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/d3d10shader.h		secondary		25.4 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/d3d11.h		secondary		524.5 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/d3d11sdklayers.h		secondary		191.2 KB	May 28, 2014 4:59:54 PM
dev/otools/inc/CoreSDK/datetimeapi.h		secondary		3.8 KB	May 28, 2014 4:59:55 PM
dev/otools/inc/CoreSDK/debugapi.h		secondary		3.3 KB	May 28, 2014 4:59:55 PM
dev/otools/inc/CoreSDK/devpropdef.h		secondary		7.6 KB	May 28, 2014 4:59:55 PM
dev/otools/inc/CoreSDK/dpapi.h		secondary		8.3 KB	May 28, 2014 4:59:56 PM
dev/otools/inc/CoreSDK/driverspecs.h		secondary		39.2 KB	May 28, 2014 4:59:56 PM
dev/otools/inc/CoreSDK/dsparse.h		secondary		24.2 KB	May 28, 2014 4:59:56 PM
dev/otools/inc/CoreSDK/dwrite.h		secondary		210.1 KB	May 28, 2014 4:59:57 PM
dev/otools/inc/CoreSDK/dwrite_1.h		secondary		77.5 KB	May 28, 2014 4:59:57 PM
dev/otools/inc/CoreSDK/dwrite_2.h		secondary		40.2 KB	May 28, 2014 4:59:57 PM
dev/otools/inc/CoreSDK/dxgi.h		secondary		91.7 KB	May 28, 2014 4:59:57 PM
dev/otools/inc/CoreSDK/dxgiformat.h		secondary		6.1 KB	May 28, 2014 4:59:57 PM
dev/otools/inc/CoreSDK/dxgitype.h		secondary		2.9 KB	May 28, 2014 4:59:57 PM
dev/otools/inc/CoreSDK/errhandlingapi.h		secondary		4.9 KB	May 28, 2014 4:59:57 PM
dev/otools/inc/CoreSDK/evntprov.h		secondary		11.4 KB	May 28, 2014 4:59:58 PM
dev/otools/inc/CoreSDK/fibersapi.h		secondary		2.3 KB	May 28, 2014 4:59:58 PM
dev/otools/inc/CoreSDK/fileapi.h		secondary		27.4 KB	May 28, 2014 4:59:58 PM
dev/otools/inc/CoreSDK/fontsub.h		secondary		8.8 KB	May 28, 2014 4:59:58 PM
dev/otools/inc/CoreSDK/handleapi.h		secondary		2.1 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/heapapi.h		secondary		4.9 KB	May 28, 2014 4:59:59 PM
dev/otools/inc/CoreSDK/in6addr.h		secondary		880 bytes	May 28, 2014 5:00:00 PM
dev/otools/inc/CoreSDK/inaddr.h		secondary		814 bytes	May 28, 2014 5:00:00 PM
dev/otools/inc/CoreSDK/inputpanelconfiguration.h		secondary		7.7 KB	May 28, 2014 5:00:00 PM
dev/otools/inc/CoreSDK/inputpanelconfiguration_i.c		secondary		1.7 KB	May 28, 2014 5:00:00 PM
dev/otools/inc/CoreSDK/interlockedapi.h		secondary		2.4 KB	May 28, 2014 5:00:00 PM
dev/otools/inc/CoreSDK/intsafe.h		secondary		155.4 KB	May 28, 2014 5:00:00 PM
dev/otools/inc/CoreSDK/ioapiset.h		secondary		4.2 KB	May 28, 2014 5:00:00 PM
dev/otools/inc/CoreSDK/jobapi.h		secondary		1.4 KB	May 28, 2014 5:00:00 PM
dev/otools/inc/CoreSDK/joystickapi.h		secondary		17.4 KB	May 28, 2014 5:00:00 PM
dev/otools/inc/CoreSDK/kernelspecs.h		secondary		11.2 KB	May 28, 2014 5:00:00 PM
dev/otools/inc/CoreSDK/ktmtypes.h		secondary		7.5 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/libloaderapi.h		secondary		13.5 KB	May 28, 2014 5:00:01 PM
dev/otools/inc/CoreSDK/memoryapi.h		secondary		14.9 KB	May 28, 2014 5:00:02 PM
dev/otools/inc/CoreSDK/minwinbase.h		secondary		12.4 KB	May 28, 2014 5:00:02 PM
dev/otools/inc/CoreSDK/minwindef.h		secondary		6.4 KB	May 28, 2014 5:00:02 PM
dev/otools/inc/CoreSDK/mmeapi.h		secondary		80.8 KB	May 28, 2014 5:00:02 PM
dev/otools/inc/CoreSDK/mmiscapi.h		secondary		18.4 KB	May 28, 2014 5:00:02 PM
dev/otools/inc/CoreSDK/mmiscapi2.h		secondary		2.4 KB	May 28, 2014 5:00:02 PM
dev/otools/inc/CoreSDK/msctf.h		secondary		416.2 KB	May 28, 2014 5:00:02 PM
dev/otools/inc/CoreSDK/msdadc.h		secondary		12.2 KB	May 28, 2014 5:00:02 PM
dev/otools/inc/CoreSDK/msime.h		secondary		43.5 KB	May 28, 2014 5:00:04 PM
dev/otools/inc/CoreSDK/msinkaut.h		secondary		455.9 KB	May 28, 2014 5:00:04 PM
dev/otools/inc/CoreSDK/msinkaut_i.c		secondary		7.8 KB	May 28, 2014 5:00:04 PM
dev/otools/inc/CoreSDK/msxml6.h		secondary		824.7 KB	May 28, 2014 5:00:05 PM
dev/otools/inc/CoreSDK/namedpipeapi.h		secondary		3.8 KB	May 28, 2014 5:00:05 PM
dev/otools/inc/CoreSDK/namespaceapi.h		secondary		2.1 KB	May 28, 2014 5:00:05 PM
dev/otools/inc/CoreSDK/ncrypt.h		secondary		28.3 KB	May 28, 2014 5:00:05 PM
dev/otools/inc/CoreSDK/oledb.h		secondary		608.8 KB	May 28, 2014 5:00:07 PM
dev/otools/inc/CoreSDK/oledberr.h		secondary		38.9 KB	May 28, 2014 5:00:07 PM
dev/otools/inc/CoreSDK/playsoundapi.h		secondary		4.4 KB	May 28, 2014 5:00:07 PM
dev/otools/inc/CoreSDK/prntvpt.h		secondary		4.1 KB	May 28, 2014 5:00:08 PM
dev/otools/inc/CoreSDK/processenv.h		secondary		7.1 KB	May 28, 2014 5:00:08 PM
dev/otools/inc/CoreSDK/processthreadsapi.h		secondary		19.9 KB	May 28, 2014 5:00:08 PM
dev/otools/inc/CoreSDK/processtopologyapi.h		secondary		2.2 KB	May 28, 2014 5:00:08 PM
dev/otools/inc/CoreSDK/profileapi.h		secondary		1.3 KB	May 28, 2014 5:00:08 PM
dev/otools/inc/CoreSDK/propkeydef.h		secondary		1.3 KB	May 28, 2014 5:00:08 PM
dev/otools/inc/CoreSDK/propsys.h		secondary		156.1 KB	May 28, 2014 5:00:08 PM
dev/otools/inc/CoreSDK/prsht.inl		secondary		12.4 KB	May 28, 2014 5:00:09 PM
dev/otools/inc/CoreSDK/realtimeapiset.h		secondary		2.3 KB	May 28, 2014 5:00:09 PM
dev/otools/inc/CoreSDK/rpcsal.h		secondary		30.1 KB	May 28, 2014 5:00:09 PM
dev/otools/inc/CoreSDK/sapi.h		secondary		838.3 KB	May 28, 2014 5:00:10 PM
dev/otools/inc/CoreSDK/sdkddkver.h		secondary		9.5 KB	May 28, 2014 5:00:10 PM
dev/otools/inc/CoreSDK/sdv_driverspecs.h		secondary		554 bytes	May 28, 2014 5:00:10 PM
dev/otools/inc/CoreSDK/securityappcontainer.h		secondary		1.6 KB	May 28, 2014 5:00:10 PM
dev/otools/inc/CoreSDK/securitybaseapi.h		secondary		27.4 KB	May 28, 2014 5:00:10 PM
dev/otools/inc/CoreSDK/sherrors.h		secondary		12.9 KB	May 28, 2014 5:00:10 PM
dev/otools/inc/CoreSDK/specstrings.h		secondary		39.5 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/specstrings_strict.h		secondary		65.9 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/spellcheck.h		secondary		31.2 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/sql.h		secondary		34.2 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/sqlext.h		secondary		91.5 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/sqltypes.h		secondary		7.8 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/sqlucode.h		secondary		28.1 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/stringapiset.h		secondary		4.2 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/structuredquerycondition.h		secondary		25.3 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/synchapi.h		secondary		17.8 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/sysinfoapi.h		secondary		13.8 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/systemtopologyapi.h		secondary		1.6 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/threadpoolapiset.h		secondary		6.8 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/threadpoollegacyapiset.h		secondary		2.5 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/timeapi.h		secondary		2.5 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/timezoneapi.h		secondary		5.2 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/tpcerror.h		secondary		5.1 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/tpcshrd.h		secondary		4.9 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/tsattrs.h		secondary		10.9 KB	May 28, 2014 5:00:11 PM
dev/otools/inc/CoreSDK/usp10.h		secondary		99.3 KB	May 28, 2014 5:00:13 PM
dev/otools/inc/CoreSDK/utilapiset.h		secondary		1.9 KB	May 28, 2014 5:00:13 PM
dev/otools/inc/CoreSDK/vsstyle.h		secondary		32.1 KB	May 28, 2014 5:00:13 PM
dev/otools/inc/CoreSDK/vssym32.h		secondary		14.8 KB	May 28, 2014 5:00:13 PM
dev/otools/inc/CoreSDK/wct.h		secondary		3.6 KB	May 28, 2014 5:00:13 PM
dev/otools/inc/CoreSDK/winapifamily.h		secondary		7.6 KB	May 28, 2014 5:00:13 PM
dev/otools/inc/CoreSDK/wincodec.h		secondary		307.6 KB	May 28, 2014 5:00:13 PM
dev/otools/inc/CoreSDK/wincred.h		secondary		44.7 KB	May 28, 2014 5:00:14 PM
dev/otools/inc/CoreSDK/wnnc.h		secondary		3.7 KB	May 28, 2014 5:00:15 PM
dev/otools/inc/CoreSDK/wow64apiset.h		secondary		1.8 KB	May 28, 2014 5:00:15 PM
dev/otools/inc/CoreSDK/ws2def.h		secondary		36 KB	May 28, 2014 5:00:15 PM
dev/otools/inc/CoreSDK/ws2ipdef.h		secondary		28.8 KB	May 28, 2014 5:00:15 PM
dev/otools/inc/CoreSDK/zmouse.h		secondary		7.1 KB	May 28, 2014 5:00:16 PM
dev/otools/inc/GDIObjMgr/GomBasics.h		secondary		1.9 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/Isolator/Isolator/AnyMatcher.h		secondary		273 bytes	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/ArgumentComparer.h		secondary		6.7 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/CallAction.h		secondary		1.3 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/CommonHandler.h		secondary		306 bytes	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/CustomAction.h		secondary		1.1 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/CustomActionAdapter.h		secondary		966 bytes	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/FunctionBehavior.h		secondary		2.5 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/FunctionHandler.h		secondary		4.2 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/FunctionInfo.h		secondary		1.6 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/FunctionInvoker.h		secondary		5.6 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/FunctionStub.h		secondary		2.8 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/GenericWrapper.h		secondary		945 bytes	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/GetFunctionInfo.h		secondary		21.7 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/HandlerFunctor.h		secondary		13.6 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/HandlerManager.h		secondary		2.6 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/IsolatedObject.h		secondary		2.7 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/Isolator.h		secondary		3.3 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/Mock10Redirector.h		secondary		2.6 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/SetOutParameterAction.h		secondary		2 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/StoreArgumentAction.h		secondary		944 bytes	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/StubAction.h		secondary		444 bytes	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/StubBase.h		secondary		2.1 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/StubCollection.h		secondary		2.5 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/Isolator/TupleComparer.h		secondary		6.7 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/Isolator/isolator.h		secondary		1.4 KB	May 28, 2014 5:00:46 PM
dev/otools/inc/MathFont/MathFont.h		secondary		10 KB	May 28, 2014 5:01:12 PM
dev/otools/inc/MsoCF/msocfBase.h		secondary		160.9 KB	May 28, 2014 5:21:11 PM
dev/otools/inc/MsoCF/msocfBase_Com.h		secondary		48.1 KB	May 28, 2014 5:01:32 PM
dev/otools/inc/MsoCF/msocfBase_Ptr.h		secondary		8.5 KB	May 28, 2014 5:01:32 PM
dev/otools/inc/MsoCF/msocfDpi.h		secondary		913 bytes	May 28, 2014 5:01:32 PM
dev/otools/inc/MsoCF/msocfError_I.h		secondary		2.1 KB	May 28, 2014 5:01:32 PM
dev/otools/inc/MsoCF/msocfMemory.h		secondary		31.5 KB	May 28, 2014 5:01:32 PM
dev/otools/inc/MsoCF/msocfMemory_OfcMalloc.cpp		secondary		2.1 KB	May 28, 2014 5:01:32 PM
dev/otools/inc/MsoCF/msocfMemory_UseMsoAllocator.cpp		secondary		5.1 KB	May 28, 2014 5:01:32 PM
dev/otools/inc/MsoCF/msocfOptions.h		secondary		9.4 KB	May 28, 2014 5:01:32 PM
dev/otools/inc/MsoCF/msocfStrings_Types.h		secondary		3 KB	May 28, 2014 5:01:32 PM
dev/otools/inc/MsoCF/msocfUtilities.h		secondary		7.8 KB	May 28, 2014 5:01:32 PM
dev/otools/inc/MsoCF/msocfWindow.h		secondary		29.8 KB	May 28, 2014 5:01:32 PM
dev/otools/inc/MsoCF/msocfWindowEvents.h		secondary		18.2 KB	May 28, 2014 5:21:11 PM
dev/otools/inc/MsoCF/msocfbase_lite.h		secondary		5.8 KB	May 28, 2014 5:01:32 PM
dev/otools/inc/ThreadPool/tpcommon.h		secondary		4.5 KB	May 28, 2014 5:04:47 PM
dev/otools/inc/ThreadPool/tpcore.h		secondary		78.6 KB	May 28, 2014 5:04:47 PM
dev/otools/inc/ThreadPool/tppower.h		secondary		29.4 KB	May 28, 2014 5:04:47 PM
dev/otools/inc/airspace/AirSpace.Private.h		secondary		2.8 KB	May 28, 2014 4:58:31 PM
dev/otools/inc/airspace/AirSpace.h		secondary		199.8 KB	May 28, 2014 4:58:31 PM
dev/otools/inc/airspace/AirSpaceHelpers.h		secondary		12.6 KB	May 28, 2014 4:58:31 PM
dev/otools/inc/airspace/AirSpaceRegion.h		secondary		3.8 KB	May 28, 2014 4:58:31 PM
dev/otools/inc/arc/arcEnum.h		secondary		7.5 KB	May 28, 2014 4:59:15 PM
dev/otools/inc/arc/arcForward.h		secondary		10.3 KB	May 28, 2014 4:59:15 PM
dev/otools/inc/arc/arcMain.h		secondary		80.3 KB	May 28, 2014 4:59:15 PM
dev/otools/inc/arc/arcPlatform.h		secondary		2.7 KB	May 28, 2014 4:59:15 PM
dev/otools/inc/arc/arcUtilColor.h		secondary		29.8 KB	May 28, 2014 4:59:15 PM
dev/otools/inc/arc/private/arcBase.h		secondary		3 KB	May 28, 2014 4:59:15 PM
dev/otools/inc/chart/ChartRecolor.h		secondary		118 bytes	May 28, 2014 4:59:48 PM
dev/otools/inc/chart/ChartRefTrackingInfo.h		secondary		1.7 KB	May 28, 2014 4:59:48 PM
dev/otools/inc/chart/DocCompatModeInfo.h		secondary		1.1 KB	May 28, 2014 4:59:48 PM
dev/otools/inc/chart/chartConvert.h		secondary		1.2 KB	May 28, 2014 4:59:48 PM
dev/otools/inc/chart/chartInitFini.h		secondary		866 bytes	May 28, 2014 4:59:48 PM
dev/otools/inc/chart/chartexports.h		secondary		2.2 KB	May 28, 2014 4:59:48 PM
dev/otools/inc/click2run/WordRegistryCheck.h		secondary		1.2 KB	May 28, 2014 4:59:51 PM
dev/otools/inc/click2run/c2rdll.h		secondary		20.2 KB	May 28, 2014 4:59:51 PM
dev/otools/inc/csi/CoAuthDataSync.h		secondary		35.5 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/csi/CsiBase.h		secondary		12.7 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/csi/CsiBaseOptions.h		secondary		6.5 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/csi/csiDocument.h		secondary		19.7 KB	May 28, 2014 5:21:05 PM
dev/otools/inc/csi/csiDocumentAccess.h		secondary		537 bytes	May 28, 2014 5:00:25 PM
dev/otools/inc/csi/csiDocumentState.h		secondary		12.1 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/csi/csiEditorsTable_I.h		secondary		6.1 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/csi/csiErrorDefinitions.h		secondary		44.1 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/csi/csiError_I.h		secondary		2.3 KB	May 28, 2014 5:00:25 PM
dev/otools/inc/dlcutil/dlcmetadata.h		secondary		30.1 KB	May 28, 2014 5:00:38 PM
dev/otools/inc/dlcutil/dlcmetanames.h		secondary		3.9 KB	May 28, 2014 5:00:38 PM
dev/otools/inc/docsui/xaml/DocsXaml.h		secondary		2 KB	May 28, 2014 5:00:38 PM
dev/otools/inc/docsui/xaml/DocsXamlApi.h		secondary		711 bytes	May 28, 2014 5:00:38 PM
dev/otools/inc/flexui/FlexAPI.h		secondary		7.3 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/flexui/FlexDataSourceData.h		secondary		757 bytes	May 28, 2014 5:00:39 PM
dev/otools/inc/flexui/FlexDialog.h		secondary		4.2 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/flexui/FlexEnums.h		secondary		4.5 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/flexui/FlexEventHandler.h		secondary		14.2 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/flexui/FlexHelpers.h		secondary		28.6 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/flexui/FlexList.h		secondary		9.1 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/flexui/FlexMenuDatasources.h		secondary		13.9 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/flexui/FlexValue.h		secondary		21.7 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/flexui/adapter/DataSource.h		secondary		15.7 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/flexui/adapter/DataSourceDescription.h		secondary		10.8 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/flexui/adapter/PropertyDescription.h		secondary		2.4 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/flexui/adapter/StateModifier.h		secondary		2.6 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gel.h		secondary		57.5 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gelart.h		secondary		20.1 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gelcom.h		secondary		11.5 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxEffect.h		secondary		5 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxExceptions.h		secondary		17.7 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxGeometry2D.h		secondary		18.8 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxGeometry3D.h		secondary		14.9 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxImage.h		secondary		18.1 KB	May 28, 2014 5:21:06 PM
dev/otools/inc/gfx/gfxMaterial3D.h		secondary		8.9 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxRender.h		secondary		85.9 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxSceneGraph.h		secondary		77.7 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxTargetGDI.h		secondary		4.8 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxTargetGEL.h		secondary		25.6 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxText.h		secondary		17.4 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxUtilColor.h		secondary		7.5 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxUtilD2D.h		secondary		6.5 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxUtilMath.h		secondary		91 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxUtilRegion.h		secondary		6.3 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxUtilRenderGDI.h		secondary		2.6 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxUtilWIC.h		secondary		6.6 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxfwd.h		secondary		22 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxhostsite.h		secondary		4.7 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxprerelease.h		secondary		937 bytes	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxscenemask.h		secondary		3.3 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxshapebuilder.h		secondary		105.5 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxtarget.h		secondary		99.9 KB	May 28, 2014 5:21:06 PM
dev/otools/inc/gfx/gfxtypeinfo.h		secondary		2.4 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/gfxtypes.h		secondary		20.9 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/private/gelbase.h		secondary		46.4 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/private/gelenum.h		secondary		11.5 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/private/gfxTarget_i.h		secondary		20.1 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/private/gfxbase.h		secondary		6.2 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/private/gfxexport.h		secondary		710 bytes	May 28, 2014 5:00:39 PM
dev/otools/inc/gfx/private/gfxpubheadertop.h		secondary		1.3 KB	May 28, 2014 5:00:39 PM
dev/otools/inc/hxpeoplexaml/HxPeopleXaml.h		secondary		571 bytes	May 28, 2014 5:00:44 PM
dev/otools/inc/hxpeoplexaml/HxPeopleXamlApi.h		secondary		573 bytes	May 28, 2014 5:00:44 PM
dev/otools/inc/hxshared/WordMailHost.h		secondary		3.1 KB	May 28, 2014 5:00:45 PM
dev/otools/inc/iacom2/iacom2.h		secondary		144.1 KB	May 28, 2014 5:00:45 PM
dev/otools/inc/igx/IgxExport.h		secondary		509 bytes	May 28, 2014 5:00:45 PM
dev/otools/inc/igx/InsertDiagramCommand.h		secondary		3.9 KB	May 28, 2014 5:00:45 PM
dev/otools/inc/igx/igxCreate.h		secondary		4.3 KB	May 28, 2014 5:00:45 PM
dev/otools/inc/igx/igxom.h		secondary		13.6 KB	May 28, 2014 5:00:45 PM
dev/otools/inc/liblet/AcceleratorKeys/AcceleratorKeys.h		secondary		14.3 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/AcceleratorKeys/keymap.fmdl.h		secondary		49.8 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/AppHost/ActivationEvents.h		secondary		1.9 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/AppHost/ActivationEvents_imm.h		secondary		1.2 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/AppHost/ActivationEvents_winrt.h		secondary		4.4 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/AppHost/ApplicationBoot.h		secondary		1.6 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/AppHost/ApplicationFrame.h		secondary		19.1 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/AppHost/ApplicationFrame_winrt.h		secondary		8.8 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/AppHost/ApplicationObject.h		secondary		5.4 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/AppHost/ApplicationObject_imm.h		secondary		1.5 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/AppHost/ApplicationObject_winrt.h		secondary		3.8 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/AppHost/ApplicationUser.h		secondary		3.4 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/AppHost/ApplicationUser_winrt.h		secondary		2 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/AppHost/BaseApplicationUser.h		secondary		1.4 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/AppHost/BaseApplicationUser_winrt.h		secondary		2.7 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/AppHost/BaseLoadingUIUser.h		secondary		1 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/AppHost/LoadingUI.h		secondary		10.1 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/AppHost/PLMSupport.h		secondary		1.7 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/Authentication/CredData.h		secondary		2.6 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/Authentication/Identity.h		secondary		27 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/Authentication/IdentityData.h		secondary		8.3 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/Authentication/IdentitySimple.h		secondary		2.6 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/Authentication/msidcrl.h		secondary		124.2 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/Clipboard/clipboardapis.h		secondary		1 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/Collections/Nullable.h		secondary		3.5 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/Collections/SparseArray.h		secondary		40.7 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/Crypto/cngPrimitives.h		secondary		4.2 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/Crypto/cryptoSharedApi.h		secondary		4.3 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/DispatchQueue/CallbackCookie.h		secondary		1.7 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/DispatchQueue/CallbackStore.h		secondary		18.1 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/DispatchQueue/MsoDispatchQueueRunner.h		secondary		2.3 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/DispatchQueue/MsoDispatcher.h		secondary		30.6 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/ExecutionContext/ExecutionContext.h		secondary		3.5 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/AccessibilityElement.h		secondary		29.5 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/AccessibilityInvoke.h		secondary		2.9 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/AccessibilityObject.h		secondary		8.2 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/AccessibilityPattern.h		secondary		7.1 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/AccessibilityScroll.h		secondary		10.6 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/AccessibilityText.h		secondary		5.1 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/AccessibilityValue.h		secondary		3.5 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/Binder.h		secondary		4.9 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/BinderEndpointWeakRef.h		secondary		1.3 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/BulletStyle.h		secondary		707 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/ControlType.h		secondary		2 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/FlowDirections.h		secondary		535 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/GuidComparer.h		secondary		767 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/HorizontalTextAlignment.h		secondary		477 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/IConcreteElement.h		secondary		2.7 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/IConcreteObject.h		secondary		497 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/IConcreteObjectFactory.h		secondary		696 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/IDynamicPropertyContainer.h		secondary		1.3 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/IElement.h		secondary		3.7 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/IInvoke.h		secondary		274 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/IObject.h		secondary		488 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/IPattern.h		secondary		338 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/IPatternOverrider.h		secondary		902 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/IScroll.h		secondary		841 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/IText.h		secondary		736 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/ITextRange.h		secondary		1.6 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/IValue.h		secondary		365 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/IWeakRef.h		secondary		227 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/IWeakRefSource.h		secondary		265 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/LiveSetting.h		secondary		266 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/Object.h		secondary		5.5 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/ObjectType.h		secondary		1.1 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/Orientation.h		secondary		274 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/PatternIdentifier.h		secondary		3.1 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/Point.h		secondary		1.1 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/Rect.h		secondary		2.2 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/ScrollAmount.h		secondary		1.3 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/StyleIdentifier.h		secondary		1.4 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/SupportedTextSelection.h		secondary		489 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/TextAttributeIdentifier.h		secondary		5.8 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/TextDecorationLineStyle.h		secondary		1.6 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/TextRangeEndpoint.h		secondary		350 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/TextUnit.h		secondary		590 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/abstract/ThreadTasks.h		secondary		716 bytes	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/win32/Win32AccessibilityElementImpl.h		secondary		4.7 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/win32/Win32AccessibilityRoot.h		secondary		2.1 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/winrt/VectorImpl.h		secondary		3.1 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/winrt/VectorViewImpl.h		secondary		2 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastAcc/winrt/WinRTAccessibilityElement.h		secondary		10.8 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastIME/fastime.h		secondary		3.1 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/FastModel/FastApis.h		secondary		3.1 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/FastModel/FastCore.h		secondary		6.6 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/FastModel/FastFunc.h		secondary		16.7 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/FastModel/FastMap.h		secondary		27.3 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/FastModel/FastObject.h		secondary		56.8 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/FastModel/FastSparseArray.h		secondary		26.9 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/FastModel/FastVector.h		secondary		27.6 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/FastModel/ItemTraits.h		secondary		6.4 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/FastModel/details/BinderPlat_shared.h		secondary		245 bytes	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/FastModel/details/QueueItemUtil.h		secondary		3.9 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/FastModel/etwfm_gen.h		secondary		23.5 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/FastUI/fastui.fmdl.h		secondary		106.5 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/FastUI/fastuiapis.h		secondary		2.7 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/MessageBar/MessageBar.h		secondary		7.7 KB	May 28, 2014 5:00:53 PM
dev/otools/inc/liblet/MsoMachineTranslation.h		secondary		16.3 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/MsoNetStatus.h		secondary		5.2 KB	May 28, 2014 5:21:08 PM
dev/otools/inc/liblet/MsoOfficeRedir.h		secondary		20.6 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/MsoOfficeWebServiceApi.h		secondary		21.2 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/MsoPerfScenarioAPI.h		secondary		5.1 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/MsoUIBackgrounds.h		secondary		8.4 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/OfficeWebServiceApi/configtokens.h		secondary		2.4 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/OfficeWebServiceApi/configurls.h		secondary		5.7 KB	May 28, 2014 5:21:08 PM
dev/otools/inc/liblet/OfficeWebServiceApi/urlbuilder.h		secondary		5.9 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/Orapi/DynamicMsorid.h		secondary		7.8 KB	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/Orapi/OrapiData.h		secondary		3.3 KB	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/PerfScenario/SpecialPseudoMarkers.h		secondary		900 bytes	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/PerfScenario/holder.h		secondary		1.6 KB	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/Platform/dataProtect.h		secondary		5.3 KB	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/Platform/msoCursor.h		secondary		1.2 KB	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/Platform/msoDateTime.h		secondary		1.1 KB	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/Platform/msoGeometry.h		secondary		1.4 KB	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/Platform/msoKeyboard.h		secondary		899 bytes	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/Platform/msoLoadLibrary.h		secondary		542 bytes	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/Platform/msoLocaleSupport.h		secondary		1.4 KB	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/Platform/msoOle32.h		secondary		913 bytes	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/Platform/msoSleep.h		secondary		630 bytes	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/Platform/msoSyncPrimitives.h		secondary		1.9 KB	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/Platform/msoSysInfo.h		secondary		6.3 KB	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/Platform/msoSystemHeap.h		secondary		1.2 KB	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/PrintUI/PrintUI.h		secondary		5.8 KB	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/PrintUI/private/PrintUIEnum.h		secondary		517 bytes	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/ProgressUI/ProgressUI.h		secondary		3.9 KB	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/ProgressUI/Signal.h		secondary		3.2 KB	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/SpyTree/spyTree.h		secondary		9.8 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/Synchronization/TimeoutInterval.h		secondary		2 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/Synchronization/WaitApi.h		secondary		4.9 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/Synchronization/WaitApi_AlertWrapper.h		secondary		912 bytes	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/Synchronization/WaitUI_AlertWrapper_win32.h		secondary		1.6 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/Synchronization/WaitUI_win32.h		secondary		4.2 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/Synchronization/WindowMessageApi_win32.h		secondary		622 bytes	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/TelemetryRuleEngine/ETWManifestBase.h		secondary		1.2 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/TelemetryRuleEngine/telemetry.h		secondary		3.2 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/TouchFramework/TouchFramework.h		secondary		19.5 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/TouchFramework/TouchFrameworkDataStructures.h		secondary		7.3 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/WinRTUtil/TypeTraits.h		secondary		21.1 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/WinRTUtil/WinRTCollections.h		secondary		23.8 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/WinRTUtil/WinRTStaticMacros.h		secondary		2.8 KB	May 28, 2014 5:00:58 PM
dev/otools/inc/liblet/WinRTUtil/WinRTStatics.h		secondary		6.7 KB	May 28, 2014 5:00:58 PM
dev/otools/inc/liblet/WinRTUtil/msoHString.h		secondary		8.4 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/XamlUtil/CompositeXamlMetadataProvider.h		secondary		810 bytes	May 28, 2014 5:00:58 PM
dev/otools/inc/liblet/XamlUtil/DelayLoadedXamlMetadataProvider.h		secondary		684 bytes	May 28, 2014 5:00:58 PM
dev/otools/inc/liblet/XamlUtil/XamlStatics.h		secondary		11.6 KB	May 28, 2014 5:00:58 PM
dev/otools/inc/liblet/algorithms/base64.h		secondary		10.2 KB	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/algorithms/simpleConvert.h		secondary		904 bytes	May 28, 2014 5:00:48 PM
dev/otools/inc/liblet/comUtil/CopyStg.h		secondary		1.2 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/comUtil/iunknownMacros.h		secondary		7.5 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/comUtil/smartBstr.h		secondary		2.9 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/comUtil/smartHGlobals.h		secondary		2.3 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/ObjectQueryCast.h		secondary		6.8 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/ObjectRefCount.h		secondary		4.8 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/ObjectSwarm.h		secondary		8.4 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/ObjectWithWeakRef.h		secondary		11.8 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/aggRefCounted.h		secondary		586 bytes	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/assertFlatApi.h		secondary		1.1 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/assertGuts.h		secondary		13.2 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/assert_BasicImpl.h		secondary		4.4 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/autoInit.h		secondary		3 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/autoRestore.h		secondary		4.5 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/checkAndReturnMacros.h		secondary		4 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/enableMakeShared.h		secondary		875 bytes	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/initable.h		secondary		3.4 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/lockable.h		secondary		10.7 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/memoryAPI.h		secondary		9.5 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/memoryAPI_MemHeap.h		secondary		9.6 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/msoAtomic.h		secondary		2.4 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/msoGuid.h		secondary		8 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/msoGuidDetails.h		secondary		4 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/msoUnknownObject.h		secondary		6.7 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/refCounted.h		secondary		18.3 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/restrictHelper.h		secondary		2.6 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/smartHandles.h		secondary		386 bytes	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/smartLocks.h		secondary		6.3 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/smartPointerBase.h		secondary		21.4 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/smartPointers.h		secondary		3.6 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/threadLocal.h		secondary		3.9 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/threading.h		secondary		9.1 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/typeHelper.h		secondary		8 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/verifyElseCrash.h		secondary		3.4 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/verifyElseThrow.h		secondary		723 bytes	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/wcharstring.h		secondary		2.7 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/core/weakRef.h		secondary		4.1 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/debugSupport/msodbglg.h		secondary		16.5 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/delayLoad/loadLibrary.h		secondary		5 KB	May 28, 2014 5:00:49 PM
dev/otools/inc/liblet/donotuse/SimpleUnknown.h		secondary		2.4 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/donotuse/logging.h		secondary		3.6 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/donotuse/msobp.h		secondary		3.3 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/donotuse/msu_plex.h		secondary		30.7 KB	May 28, 2014 5:00:50 PM
dev/otools/inc/liblet/gimme/GimmeFlags.h		secondary		3.6 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/gimme/GimmeTypes.h		secondary		3 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/gimme/GimmeUser.h		secondary		3.3 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/htmlpars/filerefcollector.h		secondary		2.9 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/htmlpars/htmlparsdata.h		secondary		77.8 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/htmlpars/htmlparsinterface.h		secondary		79.5 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/http/UserAgent.h		secondary		2.5 KB	May 28, 2014 5:00:51 PM
dev/otools/inc/liblet/libletapi/msoInitData.h		secondary		653 bytes	May 28, 2014 5:00:52 PM
dev/otools/inc/liblet/loadmso/loadmso.h		secondary		2 KB	May 28, 2014 5:00:52 PM
dev/otools/inc/liblet/loadvbe/loadvbe.h		secondary		513 bytes	May 28, 2014 5:00:52 PM
dev/otools/inc/liblet/logging/LoggingCategories.h		secondary		16.7 KB	May 28, 2014 5:21:08 PM
dev/otools/inc/liblet/logging/LoggingSeverities.h		secondary		2.5 KB	May 28, 2014 5:00:53 PM
dev/otools/inc/liblet/logging/ScopeHolder.h		secondary		1.4 KB	May 28, 2014 5:00:53 PM
dev/otools/inc/liblet/math/math2D.h		secondary		23.5 KB	May 28, 2014 5:00:53 PM
dev/otools/inc/liblet/math/mathScalar.h		secondary		5.3 KB	May 28, 2014 5:00:53 PM
dev/otools/inc/liblet/math/private/mathBase.h		secondary		3 KB	May 28, 2014 5:00:53 PM
dev/otools/inc/liblet/math/private/mathPubHeaderTop.h		secondary		2.7 KB	May 28, 2014 5:00:53 PM
dev/otools/inc/liblet/memoryManager/memmark.h		secondary		24.3 KB	May 28, 2014 5:00:53 PM
dev/otools/inc/liblet/metroxml/acStorage.h		secondary		2.8 KB	May 28, 2014 5:00:53 PM
dev/otools/inc/liblet/metroxml/metro.h		secondary		35.6 KB	May 28, 2014 5:00:53 PM
dev/otools/inc/liblet/metroxml/metrosax.h		secondary		19.9 KB	May 28, 2014 5:00:53 PM
dev/otools/inc/liblet/metroxml/odf.h		secondary		5.1 KB	May 28, 2014 5:00:53 PM
dev/otools/inc/liblet/msoApi.h		secondary		6.2 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoAppInfo.h		secondary		2.2 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoAssert.h		secondary		12.2 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoAsyncInfo.h		secondary		1.1 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoAuthentication.h		secondary		6.9 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoClipboard.h		secondary		18.3 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoConfig.h		secondary		8.3 KB	May 28, 2014 5:21:08 PM
dev/otools/inc/liblet/msoConnectedGalleries.h		secondary		5 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoCore.h		secondary		4.9 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoCoreDebug.h		secondary		1.9 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoDStr.h		secondary		8.9 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoDWrite.h		secondary		37.1 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoDebug.h		secondary		21.2 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoDirectory.h		secondary		15.6 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoFile.h		secondary		20.1 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoFileNew.h		secondary		9.1 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoFmtText.h		secondary		46.5 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoGimme.h		secondary		17.3 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoOrapi.h		secondary		22.8 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoPath.h		secondary		9 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoProcess.h		secondary		10.2 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoRegistry.h		secondary		7 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoResiliency.h		secondary		37.3 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoResources.h		secondary		941 bytes	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoSecurity.h		secondary		21.4 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoStd.h		secondary		7.6 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoStream.h		secondary		5.2 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoTheming.h		secondary		3.6 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoUrl.h		secondary		5.8 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoWinRTUtil.h		secondary		17.2 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoWinRTUtil_imm.h		secondary		827 bytes	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoXamlUtil.h		secondary		6.4 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msohtmlpars.h		secondary		36.6 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msohttp.h		secondary		19.3 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msohttp_authhandler.h		secondary		6 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoinstance/appInfo.h		secondary		3.3 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoinstance/commandLine.h		secondary		790 bytes	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoinstance/genericValue.h		secondary		1.1 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoinstance/msoInstance.h		secondary		3.5 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoinstance/msoInstanceAPI.h		secondary		3.8 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoinstance/msoUserInterface.h		secondary		13.5 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msoinstance/sku.h		secondary		3.1 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msostringBstr.h		secondary		5.8 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msostringCloning.h		secondary		8.5 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msostringComparison.h		secondary		23.8 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msostringConversion.h		secondary		13.3 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msostringDrawing.h		secondary		1.6 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msostringFuzzy.h		secondary		2.6 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msostringInsertion.h		secondary		2.6 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msostringIntl.h		secondary		9.9 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msostringIntlCompare.h		secondary		8.1 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msostringIntlUtils.h		secondary		3.5 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msostringOString.h		secondary		22.3 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msostringParsing.h		secondary		8.7 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msostringResProv.h		secondary		1.8 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msostringResources.h		secondary		10.4 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msostringTraits.h		secondary		6.2 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msostringUtils.h		secondary		21.4 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/msostringXml.h		secondary		3.9 KB	May 28, 2014 5:00:54 PM
dev/otools/inc/liblet/pickerdlgutil/pickerdlg.h		secondary		1 KB	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/process/sessionId.h		secondary		1.8 KB	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/progress/abort_win32.h		secondary		6.2 KB	May 28, 2014 5:00:55 PM
dev/otools/inc/liblet/resources/MsoResourceTypes.h		secondary		691 bytes	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/resources/bitmap.h		secondary		5.4 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/shellFolder/specialFolders_win32.h		secondary		1.8 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/shipAsserts/msoAssertLegacy.h		secondary		10.5 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/shipAsserts/shipAssert_BasicImpl.h		secondary		1.6 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/shipAsserts/trackStubImpl.h		secondary		2.2 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/shipAsserts/tryExceptLegacy_win32.h		secondary		240 bytes	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/spyipc/Buffer.h		secondary		5 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/spyipc/Consumer/DeferredFunction.h		secondary		2.6 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/spyipc/Consumer/FuncAction.h		secondary		1.4 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/spyipc/Consumer/FuncWorkItem.h		secondary		1 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/spyipc/Consumer/Optional.h		secondary		3 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/spyipc/IAction.h		secondary		916 bytes	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/spyipc/IDispatcher.h		secondary		720 bytes	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/spyipc/IDispatcherWorkItem.h		secondary		656 bytes	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/spyipc/ITask.h		secondary		870 bytes	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/spyipc/Messaging/RequestResponse.h		secondary		9.4 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/spyipc/Transport/ICommunicator.h		secondary		1.8 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/spyipc/Transport/NamedPipe/INamedPipeAppContainer.h		secondary		3 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/spyipc/Transport/NamedPipe/INamedPipeListener.h		secondary		1.2 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/spyipc/Transport/Tcp/ITcpConnector.h		secondary		1.3 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/spyipc/Transport/Tcp/ITcpListener.h		secondary		1.1 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/spyipc/Transport/Tcp/Tcp.h		secondary		511 bytes	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/spyipc/serialization/CsBinary.h		secondary		2.5 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/sqm/sqmhost.h		secondary		3.4 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/stream/byteStream.h		secondary		24.9 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/stream/fastHandler.h		secondary		13.3 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/stream/progress.h		secondary		17.5 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/stringcore/stackStrings.h		secondary		3 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/strings/codePages.h		secondary		2.9 KB	May 28, 2014 5:00:56 PM
dev/otools/inc/liblet/strings/core/unicodeTraits.h		secondary		2.7 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/strings/languageIds.h		secondary		10.4 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/strings/surrogatePairSupport.h		secondary		1.6 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/strings/unicodeSubranges.h		secondary		8.9 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/timing/Stopwatch.h		secondary		7.7 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/uicolor/IPalette.h		secondary		307 bytes	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/uicolor/MsoPalette_Shared.g.h		secondary		3.3 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/url/UrlInterface.h		secondary		23.8 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/url/urlApi.h		secondary		1.9 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/url/urlData.h		secondary		12.9 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/url/urlInteraction.h		secondary		3.3 KB	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/watsonalerts/watsonAlertData.h		secondary		211 bytes	May 28, 2014 5:00:57 PM
dev/otools/inc/liblet/xml/msxmlFactory_win32.h		secondary		2.6 KB	May 28, 2014 5:00:58 PM
dev/otools/inc/liblet/xml/namespaceManagerApi.h		secondary		5.1 KB	May 28, 2014 5:00:58 PM
dev/otools/inc/liblet/xml/threaded.h		secondary		3.1 KB	May 28, 2014 5:00:58 PM
dev/otools/inc/liblet/xml/xmlFactory.h		secondary		2.6 KB	May 28, 2014 5:00:58 PM
dev/otools/inc/liblet/xml/xmlSettings.h		secondary		2.1 KB	May 28, 2014 5:00:58 PM
dev/otools/inc/liblet/xml/xmlStorageApi.h		secondary		6.2 KB	May 28, 2014 5:00:58 PM
dev/otools/inc/liblet/xml/xmldom.h		secondary		16.7 KB	May 28, 2014 5:00:58 PM
dev/otools/inc/lobi/Is64bitWindows.h		secondary		299 bytes	May 28, 2014 5:01:06 PM
dev/otools/inc/lowrights/LrBroker.h		secondary		9.1 KB	May 28, 2014 5:01:06 PM
dev/otools/inc/lowrights/LrClient.h		secondary		5.2 KB	May 28, 2014 5:01:06 PM
dev/otools/inc/lowrights/LrRequest.h		secondary		19.6 KB	May 28, 2014 5:01:06 PM
dev/otools/inc/lowrights/LrRequestCats.h		secondary		1.3 KB	May 28, 2014 5:01:06 PM
dev/otools/inc/lowrights/LrShared.h		secondary		1.2 KB	May 28, 2014 5:01:06 PM
dev/otools/inc/mapisdk/mapiCode.h		secondary		7.7 KB	May 28, 2014 5:01:11 PM
dev/otools/inc/mapisdk/mapiDefS.h		secondary		83 KB	May 28, 2014 5:01:12 PM
dev/otools/inc/mapisdk/mapiGuid.h		secondary		11.6 KB	May 28, 2014 5:01:12 PM
dev/otools/inc/mapisdk/mapiTags.h		secondary		53.3 KB	May 28, 2014 5:01:12 PM
dev/otools/inc/mapisdk/mapiX.h		secondary		17.8 KB	May 28, 2014 5:01:12 PM
dev/otools/inc/misc/Mso.HelpIds.h		secondary		24.2 KB	May 28, 2014 5:01:15 PM
dev/otools/inc/misc/OfficeKillCore.h		secondary		745 bytes	May 28, 2014 5:01:16 PM
dev/otools/inc/misc/Word.HelpIds.h		secondary		33.2 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/misc/cgapi.h		secondary		16.8 KB	May 28, 2014 5:01:14 PM
dev/otools/inc/misc/ctffunc_g.c		secondary		1.2 KB	May 28, 2014 5:01:14 PM
dev/otools/inc/misc/ctffunc_i.c		secondary		2.7 KB	May 28, 2014 5:01:14 PM
dev/otools/inc/misc/ctfutb_i.c		secondary		2.4 KB	May 28, 2014 5:01:14 PM
dev/otools/inc/misc/ctrlguid.h		secondary		14.2 KB	May 28, 2014 5:01:14 PM
dev/otools/inc/misc/envelope.h		secondary		79.5 KB	May 28, 2014 5:01:14 PM
dev/otools/inc/misc/facapi.h		secondary		24.2 KB	May 28, 2014 5:01:14 PM
dev/otools/inc/misc/fcagnt.h		secondary		251.4 KB	May 28, 2014 5:01:14 PM
dev/otools/inc/misc/gkhost.h		secondary		6.4 KB	May 28, 2014 5:01:14 PM
dev/otools/inc/misc/hhcapi.h		secondary		14 KB	May 28, 2014 5:01:14 PM
dev/otools/inc/misc/hwxink.h		secondary		18.6 KB	May 28, 2014 5:01:14 PM
dev/otools/inc/misc/hyphapi.h		secondary		5.6 KB	May 28, 2014 5:01:14 PM
dev/otools/inc/misc/intldate.h		secondary		5.7 KB	May 28, 2014 5:01:14 PM
dev/otools/inc/misc/lid.h		secondary		11.9 KB	May 28, 2014 5:01:14 PM
dev/otools/inc/misc/msimetip.h		secondary		12.9 KB	May 28, 2014 5:01:15 PM
dev/otools/inc/misc/msxmlFooter.h		secondary		4 KB	May 28, 2014 5:01:15 PM
dev/otools/inc/misc/msxmlHeader.h		secondary		177 bytes	May 28, 2014 5:01:15 PM
dev/otools/inc/misc/nlbase.h		secondary		11.6 KB	May 28, 2014 5:01:15 PM
dev/otools/inc/misc/nlcheck.h		secondary		64.6 KB	May 28, 2014 5:01:15 PM
dev/otools/inc/misc/nllad.h		secondary		7.7 KB	May 28, 2014 5:01:16 PM
dev/otools/inc/misc/offrhdguids.h		secondary		3 KB	May 28, 2014 5:01:16 PM
dev/otools/inc/misc/olehtml.h		secondary		4.3 KB	May 28, 2014 5:01:16 PM
dev/otools/inc/misc/oredir.h		secondary		281 bytes	May 28, 2014 5:01:16 PM
dev/otools/inc/misc/otrie.h		secondary		3.3 KB	May 28, 2014 5:01:16 PM
dev/otools/inc/misc/over.h		secondary		1.1 KB	May 28, 2014 5:01:16 PM
dev/otools/inc/misc/perfhost.h		secondary		340.9 KB	May 28, 2014 5:01:16 PM
dev/otools/inc/misc/proofbase.h		secondary		18.4 KB	May 28, 2014 5:01:16 PM
dev/otools/inc/misc/saext.h		secondary		2.2 KB	May 28, 2014 5:01:16 PM
dev/otools/inc/misc/spellapi.h		secondary		24.4 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/misc/t2embapi.h		secondary		10.7 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/misc/tcguids.h		secondary		10.3 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/misc/thesapi.h		secondary		7.4 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/misc/vendor.h		secondary		7.9 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/misc/wdguids.h		secondary		2.8 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/misc/webdc.h		secondary		7.8 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mmcfcore/metro.h		secondary		1.5 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mmcfcore/metroCommon.h		secondary		12.7 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mmcfcore/metroCore.h		secondary		80.4 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mmcfcore/metroError.h		secondary		50.6 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mmcfcore/metroMetadata.h		secondary		27.9 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mmcfcore/metroOdf.h		secondary		19.4 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/functor.h		secondary		28.3 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/mock.h		secondary		21.9 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/mock10/ExternalMockFunction.h		secondary		59.6 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/mock10/ExternalMockMethod.h		secondary		11.7 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/mock10/ExternalMockTarget.h		secondary		5.9 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/mock10/MockVariable.h		secondary		13 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/mock10/detour.h		secondary		9.1 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/mock10/detourfilterinfo.h		secondary		18.9 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/mock10/detourfunction.h		secondary		63 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/mock10/detourmethod.h		secondary		15.2 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/mock10/detourshim.h		secondary		32 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/mock10/detourthunk.h		secondary		1.1 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/mock10/mock10.h		secondary		846 bytes	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/mock10/mockassert.h		secondary		1002 bytes	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/mock10/mockfunction.h		secondary		29.2 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/mock10/mockmethod.h		secondary		34.9 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/mock10/mockstatus.h		secondary		6.4 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/mock10/parametervalue.h		secondary		1.2 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/mock10/parametervaluetraits.h		secondary		6.7 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/parametertypes.h		secondary		49.4 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/wex.common.h		secondary		955 bytes	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/wexdebug.h		secondary		13.8 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/wextypelist.h		secondary		6.6 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/mock10/wextypes.h		secondary		5.1 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/montage/teaserparttypes.h		secondary		1.6 KB	May 28, 2014 5:01:17 PM
dev/otools/inc/motif/motifcpptest/DbghelpWindowsSymbolLibrary.h		secondary		8 KB	May 28, 2014 5:01:18 PM
dev/otools/inc/motif/motifcpptest/ErrorMessage.h		secondary		629 bytes	May 28, 2014 5:01:18 PM
dev/otools/inc/motif/motifcpptest/LazyTestMetaDataPopulator.h		secondary		6.5 KB	May 28, 2014 5:01:18 PM
dev/otools/inc/motif/motifcpptest/Motif/ActionRunner.h		secondary		10.5 KB	May 28, 2014 5:01:18 PM
dev/otools/inc/motif/motifcpptest/Motif/CPPException.h		secondary		969 bytes	May 28, 2014 5:01:18 PM
dev/otools/inc/motif/motifcpptest/Motif/CharacterCodec.h		secondary		7.9 KB	May 28, 2014 5:21:09 PM
dev/otools/inc/motif/motifcpptest/Motif/DefaultExceptionHandler.h		secondary		1.8 KB	May 28, 2014 5:01:18 PM
dev/otools/inc/motif/motifcpptest/Motif/InterruptOnFailure.h		secondary		3 KB	May 28, 2014 5:01:18 PM
dev/otools/inc/motif/motifcpptest/Motif/SEHException.h		secondary		1.4 KB	May 28, 2014 5:01:18 PM
dev/otools/inc/motif/motifcpptest/Motif/STDException.h		secondary		1.3 KB	May 28, 2014 5:01:18 PM
dev/otools/inc/motif/motifcpptest/MotifCppTest.h		secondary		13.3 KB	May 28, 2014 5:21:09 PM
dev/otools/inc/motif/motifcpptest/PlatformTagging.h		secondary		523 bytes	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/RunnableMotifTest.h		secondary		3.2 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/StackWalker.h		secondary		273 bytes	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/TestAssert/Basic.h		secondary		1.5 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/TestAssert/Check.h		secondary		3.3 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/TestAssert/Comment.h		secondary		2.3 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/TestAssert/Details/InteropHelperFuncs.h		secondary		4.1 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/TestAssert/Details/LogMessageBuilder.h		secondary		5.3 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/TestAssert/Details/ValueComparison.h		secondary		28.7 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/TestAssert/Equality.h		secondary		3.2 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/TestErrorLogger.h		secondary		303 bytes	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/UnitTestClientExtensionsImpl.h		secondary		947 bytes	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/UnitTestRunner.h		secondary		556 bytes	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/androidUtilities.h		secondary		19.6 KB	May 28, 2014 5:21:09 PM
dev/otools/inc/motif/motifcpptest/assertmethods.h		secondary		1.5 KB	May 28, 2014 5:01:18 PM
dev/otools/inc/motif/motifcpptest/callstackstringizer.h		secondary		4.2 KB	May 28, 2014 5:01:18 PM
dev/otools/inc/motif/motifcpptest/motifcallstackutilities.h		secondary		12 KB	May 28, 2014 5:01:18 PM
dev/otools/inc/motif/motifcpptest/motifcppexetests.h		secondary		17.2 KB	May 28, 2014 5:01:18 PM
dev/otools/inc/motif/motifcpptest/motifcpptestbase.h		secondary		7.4 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/productassertmethods.h		secondary		930 bytes	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/symbol.h		secondary		2.6 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/symbolprovider.h		secondary		456 bytes	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/testclassdeclaration.h		secondary		18.6 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/testmethods.h		secondary		3.2 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/unittestallocator.h		secondary		2 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/unittestapi.h		secondary		2.7 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/unittestbstrutilities.h		secondary		2.4 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/unittestclientextensions.h		secondary		609 bytes	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/unittestclienthook.h		secondary		511 bytes	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/unittestcollection.h		secondary		20.8 KB	May 28, 2014 5:21:09 PM
dev/otools/inc/motif/motifcpptest/unittestcontext.h		secondary		896 bytes	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/unittestconversion.h		secondary		4.5 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/unittestfilters.h		secondary		9.9 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/unittestmetadata.h		secondary		19 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/unittestmetadataitem.h		secondary		1.1 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/unittestmethodinfo.h		secondary		1.7 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/unittestsmarttypearray.h		secondary		1.2 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/unitteststack.h		secondary		2.2 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/unitteststring.h		secondary		6.4 KB	May 28, 2014 5:21:09 PM
dev/otools/inc/motif/motifcpptest/unitteststringlist.h		secondary		2.7 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/unitteststringmap.h		secondary		7.2 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/unittestsupportfileinfo.h		secondary		1.6 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/unittestsupportfileregister.h		secondary		4.3 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/windowsstackwalker.h		secondary		1.6 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/windowssymbollibrary.h		secondary		1.5 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/motif/motifcpptest/windowssymbolprovider.h		secondary		3.5 KB	May 28, 2014 5:01:19 PM
dev/otools/inc/mso/ActiveXDeserialization.h		secondary		6 KB	May 28, 2014 5:01:24 PM
dev/otools/inc/mso/CorrectionUI/CorrectionUI.fmdl.h		secondary		22 KB	May 28, 2014 5:01:24 PM
dev/otools/inc/mso/CorrectionUI/CorrectionUI.h		secondary		685 bytes	May 28, 2014 5:01:24 PM
dev/otools/inc/mso/CorrectionUI/CorrectionUIModel.h		secondary		787 bytes	May 28, 2014 5:01:24 PM
dev/otools/inc/mso/CredAPI.h		secondary		6.6 KB	May 28, 2014 5:01:24 PM
dev/otools/inc/mso/DefinitionsError.h		secondary		2.7 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/DefinitionsProvider.h		secondary		5.8 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/DictionaryPane.h		secondary		3.4 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/Docs/ControlUserFactory.h		secondary		1.3 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/Docs/DocumentInfoHelper.h		secondary		2.2 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/Docs/FM/BackstagePage.fmdl.h		secondary		20 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/Docs/FM/CreateFilePage.fmdl.h		secondary		19 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/Docs/FM/DocError.fmdl.h		secondary		17 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/Docs/FM/FileMenu.fmdl.h		secondary		31.2 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/Docs/FM/HistoryPane.fmdl.h		secondary		34.2 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/Docs/FM/LandingPage.fmdl.h		secondary		60.3 KB	May 28, 2014 5:21:10 PM
dev/otools/inc/mso/Docs/FM/Location.fmdl.h		secondary		34.7 KB	May 28, 2014 5:21:10 PM
dev/otools/inc/mso/Docs/FM/MsoSharingService.fmdl.h		secondary		85 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/Docs/FM/SyncStatusPane.fmdl.h		secondary		39.7 KB	May 28, 2014 5:21:10 PM
dev/otools/inc/mso/Docs/LandingPage.h		secondary		3.6 KB	May 28, 2014 5:21:10 PM
dev/otools/inc/mso/Docs/SyncStatusPane.h		secondary		4.5 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/Docs/msoAppDocs.h		secondary		35 KB	May 28, 2014 5:21:10 PM
dev/otools/inc/mso/Docs/msoAppDocsLogging.h		secondary		16.2 KB	May 28, 2014 5:21:10 PM
dev/otools/inc/mso/Docs/msoDocsInit.h		secondary		614 bytes	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/ExtendedTemplateDetailsSettings.h		secondary		1.6 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/FontPicker/FontPicker.h		secondary		7.4 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/MSOFSControlExtraStyleInfo.h		secondary		3.2 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/MsoAAPreview.h		secondary		21.1 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/MsoAccChecker.h		secondary		12 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/MsoCallout.h		secondary		10.7 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/MsoComWrap.h		secondary		2.7 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/MsoCommonControls.h		secondary		3.9 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/MsoCunk.h		secondary		3.7 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/MsoDevToolsUI.h		secondary		825 bytes	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/MsoDragDrop.h		secondary		2.3 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/MsoFontAndTextWrap.h		secondary		13.7 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/MsoIdle.h		secondary		25.5 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/MsoInsertMedia.h		secondary		6.1 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/MsoLegacyPref.h		secondary		4.5 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/MsoMultiMon.h		secondary		1.8 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/MsoNetConfig.h		secondary		893 bytes	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/MsoOfficeCenter.h		secondary		5.3 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/MsoOfficeCenterLanguage.h		secondary		495 bytes	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/MsoPluggableUI.h		secondary		12 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/MsoPrinterWrap.h		secondary		3.1 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/MsoPropsUser.h		secondary		1.1 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/MsoRecentDocs.h		secondary		782 bytes	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/MsoRoamingMru.h		secondary		2.7 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/MsoSqmDocLevelData.h		secondary		10.6 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/MsoSqmUI.h		secondary		1.7 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/MsoStatusBar.h		secondary		4.6 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/MsoStatusData.h		secondary		30.2 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/MsoSystem.h		secondary		1.4 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/MsoSystemPolicy.h		secondary		2.3 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/MsoTxl.h		secondary		5.8 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/MsoUnitTest.h		secondary		12.9 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/MsoUnitTestUtil.h		secondary		12.7 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/MsoUserSettings.h		secondary		3.4 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/MsoVisuals.h		secondary		18 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/MsoWindowTransition.h		secondary		3.5 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/MsoWindowWrap.h		secondary		1.9 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/MsoWrapSimple.h		secondary		4.7 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/OfficeHelp.h		secondary		11.5 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OfficeSpace/BaseCommandingUser.h		secondary		2 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OfficeSpace/BaseControlUser.h		secondary		5.7 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OfficeSpace/CommonControls.h		secondary		41.8 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OfficeSpace/DataSourceBaseCore.h		secondary		3.9 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OfficeSpace/DataSourceCore.h		secondary		6 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OfficeSpace/DataSourceProxy.h		secondary		6.3 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OfficeSpace/OfficeSpace.h		secondary		16.8 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OfficeSpace/OfficeSpace2.h		secondary		11.4 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OfficeSpace/OfficeSpaceBasic.h		secondary		7.1 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OfficeSpace/OfficeSpaceRoot.h		secondary		14.7 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OfficeSpace/OfficeSpaceUser.h		secondary		4.9 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OfficeSpace/winrt/ColorPickerUser.h		secondary		3 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OfficeSpace/winrt/Gallery.fmdl.h		secondary		95.1 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OfficeSpace/winrt/GalleryPathUtilities.h		secondary		3.1 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OfficeSpace/winrt/GalleryUser.h		secondary		10.1 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OfficeSpace/winrt/GalleryUser_DoNotUse.h		secondary		7.6 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OfficeSpace/winrt/VirtualizedGalleryUser.h		secondary		9.5 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OutSpace/DocInfo.h		secondary		21 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OutSpace/FinalizeSlabBase.h		secondary		2.4 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OutSpace/OutDocState.h		secondary		1.4 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OutSpace/OutSpace.h		secondary		53.5 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OutSpace/OutSpaceUser.h		secondary		2.3 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OutSpace/OutspaceManagement.h		secondary		819 bytes	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OutSpace/PlacesPicker.h		secondary		7.6 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OutSpace/PrepareForDistribution.h		secondary		5.5 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OutSpace/PrintDebug.h		secondary		1.9 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OutSpace/Saving.h		secondary		1.9 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/OutSpace/SharePlace.h		secondary		4.6 KB	May 28, 2014 5:01:30 PM
dev/otools/inc/mso/ProcessLifetimeManagement.h		secondary		1.1 KB	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/Programmability/VisualBasic/msovbe.h		secondary		905 bytes	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/ProofPane.h		secondary		3.3 KB	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/ProofingLanguageSelector/ProofingLanguageSelectorGallery.fmdl.h		secondary		20.2 KB	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/ProofingLanguageSelector/ProofingLanguageSelectorModel.h		secondary		480 bytes	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/ProofingLanguageSelector/proofinglanguageselector.h		secondary		714 bytes	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/SpyNamedPipeLoader.h		secondary		449 bytes	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/StealthUI.h		secondary		2.4 KB	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/appguids.h		secondary		6.4 KB	May 28, 2014 5:01:24 PM
dev/otools/inc/mso/barcodedescriptor.h		secondary		1 KB	May 28, 2014 5:01:24 PM
dev/otools/inc/mso/c2rWrapper.h		secondary		1 KB	May 28, 2014 5:01:24 PM
dev/otools/inc/mso/doNotUse/deadOmApi.h		secondary		286 bytes	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/doNotUse/msomxs_donotuse.h		secondary		2.8 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/docrecvr.h		secondary		22.4 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/document/events.h		secondary		520 bytes	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/dr/msoemuconstants.h		secondary		839 bytes	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/dr/msoscconstants.h		secondary		331 bytes	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/dr/msotmcconstants.h		secondary		16.9 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/dr/msoutconstants.h		secondary		1.5 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/drdrag.h		secondary		3.5 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/drm/drm_shared.h		secondary		27.3 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/drm/drm_win32.h		secondary		14.2 KB	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/drm/drm_winrt.h		secondary		382 bytes	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/drm/drmui_winrt.h		secondary		459 bytes	May 28, 2014 5:01:25 PM
dev/otools/inc/mso/drmui/MessageBarHelper.h		secondary		275 bytes	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/emact.h		secondary		9.9 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/emkwd.h		secondary		11.1 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/emrule.h		secondary		44.7 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/emrulini.h		secondary		3.5 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/emrultk.h		secondary		3.7 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/emutil.h		secondary		2.1 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/fixedformatext.h		secondary		23.1 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/gkmso.h		secondary		9.3 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/imeshare.h		secondary		11.4 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/ipfax.h		secondary		3.7 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/lzbmp.h		secondary		1.3 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/memory/customHeap.h		secondary		6.7 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/memory/debugHeapUtils.h		secondary		1 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/memory/doNotUsePpv.h		secondary		627 bytes	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/memory/iMsoMalloc.h		secondary		1.4 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/memory/legacyApi.h		secondary		3.1 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/memory/legacyOperatorNew.h		secondary		3 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/memory/oleSpyCheck.h		secondary		715 bytes	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/memory/sharedMemory.h		secondary		625 bytes	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/metroconv.h		secondary		4.6 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/mosh/AirSpaceCanvas.h		secondary		809 bytes	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/mosh/Boot_winrt.h		secondary		338 bytes	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/mosh/FloatieHost.h		secondary		6.4 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/mosh/MoxApplicationFocus.h		secondary		6 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/mosh/MoxCommanding.h		secondary		10.1 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/mosh/MoxDialogs.h		secondary		15.6 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/mosh/MoxProgress.h		secondary		6.9 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/mosh/MoxWindowManager.h		secondary		22.3 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/mso.h		secondary		4.2 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msoAARender.h		secondary		7.6 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msoAligners.h		secondary		16.1 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msoAllocStack.h		secondary		1.7 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msoAssertTimers.h		secondary		4.5 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msoColorGlobals.h		secondary		5.7 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msoCrypt.h		secondary		11.6 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoCrypto.h		secondary		2.7 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoFileBlock.h		secondary		4.3 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoFileBlockEnum.h		secondary		3.1 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoFileFormatFBD.h		secondary		1.5 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoGdiExt.h		secondary		2.7 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoGraphics.h		secondary		3.7 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoNotebook.h		secondary		4.6 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msoOfficeStart.h		secondary		3.7 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msoPgSizes.h		secondary		49.5 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msoSimpleOffline.h		secondary		1.5 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/mso_win32.h		secondary		1.2 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/mso_winpc.h		secondary		668 bytes	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msoac.h		secondary		12.3 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msoacb.h		secondary		13.7 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msoacetate.h		secondary		6.7 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msoasync.h		secondary		2.2 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msoauf.h		secondary		3 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msoav.h		secondary		3.4 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msoaws.h		secondary		21.1 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msobarcode.h		secondary		1.5 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msoblog.h		secondary		7.2 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msobroadcast.h		secondary		14.4 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msobroadcastitem.h		secondary		1 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msobusbar.h		secondary		11.7 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msocat.h		secondary		800 bytes	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msocbvcr.h		secondary		361 bytes	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msocbvisuals.h		secondary		9.3 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msocd.h		secondary		6.3 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msoceo.h		secondary		6.1 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msocfacb.h		secondary		4.6 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msoci.h		secondary		52.4 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msoclr.h		secondary		1.8 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msocm.h		secondary		4.2 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msocolor.h		secondary		1.8 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msocolorgallery.h		secondary		16.6 KB	May 28, 2014 5:01:26 PM
dev/otools/inc/mso/msocompose.h		secondary		2.8 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoconverter.h		secondary		621 bytes	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msocryptoUI.h		secondary		1.2 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msocsafe.h		secondary		1.6 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoctxui.h		secondary		15.9 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodal.h		secondary		110.6 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodata.h		secondary		6.7 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodatafeed.h		secondary		541 bytes	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodc.h		secondary		39.9 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodelayload.h		secondary		9.1 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodge.h		secondary		64.4 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodig.h		secondary		73.4 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodiguidefs.h		secondary		4 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodisplaymanager.h		secondary		65.3 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodlcWorkflow.h		secondary		4.1 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodlccico.h		secondary		6 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodlcct.h		secondary		11.6 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodlcimp.h		secondary		927 bytes	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodlcmeta.h		secondary		14.4 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodlcpolicy.h		secondary		2.6 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodls.h		secondary		11.6 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodm.h		secondary		154.7 KB	May 28, 2014 5:21:10 PM
dev/otools/inc/mso/msodm2.h		secondary		1.9 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodocenc.h		secondary		13.4 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodocinsp.h		secondary		2.8 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodocperf.h		secondary		4.4 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodr.h		secondary		681.2 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodss.h		secondary		4.4 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodw.h		secondary		29.9 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msodws.h		secondary		539 bytes	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoecmtax.h		secondary		505 bytes	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoem.h		secondary		7.2 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoemtyp.h		secondary		2.9 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoerr.h		secondary		53.1 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoesche.h		secondary		182.4 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msofc.h		secondary		15.6 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msofdpic.h		secondary		17.2 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoflexids.h		secondary		9.4 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoflink.h		secondary		9 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoflyoutmanager.h		secondary		10.9 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msofnsdl.h		secondary		21.1 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msofuflags.h		secondary		1006 bytes	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msogallery.h		secondary		42.6 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msogel.h		secondary		116.5 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msogels.h		secondary		17.6 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoguids.h		secondary		56.7 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msohelp.h		secondary		674 bytes	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msohl.h		secondary		67 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msohlink.h		secondary		13.1 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msohpal.h		secondary		8.8 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoidn.h		secondary		3 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoim.h		secondary		76.1 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoime.h		secondary		9.3 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoinit.h		secondary		3.6 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoink.h		secondary		18.8 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msointl.h		secondary		20.9 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msoippp.h		secondary		551 bytes	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msokbx.h		secondary		2.1 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msolbox.h		secondary		20.7 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msolic.h		secondary		17.2 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msomanageddoccustom.h		secondary		3.4 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msomanifest.h		secondary		9.2 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msomath.h		secondary		9.6 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msomathui.h		secondary		9.6 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msomd.h		secondary		2 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msomet.h		secondary		2.4 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msomodal.h		secondary		720 bytes	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msomru.h		secondary		35.4 KB	May 28, 2014 5:01:27 PM
dev/otools/inc/mso/msomsaa.h		secondary		3.9 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msomsax.h		secondary		7.1 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msomsxml.h		secondary		37.3 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msomultilang.h		secondary		1.8 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msomxs.h		secondary		11.7 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msomxsi.h		secondary		14.5 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msomxsl.h		secondary		3.4 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msomxslo.h		secondary		1.4 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msonewdl.h		secondary		15.9 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msonotes.h		secondary		8.5 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msonpane.h		secondary		2.9 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msonui.h		secondary		2.8 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msonuidlg.h		secondary		15.7 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msonuirespub.h		secondary		1.3 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msooch.h		secondary		6 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msoocptk.h		secondary		3.5 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msoocx.h		secondary		3.9 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msoodc.h		secondary		954 bytes	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msoodso.h		secondary		62.8 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msoodttf.h		secondary		2.2 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msoooui.h		secondary		22 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msooptimer.h		secondary		4.7 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msopdf.h		secondary		31.8 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msoph.h		secondary		8.1 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msophid.h		secondary		302 bytes	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msopickerdialog.h		secondary		26.7 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msopkmcl.h		secondary		9.7 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msoplybk.h		secondary		2.4 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msopm.h		secondary		46.8 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msopmmetrosig.h		secondary		3.4 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msopmocx.h		secondary		6.8 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msopmsig.h		secondary		1.3 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msopolicylabel.h		secondary		5.4 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msopost.h		secondary		5.5 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msoprfld.h		secondary		13.8 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msoprops.h		secondary		78.3 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msoptk.h		secondary		22.1 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msopwdVerify.h		secondary		12 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msoref.h		secondary		7.4 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msoreffrmwrk.h		secondary		37.6 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msoreftransmgr.h		secondary		1.7 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msores.h		secondary		5.1 KB	May 28, 2014 5:01:28 PM
dev/otools/inc/mso/msoresb.h		secondary		1.1 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msoresil.h		secondary		4 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msosawp.h		secondary		476 bytes	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msoscreentip.h		secondary		2.8 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msoscrollbar.h		secondary		5.6 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msoscrub.h		secondary		3.9 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msosdal.h		secondary		19.6 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msosdm.h		secondary		46.1 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msoslb.h		secondary		2.9 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msosmartdoc.h		secondary		12.4 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msosmtagui.h		secondary		4.1 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msosound.h		secondary		2.4 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msosplash.h		secondary		10 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msosproc.h		secondary		20.6 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msosqm.h		secondary		27 KB	May 28, 2014 5:21:10 PM
dev/otools/inc/mso/msosqmutil.h		secondary		4.7 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msosrc.h		secondary		6.4 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msosrh.h		secondary		23.4 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msosrver.h		secondary		9.7 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msostab.h		secondary		2.3 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msostmpl.h		secondary		6.7 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msostr.h		secondary		3.7 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msosupertip.h		secondary		7.9 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msosupertipdefs.h		secondary		6.6 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msosv.h		secondary		1.6 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msoswct.h		secondary		9 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msosym.h		secondary		8.7 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msotask.h		secondary		23.8 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msotb.h		secondary		283 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msotbar.h		secondary		877 bytes	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msotcid.h		secondary		3.2 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msotheme.h		secondary		6.6 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msotip.h		secondary		3.5 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msotlc.h		secondary		6.4 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msotrust.h		secondary		49.6 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msotrustenum.h		secondary		5.7 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msotts.h		secondary		796 bytes	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msotypelibversion.h		secondary		305 bytes	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msoui.h		secondary		3.3 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msouls.h		secondary		2.8 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msounicd.h		secondary		9.6 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msousp.h		secondary		37.5 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msowarn.h		secondary		874 bytes	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msowc.h		secondary		51.2 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msowg.h		secondary		4.9 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msowopt.h		secondary		15.4 KB	May 28, 2014 5:21:10 PM
dev/otools/inc/mso/msowt.h		secondary		11.8 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msoxml.h		secondary		40.6 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/msoxmlerr.h		secondary		5 KB	May 28, 2014 5:01:29 PM
dev/otools/inc/mso/pcxshared.h		secondary		1.5 KB	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/pickerdialog.h		secondary		970 bytes	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/spellingcontrol/SpellingControl.fmdl.h		secondary		24.1 KB	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/spellingcontrol/SpellingControlModel.h		secondary		992 bytes	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/spellingcontrol/notificationsManager.h		secondary		644 bytes	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/spellingcontrol/spellingcontrol.h		secondary		3 KB	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/spincontrol/IMsoSpinControl.h		secondary		1.6 KB	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/sqmdata.h		secondary		1.2 MB	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/stemkor.h		secondary		6.5 KB	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/telemetry/legacyFlatApi.h		secondary		6.1 KB	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/telemetry/telemetryApi.h		secondary		4.9 KB	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/telemetry/telemetryevent.h		secondary		7.8 KB	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/thammer.h		secondary		16.5 KB	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/ui/msoSideBySideDialog.h		secondary		901 bytes	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/wordMorphology.h		secondary		1.6 KB	May 28, 2014 5:01:31 PM
dev/otools/inc/mso/xsdlib.h		secondary		16.9 KB	May 28, 2014 5:01:31 PM
dev/otools/inc/msoserver/msoserver.h		secondary		6.7 KB	May 28, 2014 5:01:33 PM
dev/otools/inc/msoserver/msoserverloglevels.h		secondary		312 bytes	May 28, 2014 5:01:33 PM
dev/otools/inc/netui/MsoTextStyles.h		secondary		4.3 KB	May 28, 2014 5:01:37 PM
dev/otools/inc/netui/NUIBaseValue.h		secondary		4.9 KB	May 28, 2014 5:01:37 PM
dev/otools/inc/netui/NUICommand.h		secondary		16.1 KB	May 28, 2014 5:01:37 PM
dev/otools/inc/netui/NUICommandEnums.h		secondary		3.8 KB	May 28, 2014 5:01:37 PM
dev/otools/inc/netui/NUICtxUIMgr.h		secondary		10.3 KB	May 28, 2014 5:01:37 PM
dev/otools/inc/netui/NUIListenerArray.h		secondary		13.4 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIScrollableViewer.h		secondary		6.4 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUISimpleButton.h		secondary		4.5 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUISmartBitmap.h		secondary		10.8 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUISmartBitmapTable.h		secondary		1 MB	May 28, 2014 5:21:12 PM
dev/otools/inc/netui/NUIaccessibility.h		secondary		8.6 KB	May 28, 2014 5:01:37 PM
dev/otools/inc/netui/NUIalloc.h		secondary		6.4 KB	May 28, 2014 5:01:37 PM
dev/otools/inc/netui/NUIbtreelookup.h		secondary		18.2 KB	May 28, 2014 5:01:37 PM
dev/otools/inc/netui/NUIconvert.h		secondary		6.2 KB	May 28, 2014 5:01:37 PM
dev/otools/inc/netui/NUIdynamicarray.h		secondary		27.7 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIelement.h		secondary		110.9 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIerror.h		secondary		2.6 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIevent.h		secondary		9.9 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIhost.h		secondary		23.6 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIhwndhost.h		secondary		15.7 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIlabel.h		secondary		2.4 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIline.h		secondary		1.3 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIlistcontrol.h		secondary		9 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUImacros.h		secondary		28.4 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUInative.h		secondary		4.7 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUInode.h		secondary		93.3 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIprogress.h		secondary		3.4 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIrichedit.h		secondary		10.8 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIscrollbar.h		secondary		6.5 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIscrollviewer.h		secondary		6.4 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIsheet.h		secondary		3.5 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIsurface.h		secondary		1.7 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIuidgen.h		secondary		1 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIvalue.h		secondary		67.4 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIvectorshape.h		secondary		846 bytes	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIviewer.h		secondary		2.4 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NUIxmlmacro.h		secondary		25.7 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/NetUICore.h		secondary		34.8 KB	May 28, 2014 5:01:37 PM
dev/otools/inc/netui/NetUIEngine.h		secondary		1.4 KB	May 28, 2014 5:01:37 PM
dev/otools/inc/netui/NetUIError.h		secondary		4.9 KB	May 28, 2014 5:01:37 PM
dev/otools/inc/netui/NetUIMotion.h		secondary		4.4 KB	May 28, 2014 5:01:37 PM
dev/otools/inc/netui/NetUIUtil.h		secondary		656 bytes	May 28, 2014 5:01:37 PM
dev/otools/inc/netui/NetUiHandles.h		secondary		377 bytes	May 28, 2014 5:01:37 PM
dev/otools/inc/netui/PointerModes.h		secondary		8.5 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/nuiDefinedIDs.h		secondary		40.3 KB	May 28, 2014 5:01:37 PM
dev/otools/inc/netui/nuiclient.h		secondary		2.7 KB	May 28, 2014 5:01:37 PM
dev/otools/inc/netui/nuidocument.h		secondary		14.3 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/nuiocx.h		secondary		6.6 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/nuiproxybutton.h		secondary		1.7 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/nuispointercore.h		secondary		8.4 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/nuistd.h		secondary		1.2 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/nuitexthelpers.h		secondary		3 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/nuitreenode.h		secondary		2.2 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/netui/nuivisuals.h		secondary		16.9 KB	May 28, 2014 5:01:38 PM
dev/otools/inc/nlg/ForgottenAttachmentDetector.h		secondary		3.4 KB	May 28, 2014 5:01:40 PM
dev/otools/inc/nlg/ILoadResources.h		secondary		10.6 KB	May 28, 2014 5:01:40 PM
dev/otools/inc/nlg/iproof.h		secondary		56 KB	May 28, 2014 5:01:40 PM
dev/otools/inc/oart/ChartCommand.h		secondary		5.3 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/compate2o_gen.h		secondary		1.3 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/inkml_gen.h		secondary		91.1 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oart14cameratool_gen.h		secondary		1.2 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oart14compatext_gen.h		secondary		1.1 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oart14docprop_gen.h		secondary		4.3 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oart14gvml_gen.h		secondary		4.1 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oart14spproperties_gen.h		secondary		1.3 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oart15NonVisualGroupProps_gen.h		secondary		1.3 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oart15background_gen.h		secondary		1.4 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oart15basetypes_gen.h		secondary		1.2 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oart15objectpr_gen.h		secondary		1.4 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oart15signatureline_gen.h		secondary		2.1 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oart15themevariant_gen.h		secondary		4.8 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oart16DrawingElementExtensions_gen.h		secondary		2.9 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oartaudiovideo_gen.h		secondary		11.4 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oartbasestylesheet_gen.h		secondary		13.5 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oartbasestylesheetext_gen.h		secondary		3 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oartbasetypes_gen.h		secondary		92.6 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oartdocprop_gen.h		secondary		20.3 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oartdownrev_gen.h		secondary		11.7 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oarte2oanim_gen.h		secondary		18.1 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oarte2oformat_gen.h		secondary		25.9 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oartgvml_gen.h		secondary		27.8 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oartimgdata_gen.h		secondary		1.3 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oartmoniker_gen.h		secondary		7.8 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oartphoto_gen.h		secondary		82.5 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oartsp3dcamera_gen.h		secondary		6.9 KB	May 28, 2014 5:01:47 PM
dev/otools/inc/oart/gen/oartsp3dlight_gen.h		secondary		3.9 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/oartsp3dscene_gen.h		secondary		1.9 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/oartsp3dsceneplane_gen.h		secondary		1.8 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/oartsp3dstyles_gen.h		secondary		12.2 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/oartspeffects_gen.h		secondary		336.4 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/oartspgeometry_gen.h		secondary		52.5 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/oartsplineproperties_gen.h		secondary		116 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/oartspmisc_gen.h		secondary		690 bytes	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/oartspproperties_gen.h		secondary		112.2 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/oartspstyle_gen.h		secondary		4 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/oartstyledefaults_gen.h		secondary		2.9 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/oartstylesheet_gen.h		secondary		13.7 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/oarttable15projectdataquery_gen.h		secondary		8.5 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/oarttable_gen.h		secondary		54.1 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/oarttablestyle_gen.h		secondary		51.4 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/oarttblcmdchanges_gen.h		secondary		2.2 KB	May 28, 2014 5:21:13 PM
dev/otools/inc/oart/gen/oarttx_gen.h		secondary		81 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/oarttxbullet_gen.h		secondary		36.5 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/oarttxchar_gen.h		secondary		100.4 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/oarttxpara_gen.h		secondary		78.2 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_elems_dr3d_fwd_gen.h		secondary		543 bytes	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_elems_office_fwd_gen.h		secondary		570 bytes	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_elems_smil_fwd_gen.h		secondary		527 bytes	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_elems_style_fwd_gen.h		secondary		1.1 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_elems_svg_fwd_gen.h		secondary		1.6 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_elems_text_fwd_gen.h		secondary		905 bytes	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_elems_text_gen.h		secondary		4.4 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_elems_xlink_fwd_gen.h		secondary		612 bytes	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_groups_draw_fwd_gen.h		secondary		803 bytes	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_groups_draw_gen.h		secondary		26.7 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_groups_office_gen.h		secondary		18.1 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_groups_presentation_gen.h		secondary		15.1 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_groups_style_fwd_gen.h		secondary		2 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_groups_style_gen.h		secondary		22.8 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_groups_text_fwd_gen.h		secondary		1 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_groups_text_gen.h		secondary		36.1 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_sharedtypes_draw_fwd_gen.h		secondary		824 bytes	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_sharedtypes_draw_gen.h		secondary		20 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_sharedtypes_office_fwd_gen.h		secondary		4.1 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_sharedtypes_office_gen.h		secondary		11.5 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_sharedtypes_officeevent_gen.h		secondary		6.1 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_sharedtypes_presentationevent_fwd_gen.h		secondary		694 bytes	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_sharedtypes_presentationevent_gen.h		secondary		7.8 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_sharedtypes_style_fwd_gen.h		secondary		7.6 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_sharedtypes_style_gen.h		secondary		2.7 MB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_sharedtypes_table_fwd_gen.h		secondary		951 bytes	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_sharedtypes_table_gen.h		secondary		3.6 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_sharedtypes_text_gen.h		secondary		3.1 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_anim_fwd_gen.h		secondary		974 bytes	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_anim_gen.h		secondary		41.3 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_chart_fwd_gen.h		secondary		1.1 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_chart_gen.h		secondary		8.5 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_dr3d_fwd_gen.h		secondary		1 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_dr3d_gen.h		secondary		21.8 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_draw_fwd_gen.h		secondary		3.8 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_draw_gen.h		secondary		93 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_drawcomplex_fwd_gen.h		secondary		780 bytes	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_drawcomplex_gen.h		secondary		37.7 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_fo_fwd_gen.h		secondary		3.8 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_fo_gen.h		secondary		5 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_number_fwd_gen.h		secondary		1.3 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_number_gen.h		secondary		91.6 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_office_gen.h		secondary		10.7 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_officecomplex_gen.h		secondary		64.1 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_presentation_fwd_gen.h		secondary		1.2 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_presentation_gen.h		secondary		34.7 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_script_gen.h		secondary		1.8 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_smil_fwd_gen.h		secondary		962 bytes	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_style_gen.h		secondary		8.1 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_stylecomplex_gen.h		secondary		94 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_svg_fwd_gen.h		secondary		3.5 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_svg_gen.h		secondary		18.4 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_table_gen.h		secondary		52.2 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_text_fwd_gen.h		secondary		1.9 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_text_gen.h		secondary		54.6 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_textcomplex_fwd_gen.h		secondary		846 bytes	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_textcomplex_gen.h		secondary		6.5 KB	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/odf_types_xlink_fwd_gen.h		secondary		524 bytes	May 28, 2014 5:01:48 PM
dev/otools/inc/oart/gen/visiostyletypes_gen.h		secondary		15.5 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/gen/wdoart15_gen.h		secondary		1.4 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/inkdata.h		secondary		44.4 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/msink.h		secondary		1.3 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartBasicButtonDialog.h		secondary		6.3 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartDataVizCallout.h		secondary		13.8 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartDrCutCopyDelete.h		secondary		6 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartDrTracker.h		secondary		6.9 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartDrUtils.h		secondary		1.3 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartE2oGvmlConversion.h		secondary		4.3 KB	May 28, 2014 5:21:14 PM
dev/otools/inc/oart/oartE2oHelper.h		secondary		1.7 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartEditPointsHelpers.h		secondary		4.8 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartInkUtils.h		secondary		4.4 KB	May 28, 2014 5:21:14 PM
dev/otools/inc/oart/oartLaunchCentral.h		secondary		18.1 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartSpy.h		secondary		13.3 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartTimerTask.h		secondary		3 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartWordArtGalleryControlUser.h		secondary		4.7 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/oartacccheck.h		secondary		3.7 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartairspace.h		secondary		15.6 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartanimation.h		secondary		22.1 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartapphost.h		secondary		23.3 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartbase.h		secondary		4.5 KB	May 28, 2014 5:21:14 PM
dev/otools/inc/oart/oartcompate2o.h		secondary		83.5 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartcontentpart.h		secondary		6.5 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartcontroluser.h		secondary		9.9 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oarte2o.h		secondary		11.9 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oarte2olink.h		secondary		4.3 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartfwd.h		secondary		17.1 KB	May 28, 2014 5:21:14 PM
dev/otools/inc/oart/oartinkcontentpart.h		secondary		1.7 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartlce2o.h		secondary		11.2 KB	May 28, 2014 5:21:14 PM
dev/otools/inc/oart/oartmetro.h		secondary		12.7 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oarto12helper.h		secondary		11.7 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartobjmodel.h		secondary		35.3 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartodf.h		secondary		6.3 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartodfshared.h		secondary		1.5 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartodftypeinfo.h		secondary		46.3 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartpicturecommandhelper.h		secondary		1.5 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oartshapebuildertools.h		secondary		18.1 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oarttable.h		secondary		39.1 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oarttheme.h		secondary		43.9 KB	May 28, 2014 5:01:49 PM
dev/otools/inc/oart/oarttypeinfo.h		secondary		54.1 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/oartui.h		secondary		43.6 KB	May 28, 2014 5:21:14 PM
dev/otools/inc/oart/oartvariant.h		secondary		10.4 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/ProjectDataQuery.h		secondary		15.6 KB	May 28, 2014 5:01:52 PM
dev/otools/inc/oart/private/compat.h		secondary		36.7 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/compatstg.h		secondary		2.3 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/datasink.h		secondary		2.3 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/datasourcekeeper.h		secondary		1.5 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/oart14docprop.h		secondary		5.5 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/oart14shadowobscured.h		secondary		1.3 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/oart15themevariant.h		secondary		3.8 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/oart15webvideopr.h		secondary		2.5 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/oartColorGalleryBase.h		secondary		5.9 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/oartUIM.h		secondary		6.1 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartasyncdownload.h		secondary		5.9 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/oartautoshape.h		secondary		17.7 KB	May 28, 2014 5:21:14 PM
dev/otools/inc/oart/private/oartbasestylesheet.h		secondary		21.8 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/oartbasetypes.h		secondary		122.6 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/oartblob.h		secondary		34.7 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/oartcolorgallery.h		secondary		11.6 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/oartcommand.h		secondary		24.4 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/oartcommanddata3d.h		secondary		39.5 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/oartcursor.h		secondary		4.8 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/oartcutcopy.h		secondary		43.1 KB	May 28, 2014 5:21:14 PM
dev/otools/inc/oart/private/oartdialogs.h		secondary		30.5 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/oartdocprop.h		secondary		35.1 KB	May 28, 2014 5:01:50 PM
dev/otools/inc/oart/private/oartdrawingduos.h		secondary		170.8 KB	May 28, 2014 5:21:15 PM
dev/otools/inc/oart/private/oartdrawinge2o.h		secondary		91.4 KB	May 28, 2014 5:21:15 PM
dev/otools/inc/oart/private/oartdrawinge2otest.h		secondary		10.4 KB	May 28, 2014 5:21:15 PM
dev/otools/inc/oart/private/oartdrawingeditor.h		secondary		25.4 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartdrawingnodes.h		secondary		174.9 KB	May 28, 2014 5:21:15 PM
dev/otools/inc/oart/private/oartdrawingsel.h		secondary		40.8 KB	May 28, 2014 5:21:15 PM
dev/otools/inc/oart/private/oartdrcommon.h		secondary		4.4 KB	May 28, 2014 5:21:15 PM
dev/otools/inc/oart/private/oarte2oanim.h		secondary		24.2 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarte2oformat.h		secondary		3.7 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarte2ohost.h		secondary		35.2 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarte2oload.h		secondary		54.3 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarte2oundo.h		secondary		21.6 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarte2oview.h		secondary		10.5 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarteditor.h		secondary		19.4 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarteditpoints.h		secondary		13.3 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartevents.h		secondary		7.2 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartexport.h		secondary		6 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartformatpainter.h		secondary		9.3 KB	May 28, 2014 5:21:15 PM
dev/otools/inc/oart/private/oartgeltrans.h		secondary		30.8 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartgvl.h		secondary		119.8 KB	May 28, 2014 5:21:15 PM
dev/otools/inc/oart/private/oartgvml.h		secondary		22.1 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartgvmlcontentpart.h		secondary		3.9 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartgvmlink14.h		secondary		1.3 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartimagehostinge2o.h		secondary		10.1 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartimeeditor.h		secondary		6.2 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartimgdata.h		secondary		8.3 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartinfocmd.h		secondary		51.5 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartinitfini.h		secondary		2.6 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartink.h		secondary		50 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartinsertscreenshot.h		secondary		1.5 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartkinsoku.h		secondary		9 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartmousetracker.h		secondary		42.7 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartodfGraphicBuilder.h		secondary		13.1 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartodfbasetypes.h		secondary		28.7 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartodfdocumentcontext.h		secondary		30 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartodffuncs.h		secondary		17.1 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartodfpropsets.h		secondary		2.2 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartodfshapes.h		secondary		4.2 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartodfstylemanager.h		secondary		7.1 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartodfstyles.h		secondary		8.2 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartodftext.h		secondary		2.1 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartomshape.h		secondary		12.7 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartomshapes.h		secondary		7.5 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartpicturecommand.h		secondary		45.2 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartpictureduos.h		secondary		3.5 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartpicturee2o.h		secondary		2.1 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartpicturemasking.h		secondary		11.1 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartpicturemaskinghelper.h		secondary		17.8 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartpropcmd.h		secondary		12.2 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartpropcmd3d.h		secondary		13.1 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartpropdirectcmd.h		secondary		12.6 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartpropsel.h		secondary		58.6 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartpubheadertop.h		secondary		1.5 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartresourceids.h		secondary		41.2 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartschemegallery.h		secondary		45.6 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartseladapt.h		secondary		6.4 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartselection.h		secondary		43.5 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartselectionBase.h		secondary		4.3 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartselectionhandle.h		secondary		21.2 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartselectionpane.h		secondary		7.8 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartsp.h		secondary		51.5 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartsp3dcamera.h		secondary		4.6 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartsp3dlight.h		secondary		3.4 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartsp3dscene.h		secondary		2 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartsp3dsceneplane.h		secondary		2 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartsp3dstyles.h		secondary		6.1 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartspblip.h		secondary		27.2 KB	May 28, 2014 5:21:15 PM
dev/otools/inc/oart/private/oartspeffects.h		secondary		75.2 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartspgeombase.h		secondary		16.4 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartspgeometry.h		secondary		72 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartsplineproperties.h		secondary		13.1 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartspproperties.h		secondary		5.9 KB	May 28, 2014 5:21:15 PM
dev/otools/inc/oart/private/oartsppropmerge.h		secondary		9.2 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartspstyle.h		secondary		6.1 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartstyledefaults.h		secondary		3.7 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartstyler.h		secondary		32.9 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartstylesheet.h		secondary		16.3 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartstylestore.h		secondary		13.7 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarttablestyle.h		secondary		9 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarttbl.h		secondary		60.5 KB	May 28, 2014 5:21:15 PM
dev/otools/inc/oart/private/oarttx.h		secondary		17.3 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarttxbody.h		secondary		60 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarttxbullet.h		secondary		12.7 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarttxchar.h		secondary		30.2 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarttxcharspec.h		secondary		5.7 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarttxcommand.h		secondary		58.8 KB	May 28, 2014 5:21:15 PM
dev/otools/inc/oart/private/oarttxeditor.h		secondary		24.6 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarttxframe.h		secondary		21.2 KB	May 28, 2014 5:21:15 PM
dev/otools/inc/oart/private/oarttxime.h		secondary		3.3 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarttxlayout.h		secondary		44.6 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarttxmath.h		secondary		2.8 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarttxooui.h		secondary		17.2 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarttxpara.h		secondary		17.7 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarttxparaspec.h		secondary		2.2 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarttxrun.h		secondary		2.3 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarttxsmarttag.h		secondary		2.1 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarttxspec.h		secondary		1.5 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oarttxspell.h		secondary		6 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartunkxml.h		secondary		8.9 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartversion.h		secondary		3.1 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartviewelement.h		secondary		91.8 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/oartviewmask.h		secondary		7.9 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/omenumvariant.h		secondary		4.3 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/omutil.h		secondary		30 KB	May 28, 2014 5:01:51 PM
dev/otools/inc/oart/private/touch.h		secondary		3 KB	May 28, 2014 5:21:15 PM
dev/otools/inc/oart/private/trust.h		secondary		6.7 KB	May 28, 2014 5:01:52 PM
dev/otools/inc/oart/private/visiobasestylesheet.h		secondary		19.6 KB	May 28, 2014 5:01:52 PM
dev/otools/inc/oartxaml/OartXaml.h		secondary		454 bytes	May 28, 2014 5:01:52 PM
dev/otools/inc/oartxaml/OartXamlApi.h		secondary		523 bytes	May 28, 2014 5:01:52 PM
dev/otools/inc/ocfx/OFormat.h		secondary		19.5 KB	May 28, 2014 5:01:53 PM
dev/otools/inc/ofc/cmd/ofccmd.h		secondary		44.3 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofccom.h		secondary		15.5 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofccopywhat.h		secondary		10.1 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofccpp.h		secondary		3.5 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcdel.h		secondary		2 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcex.h		secondary		1.8 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofchierarchy.h		secondary		5.9 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcio.h		secondary		134.1 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcioimpl.h		secondary		77.9 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcninch.h		secondary		16.8 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcobserver.h		secondary		14.7 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcowningptr.h		secondary		26.6 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcpropset.h		secondary		29.2 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcpropsetimpl.h		secondary		51.5 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcrefcount.h		secondary		11.3 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcsharedptr.h		secondary		14.3 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcsharedptrimpl.h		secondary		11.8 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcsubjectobserver.h		secondary		8.1 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofctree.h		secondary		24.2 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofctypelist.h		secondary		15.6 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofctypelistdefs.h		secondary		929.6 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofctypelistimpl.h		secondary		28.3 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcuniqueid.h		secondary		4 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcvariant.h		secondary		7.3 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcvariantimpl.h		secondary		17 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcweakptr.h		secondary		16 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcxsd.h		secondary		54 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ex/ofcxsdimpl.h		secondary		20.7 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofc.h		secondary		4.2 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofcanystg.h		secondary		8.9 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofcanystgimpl.h		secondary		32.6 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofcbase.h		secondary		42.1 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofccoll.h		secondary		175.5 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofccollimpl.h		secondary		47.3 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofcexc.h		secondary		29.7 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofcfile.h		secondary		11.4 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofcgdi.h		secondary		23.2 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofcgeometry.h		secondary		25.8 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofcmd4.h		secondary		2.3 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofcmem.h		secondary		12.1 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofcrscowner.h		secondary		83.7 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofcrtti.h		secondary		5.3 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofcrttibase.h		secondary		10.6 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofcsingleton.h		secondary		4 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofcstr.h		secondary		76.5 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofcthread.h		secondary		20.7 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofctransact.h		secondary		10.2 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofctransactbase.h		secondary		10.3 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/ofc/ofctypehelper.h		secondary		18.4 KB	May 28, 2014 5:01:55 PM
dev/otools/inc/oleo/IOleo.h		secondary		5.5 KB	May 28, 2014 5:01:57 PM
dev/otools/inc/oleo/msooleo.h		secondary		11.4 KB	May 28, 2014 5:01:57 PM
dev/otools/inc/oleo/oleo.h		secondary		24.1 KB	May 28, 2014 5:01:57 PM
dev/otools/inc/olk/IPolicyNudgeMessageBodyReader.h		secondary		2 KB	May 28, 2014 5:01:57 PM
dev/otools/inc/olk/IPolicyNudgeTaskFactory.h		secondary		18.8 KB	May 28, 2014 5:01:57 PM
dev/otools/inc/olk/IPolicyNudges.h		secondary		6 KB	May 28, 2014 5:01:57 PM
dev/otools/inc/olk/olkEdit.h		secondary		19 KB	May 28, 2014 5:01:57 PM
dev/otools/inc/olk/omapidefs.h		secondary		73.8 KB	May 28, 2014 5:01:57 PM
dev/otools/inc/osfclient/IOEMServiceProvider.h		secondary		3.3 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/IOEMServiceProviderHandler.h		secondary		3.9 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/IOsfBase.h		secondary		1 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/IOsfControlErrorCallback.h		secondary		939 bytes	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/IOsfDisplayHost.h		secondary		3.4 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/IOsfInstance.h		secondary		1.1 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/IOsfRefreshCallback.h		secondary		836 bytes	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/IOsfSolutionReference.h		secondary		3 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/IOsfSolutionSummary.h		secondary		2.9 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/OemExternalTypes.h		secondary		3.1 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/OfficeExtensionManagerTypes.h		secondary		2 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/OsfControlLoadMethod.h		secondary		558 bytes	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/OsfErrorCodes_public.h		secondary		5.8 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/OsfSolutionTypes.h		secondary		3.2 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/OsfWinMessages.h		secondary		1.2 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/appversion.h		secondary		4.5 KB	May 28, 2014 5:02:15 PM
dev/otools/inc/osfclient/hostintegrationmanager.h		secondary		5.8 KB	May 28, 2014 5:02:15 PM
dev/otools/inc/osfclient/iosfcontrolcontainerreference.h		secondary		544 bytes	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/iwebextensioncollection.h		secondary		608 bytes	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/officesolutionframework.h		secondary		15.8 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/officesolutionframeworkhost.h		secondary		8.8 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/osfcontrolcontainer.h		secondary		5.1 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/osfcontroltype.h		secondary		2.4 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/osfdef.h		secondary		515 bytes	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/osfdocumentmode.h		secondary		2.4 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/osfhelperexports.h		secondary		3 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/osfhost.h		secondary		2.6 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/osfhosteventdata.h		secondary		3.8 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/osfstorage/OsfExtensionPersistence.h		secondary		12.9 KB	May 28, 2014 5:21:17 PM
dev/otools/inc/osfclient/osfstorage/bindingstatus.h		secondary		2.4 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/osfstorage/osfbindingtype.h		secondary		1.8 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/osftaskpaneattributes.h		secondary		2.4 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/osfui/officesolutionframeworkarthost.h		secondary		1.6 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/osfutils/osfdispid.h		secondary		6.5 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/osfutils/osfgovernance.h		secondary		899 bytes	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/osfutils/osflinkqueue.h		secondary		7.3 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/osfutils/osfnavigation.h		secondary		1.1 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/osfutils/osfomerror.h		secondary		3.2 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/osfutils/synchronizedlinkedqueue.h		secondary		9.2 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/sharedosfim/OsfApiSupport.h		secondary		2 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/sharedosfim/OsfHostBase.h		secondary		8.2 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/sharedosfim/osfargumentset.h		secondary		3.4 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/sharedosfim/osfdatatype.h		secondary		739 bytes	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/sharedosfim/osfim.h		secondary		1.2 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/sharedosfim/osfom.h		secondary		4.3 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/sharedosfim/osfribbon.h		secondary		925 bytes	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/sharedosfim/osfscopes.h		secondary		6.7 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osfclient/sharedosfim/osfuiim.h		secondary		2 KB	May 28, 2014 5:02:16 PM
dev/otools/inc/osm/osmbarcode.h		secondary		8.5 KB	May 28, 2014 5:02:24 PM
dev/otools/inc/osm/osmyubin.h		secondary		674 bytes	May 28, 2014 5:02:24 PM
dev/otools/inc/ostrman/exportd.h		secondary		2.3 KB	May 28, 2014 5:02:26 PM
dev/otools/inc/otools/SafeInt.hpp		secondary		2.6 KB	May 28, 2014 4:37:29 PM
dev/otools/inc/otools/bndptr.h		secondary		24.2 KB	May 28, 2014 4:37:28 PM
dev/otools/inc/otools/oacr.h		secondary		25.3 KB	May 28, 2014 4:37:29 PM
dev/otools/inc/otools/oacrsal.h		secondary		28.7 KB	May 28, 2014 4:37:29 PM
dev/otools/inc/otools/safealloct.h		secondary		3 KB	May 28, 2014 4:37:29 PM
dev/otools/inc/ptls7/LS/BRKCLS.H		secondary		212 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/BRKCOND.H		secondary		270 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/CHPROP.H		secondary		271 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/DISPI.H		secondary		849 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/ENDRES.H		secondary		512 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/EXPTYPE.H		secondary		403 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/FMTI.H		secondary		627 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/GMAP.H		secondary		255 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/GPROP.H		secondary		736 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/HEIGHTS.H		secondary		402 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/KAMOUNT.H		secondary		682 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSACT.H		secondary		544 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSBREAKDESCRIPTION.H		secondary		663 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSBREAKINGINFO.H		secondary		653 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSBREAKRECLINE.H		secondary		382 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSBREAKRECSUBL.H		secondary		1.7 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSBREAKRECTEXT.H		secondary		451 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSBRJUST.H		secondary		536 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSBRK.H		secondary		372 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSBRKRES.H		secondary		1.1 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSCBK.H		secondary		52.5 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSCELL.H		secondary		626 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSCHARTYPE.H		secondary		493 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSCHP.H		secondary		2 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSCONTPOSEXP.H		secondary		2.3 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSCONTPOSINT.H		secondary		4.5 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSCONTXT.H		secondary		2.4 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSCRLINE.H		secondary		5.2 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSDEFS.H		secondary		7.2 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSDEVICE.H		secondary		289 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSDEVINFO.H		secondary		426 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSDEVRES.H		secondary		330 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSDNFIN.H		secondary		2.2 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSDNSET.H		secondary		1.7 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSDSPLY.H		secondary		392 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSDSSUBL.H		secondary		577 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSEMS.H		secondary		555 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSENSUBL.H		secondary		538 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSENUM.H		secondary		443 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSESC.H		secondary		341 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSEXPAN.H		secondary		432 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSEXPINF.H		secondary		607 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSFETCHDS.H		secondary		3.8 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSFGI.H		secondary		482 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSFORMATTERINTERFACE.H		secondary		1.8 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSFRUN.H		secondary		654 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSGETPENALTYMODULE.H		secondary		430 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSHYPH.H		secondary		615 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSHYPHENQUALITY.H		secondary		420 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSIMETH.H		secondary		1.1 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSITEMIZATION.H		secondary		3.5 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSKALIGN.H		secondary		286 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSKEOP.H		secondary		301 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSKJUST.H		secondary		342 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSKSCRIPTJUST.H		secondary		835 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSKSPANVALIGN.H		secondary		394 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSKSPLAT.H		secondary		329 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSKTAB.H		secondary		317 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSKYSR.H		secondary		733 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSLINEAREA.H		secondary		1 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSLINERESTR.H		secondary		1.4 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSLINFO.H		secondary		1.4 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSMATH.H		secondary		949 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSMATHBEHAVIOR.H		secondary		793 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSMATHBOXBREAKREC.H		secondary		374 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSMATHBREAKQUALITY.H		secondary		450 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSMATHBREAKREC.H		secondary		553 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSMATHCBK.H		secondary		1.8 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSMATHDELIMSBRKREC.h		secondary		513 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSMATHFAPPLYBRKREC.h		secondary		388 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSMATHFETCHINFO.H		secondary		482 bytes	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSMATHFRACTIONCBK.H		secondary		3.9 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSMATHFUNCTIONNAME.H		secondary		1.1 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LSMATHFUNCTIONPARTNAME.H		secondary		631 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMATHGENERALBREAKREC.H		secondary		691 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMATHGENERALCBK.H		secondary		5.9 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMATHKSIZEMATCH.H		secondary		500 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMATHLISTBREAKREC.H		secondary		831 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMATHLISTCBK.H		secondary		5.6 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMATHNARYBRKREC.h		secondary		374 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMATHOPCHARCBK.H		secondary		3 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMATHPARTLOCATOR.H		secondary		607 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMATHSCRIPTCBK.H		secondary		9.8 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMATHSERV.H		secondary		4.7 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMATHSHAREDCBK.H		secondary		7.8 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMATHSTYLE.H		secondary		587 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMATHSUBSCRIPTBRKREC.h		secondary		409 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMATHSUBSUPERSCRIPTBRKREC.h		secondary		442 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMATHSUPERSCRIPTBRKREC.h		secondary		423 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMATHZONEBREAKREC.H		secondary		404 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMATHZONECBK.H		secondary		2.7 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMBP.H		secondary		331 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSMODWIDTHINFO.H		secondary		1.2 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSOBJECTINTERFACE.H		secondary		22.8 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSOBJINLINEBLOCK.H		secondary		3 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSOBJREVERSE.H		secondary		2.8 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSOBJRUBY.H		secondary		10.2 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSOBJTATENAK.H		secondary		5.1 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSOBJVRUBY.H		secondary		3.9 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSOBJWARICHU.H		secondary		9.1 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSPAIRAC.H		secondary		413 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSPAP.H		secondary		3.4 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSPARABREAK.H		secondary		2.1 KB	May 28, 2014 5:21:22 PM
dev/otools/inc/ptls7/LS/LSPENALTYINFO.H		secondary		678 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSPENALTYTOLERANCE.H		secondary		519 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSPRACT.H		secondary		573 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSQELINEINFO.H		secondary		501 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSQESUBLINEINFO.H		secondary		727 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSQIN.H		secondary		645 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSQLINE.H		secondary		9.3 KB	May 28, 2014 5:21:22 PM
dev/otools/inc/ptls7/LS/LSQOUT.H		secondary		871 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSQSINFO.H		secondary		1.5 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSQSUBL.H		secondary		3.5 KB	May 28, 2014 5:21:22 PM
dev/otools/inc/ptls7/LS/LSQUERYWORD.H		secondary		321 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSSPAN.H		secondary		1.1 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSSPANQUAL.H		secondary		227 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSSTINFO.H		secondary		934 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSSTYLE.H		secondary		466 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSSUB.H		secondary		421 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSSUBLINEINTERFACE.H		secondary		14.8 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSSUBSET.H		secondary		2.1 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSTABS.H		secondary		912 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSTFLOW.H		secondary		1.5 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSTFSET.H		secondary		1.6 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSTXM.H		secondary		660 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSTXTCFG.H		secondary		2.8 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSULINFO.H		secondary		2.4 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LSZQFROMZA.H		secondary		2.2 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LsMathBoxCbk.h		secondary		2.4 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LsMathBoxedFormulaCbk.h		secondary		2.5 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/LsMathMarkerType.h		secondary		645 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LsMathPhantomCbk.h		secondary		2.4 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/LsQOutVert.H		secondary		932 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/Lsmathkvertalign.h		secondary		601 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/Lsmathstackcbk.h		secondary		3.2 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/MWCLS.H		secondary		208 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/OBJDIM.H		secondary		367 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PDOBJ.H		secondary		182 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PDOBJFRAGM.H		secondary		256 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PILSOBJ.H		secondary		239 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLNOBJ.H		secondary		208 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSBREAKOPP.H		secondary		265 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSBREAKRECLINE.H		secondary		296 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSBREAKRECOBJ.H		secondary		288 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSBREAKRECSUBL.H		secondary		296 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSCELLDET.H		secondary		225 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSDNODE.H		secondary		228 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSHIDDENRUN.H		secondary		216 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSLINE.H		secondary		220 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSLNODE.H		secondary		241 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSMATHFONT.H		secondary		270 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSMATHFUNCBREAKREC.H		secondary		328 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSMATHGLYPHASSEMBLY.H		secondary		270 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSMATHPARTLOCATOR.H		secondary		375 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSMATHSTYLE.H		secondary		315 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSPARABRKSESSION.H		secondary		312 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSPARACLIENT.H		secondary		280 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSRUN.H		secondary		186 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSSPANCLIENT.H		secondary		228 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSSTARTOPP.H		secondary		265 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSSUBL.H		secondary		231 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PLSSUBLFRAGM.H		secondary		278 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/POLS.H		secondary		243 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/PSUBLINEITERATORBIDI.H		secondary		304 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/lsmathaccentcbk.h		secondary		3.8 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/lsmathdelimscbk.h		secondary		4.3 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/lsmathdelimsepcbk.h		secondary		4.6 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/lsmatheqarraycbk.h		secondary		2.8 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/lsmathfapplycbk.h		secondary		2.4 KB	May 28, 2014 5:04:15 PM
dev/otools/inc/ptls7/LS/lsmathkboxalign.h		secondary		430 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/lsmathkcolumnalign.h		secondary		468 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/lsmathkdelimvalign.h		secondary		448 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/lsmathkeqarrayvalign.h		secondary		526 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/lsmathkmatrixvalign.h		secondary		487 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/lsmathkrowalign.h		secondary		436 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/lsmathlimitscbk.h		secondary		3.8 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/lsmathmatrixcbk.h		secondary		3.3 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/lsmathnarycbk.h		secondary		4.2 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/lsmathoverbarcbk.h		secondary		2.4 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/lsmathradicalcbk.h		secondary		3.9 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/lsmathslashedfractioncbk.h		secondary		3.6 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/lsmathstretchstkcbk.h		secondary		3.3 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/LS/lsmathunderbarcbk.h		secondary		2.4 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSBASELINEINFO.H		secondary		493 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSBREAKREC.H		secondary		6.8 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSCBK.H		secondary		406 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSCBKFIG.H		secondary		4.5 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSCBKFIGDS.H		secondary		1 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSCBKGEN.H		secondary		21 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSCBKGENDS.H		secondary		1008 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSCBKOBJ.H		secondary		2.3 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSCBKTXT.H		secondary		32.5 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSCBKTXTDS.H		secondary		5.4 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSCBKWRD.H		secondary		18.9 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSCBKWRDDS.H		secondary		979 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSCOLUMNINFO.H		secondary		452 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSCRCONTXT.H		secondary		768 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSCRCONTXTDS.H		secondary		1.4 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSCRPAGE.H		secondary		3.5 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSCRSUBP.H		secondary		7.6 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSDEFS.H		secondary		4.1 KB	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSFFI.H		secondary		860 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSFIGOBSTINFO.H		secondary		576 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSFIGOBSTRS.H		secondary		466 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSFIGUREHANDLERDS.H		secondary		382 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSFIGUREQUERY.H		secondary		524 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSFIGUREQUERYDS.H		secondary		439 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSFILLINFO.H		secondary		369 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FSFLOATERDEFS.H		secondary		508 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSFLOATERQUERY.H		secondary		494 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSFLOATERQUERYDS.H		secondary		563 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSFLRES.H		secondary		666 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSFLTOBSTINFO.H		secondary		524 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSFMTIN.H		secondary		1.9 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSFMTOUT.H		secondary		637 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSFMTR.H		secondary		3.9 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSFTNINFO.H		secondary		461 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSFTNINFOWORD.H		secondary		1.1 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSGEOM.H		secondary		4.3 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSGEOMDS.H		secondary		570 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSIMETH.H		secondary		7.1 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSKALIGNPAGE.H		secondary		427 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSKBADAPE.H		secondary		1010 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSKCHANGE.H		secondary		395 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSKCLEAR.H		secondary		401 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSKCOLBELONG.H		secondary		382 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSKPB.H		secondary		299 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSKREUSE.H		secondary		778 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSKSHRINKALIGNOVERRIDE.H		secondary		501 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSKUPDATE.H		secondary		414 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSKWRAP.H		secondary		408 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSMEMORYSERVICE.H		secondary		1 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSNMGEN.H		secondary		198 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSOBSTINFO.H		secondary		1.2 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSOPQ.H		secondary		1.8 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSOPQCL.H		secondary		1 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSOPQOBJ.H		secondary		435 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSPAGEFMTSTATEAPI.H		secondary		2.8 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSQUERY.H		secondary		13.3 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSQUERYDS.H		secondary		17.5 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSSHIFTOFF.H		secondary		555 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSTABLEBREAKREC.H		secondary		1.5 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSTABLECBK.H		secondary		11.3 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSTABLECBKDS.H		secondary		3.6 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSTABLEDEFS.H		secondary		972 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSTABLEKCELLMERGE.H		secondary		516 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSTABLEOBJBREAKREC.H		secondary		690 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSTABLEOBJHANDLERDS.H		secondary		6.4 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSTABLEOBJQUERY.H		secondary		1.8 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSTABLEOBJQUERYDS.H		secondary		974 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSTABLEQUERYDS.H		secondary		2.1 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSTRANSFORM.H		secondary		1.8 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSWDIR.H		secondary		1.5 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FSWORDFRAME.H		secondary		2.1 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/FsApeAnchor.h		secondary		703 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FsApeContainer.h		secondary		448 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/FsApeContainerList.h		secondary		827 bytes	May 28, 2014 5:04:16 PM
dev/otools/inc/ptls7/PTS/PFSGEOMCL.H		secondary		216 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/PFSTEXTPARAHANDLE.H		secondary		249 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/fskfiguretype.h		secondary		432 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/fsksuppress.h		secondary		645 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/fslinereuse.h		secondary		1.1 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/fsmathparabreakrec.h		secondary		1.6 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/fsmathparacbk.h		secondary		9.3 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/fsmathparacbkds.h		secondary		6.8 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/fsmathparadefs.h		secondary		236 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/fsmathparahandlerds.h		secondary		370 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/fsmathparaopqcl.h		secondary		918 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/fsmathparaquery.h		secondary		1.6 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/PTS/fsmathparaqueryds.h		secondary		3.4 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/SHARED/PTSLINEPENALTYINFO.H		secondary		321 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/SHARED/PTSLINEVARIANTRESTRICTION.H		secondary		377 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/SHARED/PTSPENALTYMODULE.H		secondary		305 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/SHARED/TSCOMP.H		secondary		905 bytes	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/SHARED/TSDEFS.H		secondary		11.9 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/SHARED/TSPerformance.h		secondary		9.7 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/ptls7/SHARED/TSSYSTEMRESTRICTION.H		secondary		1.5 KB	May 28, 2014 5:04:17 PM
dev/otools/inc/richedit/RICHOLE.H		secondary		6.8 KB	May 28, 2014 5:04:27 PM
dev/otools/inc/richedit/richedit.h		secondary		50.9 KB	May 28, 2014 5:04:27 PM
dev/otools/inc/richedit/textserv.h		secondary		18.8 KB	May 28, 2014 5:04:27 PM
dev/otools/inc/richedit/tom.h		secondary		375.7 KB	May 28, 2014 5:04:27 PM
dev/otools/inc/ucixaml/TellMe.h		secondary		693 bytes	May 28, 2014 5:04:49 PM
dev/otools/inc/ucixaml/UciXaml.h		secondary		426 bytes	May 28, 2014 5:04:49 PM
dev/otools/inc/ucixaml/UciXamlApi.h		secondary		511 bytes	May 28, 2014 5:04:49 PM
dev/otools/inc/ucixaml/fastmodel/FastInsightsPane.fmdl.h		secondary		21 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/ucixaml/fastmodel/FastInsightsPaneFactory.h		secondary		510 bytes	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/2Shapes.h		secondary		2.5 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/Attributes.h		secondary		3.6 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/AutoArray.h		secondary		7.2 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/GeometrySinkD.h		secondary		1.9 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/IntervalArithmetic.h		secondary		17.3 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/LineSegmentIntersection.h		secondary		24.6 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/MILSpecStrings.h		secondary		25.8 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/MglGeometrySink.h		secondary		1.9 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/MilPrefix.h		secondary		1.3 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/Outline.h		secondary		4 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/Reconstructor.h		secondary		13.3 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/RectD.h		secondary		8.8 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/ScannerModule.h		secondary		2.4 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/Tessellate.h		secondary		9.7 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/WorkSpaceTransform.h		secondary		6.6 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/basetypes.h		secondary		5.2 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/bezier.h		secondary		6 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/config.h		secondary		4 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/crtallocator.h		secondary		1.6 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/geolib.h		secondary		1.4 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/geolib_standalone_internal.h		secondary		1.1 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/heap.h		secondary		12.5 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/memblock.h		secondary		9 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/mgltypes.h		secondary		2.1 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/point.h		secondary		5 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/pointsink.h		secondary		2 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/real.h		secondary		44.9 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/Boolean/scanner.h		secondary		80.7 KB	May 28, 2014 5:04:49 PM
dev/otools/inc/util/ModernPerfTrack/Immersive/Microsoft.PerfTrack.h		secondary		28.4 KB	May 28, 2014 5:04:50 PM
dev/otools/inc/util/ModernPerfTrack/Immersive/PerfTrackWrapper.h		secondary		858 bytes	May 28, 2014 5:04:50 PM
dev/otools/inc/util/Office64.h		secondary		29.6 KB	May 28, 2014 5:04:50 PM
dev/otools/inc/util/TruncationHandlers.h		secondary		54.6 KB	May 28, 2014 5:04:50 PM
dev/otools/inc/util/imgproc/imgproc.h		secondary		13.1 KB	May 28, 2014 5:04:50 PM
dev/otools/inc/util/ottags/ottags.h		secondary		914 bytes	May 28, 2014 5:04:50 PM
dev/otools/inc/util/panose/elsepan.h		secondary		26.5 KB	May 28, 2014 5:04:50 PM
dev/otools/inc/util/panose/elsetype.h		secondary		9.8 KB	May 28, 2014 5:04:50 PM
dev/otools/inc/util/panose/elseuser.h		secondary		4.1 KB	May 28, 2014 5:04:50 PM
dev/otools/inc/util/tagging/tagutils.h		secondary		5.7 KB	May 28, 2014 5:04:50 PM
dev/otools/inc/util/ulsapi/ulsapi.h		secondary		12.1 KB	May 28, 2014 5:04:50 PM
dev/otools/inc/vba/designer.h		secondary		9.1 KB	May 28, 2014 5:04:51 PM
dev/otools/inc/vba/objext.h		secondary		18.4 KB	May 28, 2014 5:04:51 PM
dev/otools/inc/vba/save93.h		secondary		9.9 KB	May 28, 2014 5:04:51 PM
dev/otools/inc/vba/vba.h		secondary		50.8 KB	May 28, 2014 5:04:51 PM
dev/otools/inc/vba/vbaenums.h		secondary		5 KB	May 28, 2014 5:04:51 PM
dev/otools/inc/vba/vbaguids.h		secondary		5.9 KB	May 28, 2014 5:04:51 PM
dev/otools/inc/vba/vbasig.h		secondary		1.4 KB	May 28, 2014 5:04:51 PM
dev/otools/inc/winrtsdk/AsyncInfo.h		secondary		7.2 KB	May 28, 2014 5:04:59 PM
dev/otools/inc/winrtsdk/EventToken.h		secondary		1.5 KB	May 28, 2014 5:05:00 PM
dev/otools/inc/winrtsdk/IVectorChangedEventArgs.h		secondary		9.8 KB	May 28, 2014 5:05:00 PM
dev/otools/inc/winrtsdk/WeakReference.h		secondary		7.4 KB	May 28, 2014 5:05:01 PM
dev/otools/inc/winrtsdk/Windows.ApplicationModel.Core.h		secondary		140.8 KB	May 28, 2014 5:05:01 PM
dev/otools/inc/winrtsdk/Windows.ApplicationModel.Store.h		secondary		326.9 KB	May 28, 2014 5:05:01 PM
dev/otools/inc/winrtsdk/Windows.ApplicationModel.appointments.appointmentsprovider.h		secondary		54.2 KB	May 28, 2014 5:05:01 PM
dev/otools/inc/winrtsdk/Windows.ApplicationModel.appointments.h		secondary		153.7 KB	May 28, 2014 5:05:01 PM
dev/otools/inc/winrtsdk/Windows.ApplicationModel.background.h		secondary		377.8 KB	May 28, 2014 5:05:01 PM
dev/otools/inc/winrtsdk/Windows.ApplicationModel.contacts.h		secondary		980.1 KB	May 28, 2014 5:05:01 PM
dev/otools/inc/winrtsdk/Windows.ApplicationModel.contacts.provider.h		secondary		59.8 KB	May 28, 2014 5:05:01 PM
dev/otools/inc/winrtsdk/Windows.ApplicationModel.datatransfer.h		secondary		332.7 KB	May 28, 2014 5:05:01 PM
dev/otools/inc/winrtsdk/Windows.ApplicationModel.datatransfer.sharetarget.h		secondary		41.5 KB	May 28, 2014 5:05:01 PM
dev/otools/inc/winrtsdk/Windows.ApplicationModel.h		secondary		96.9 KB	May 28, 2014 5:05:01 PM
dev/otools/inc/winrtsdk/Windows.ApplicationModel.search.h		secondary		230 KB	May 28, 2014 5:05:01 PM
dev/otools/inc/winrtsdk/Windows.Applicationmodel.Activation.h		secondary		291.4 KB	May 28, 2014 5:05:01 PM
dev/otools/inc/winrtsdk/Windows.Applicationmodel.Calls.h		secondary		47.9 KB	May 28, 2014 5:05:01 PM
dev/otools/inc/winrtsdk/Windows.Devices.Input.h		secondary		127.7 KB	May 28, 2014 5:05:01 PM
dev/otools/inc/winrtsdk/Windows.Foundation.Collections.h		secondary		57.1 KB	May 28, 2014 5:05:02 PM
dev/otools/inc/winrtsdk/Windows.Foundation.h		secondary		1.1 MB	May 28, 2014 5:05:02 PM
dev/otools/inc/winrtsdk/Windows.Globalization.h		secondary		361.7 KB	May 28, 2014 5:05:02 PM
dev/otools/inc/winrtsdk/Windows.Media.Devices.h		secondary		425.3 KB	May 28, 2014 5:05:02 PM
dev/otools/inc/winrtsdk/Windows.Media.h		secondary		212.5 KB	May 28, 2014 5:05:02 PM
dev/otools/inc/winrtsdk/Windows.Networking.Sockets.h		secondary		417.9 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/Windows.Networking.h		secondary		125.6 KB	May 28, 2014 5:05:02 PM
dev/otools/inc/winrtsdk/Windows.UI.Text.h		secondary		223.4 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/Windows.UI.Xaml.h		secondary		1.3 MB	May 28, 2014 5:05:04 PM
dev/otools/inc/winrtsdk/Windows.Web.h		secondary		23.7 KB	May 28, 2014 5:05:05 PM
dev/otools/inc/winrtsdk/Windows.system.RemoteDesktop.h		secondary		8.6 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/activation.h		secondary		5.1 KB	May 28, 2014 5:04:59 PM
dev/otools/inc/winrtsdk/hstring.h		secondary		2.8 KB	May 28, 2014 5:05:00 PM
dev/otools/inc/winrtsdk/inspectable.h		secondary		7.1 KB	May 28, 2014 5:05:00 PM
dev/otools/inc/winrtsdk/roapi.h		secondary		7.4 KB	May 28, 2014 5:05:00 PM
dev/otools/inc/winrtsdk/roerrorapi.h		secondary		13.4 KB	May 28, 2014 5:05:00 PM
dev/otools/inc/winrtsdk/windows.Media.PlayTo.h		secondary		284.3 KB	May 28, 2014 5:05:02 PM
dev/otools/inc/winrtsdk/windows.data.text.h		secondary		263.5 KB	May 28, 2014 5:05:01 PM
dev/otools/inc/winrtsdk/windows.devices.printers.extensions.h		secondary		67.3 KB	May 28, 2014 5:05:01 PM
dev/otools/inc/winrtsdk/windows.graphics.display.h		secondary		67.5 KB	May 28, 2014 5:05:02 PM
dev/otools/inc/winrtsdk/windows.graphics.imaging.h		secondary		331.4 KB	May 28, 2014 5:05:02 PM
dev/otools/inc/winrtsdk/windows.media.capture.h		secondary		310.6 KB	May 28, 2014 5:05:02 PM
dev/otools/inc/winrtsdk/windows.media.core.h		secondary		274.7 KB	May 28, 2014 5:05:02 PM
dev/otools/inc/winrtsdk/windows.media.mediaproperties.h		secondary		253.4 KB	May 28, 2014 5:05:02 PM
dev/otools/inc/winrtsdk/windows.media.protection.h		secondary		160.5 KB	May 28, 2014 5:05:02 PM
dev/otools/inc/winrtsdk/windows.networking.connectivity.h		secondary		535.3 KB	May 28, 2014 5:05:02 PM
dev/otools/inc/winrtsdk/windows.security.authentication.web.h		secondary		46.4 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.security.credentials.h		secondary		105.6 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.security.cryptography.certificates.h		secondary		484.6 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.security.cryptography.core.h		secondary		284.1 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.security.cryptography.h		secondary		20.5 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.storage.fileproperties.h		secondary		242.9 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.storage.h		secondary		718.6 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.storage.pickers.provider.h		secondary		135.6 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.storage.provider.h		secondary		89.4 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.storage.search.h		secondary		353.1 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.storage.streams.h		secondary		534.4 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.system.h		secondary		63 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.system.profile.h		secondary		16.6 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.system.threading.core.h		secondary		43.9 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.system.threading.h		secondary		44.5 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.system.userprofile.h		secondary		109 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.ui.applicationsettings.h		secondary		359.7 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.ui.core.h		secondary		485.3 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.ui.h		secondary		106.3 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.ui.input.h		secondary		352.7 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.ui.popups.h		secondary		110.5 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.ui.viewmanagement.h		secondary		160 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.ui.xaml.automation.h		secondary		443.4 KB	May 28, 2014 5:05:03 PM
dev/otools/inc/winrtsdk/windows.ui.xaml.automation.peers.h		secondary		1.1 MB	May 28, 2014 5:05:04 PM
dev/otools/inc/winrtsdk/windows.ui.xaml.automation.provider.h		secondary		316.6 KB	May 28, 2014 5:05:04 PM
dev/otools/inc/winrtsdk/windows.ui.xaml.automation.text.h		secondary		5.9 KB	May 28, 2014 5:05:04 PM
dev/otools/inc/winrtsdk/windows.ui.xaml.controls.h		secondary		3.7 MB	May 28, 2014 5:05:04 PM
dev/otools/inc/winrtsdk/windows.ui.xaml.controls.primitives.h		secondary		798.4 KB	May 28, 2014 5:05:04 PM
dev/otools/inc/winrtsdk/windows.ui.xaml.data.h		secondary		260 KB	May 28, 2014 5:05:04 PM
dev/otools/inc/winrtsdk/windows.ui.xaml.documents.h		secondary		426.2 KB	May 28, 2014 5:05:04 PM
dev/otools/inc/winrtsdk/windows.ui.xaml.input.h		secondary		366.1 KB	May 28, 2014 5:05:04 PM
dev/otools/inc/winrtsdk/windows.ui.xaml.interop.h		secondary		81.5 KB	May 28, 2014 5:05:04 PM
dev/otools/inc/winrtsdk/windows.ui.xaml.markup.h		secondary		81.3 KB	May 28, 2014 5:05:04 PM
dev/otools/inc/winrtsdk/windows.ui.xaml.media.animation.h		secondary		1.3 MB	May 28, 2014 5:05:04 PM
dev/otools/inc/winrtsdk/windows.ui.xaml.media.h		secondary		1 MB	May 28, 2014 5:05:04 PM
dev/otools/inc/winrtsdk/windows.ui.xaml.media.imaging.h		secondary		157.8 KB	May 28, 2014 5:05:04 PM
dev/otools/inc/winrtsdk/windows.ui.xaml.media.media3d.h		secondary		23.3 KB	May 28, 2014 5:05:04 PM
dev/otools/inc/winrtsdk/windows.ui.xaml.navigation.h		secondary		139.3 KB	May 28, 2014 5:05:04 PM
dev/otools/inc/winrtsdk/windows.ui.xaml.resources.h		secondary		31.3 KB	May 28, 2014 5:05:04 PM
dev/otools/inc/winrtsdk/windows.ui.xaml.shapes.h		secondary		143.4 KB	May 28, 2014 5:05:05 PM
dev/otools/inc/winrtsdk/windows.web.http.filters.h		secondary		60.4 KB	May 28, 2014 5:05:05 PM
dev/otools/inc/winrtsdk/windows.web.http.h		secondary		461.6 KB	May 28, 2014 5:05:05 PM
dev/otools/inc/winrtsdk/windows.web.http.headers.h		secondary		1.1 MB	May 28, 2014 5:05:05 PM
dev/otools/inc/winrtsdk/winstring.h		secondary		5.7 KB	May 28, 2014 5:05:05 PM
dev/otools/inc/winrtsdk/wrl.h		secondary		445 bytes	May 28, 2014 5:05:05 PM
dev/otools/inc/winrtsdk/wrl/client.h		secondary		20.1 KB	May 28, 2014 5:05:05 PM
dev/otools/inc/winrtsdk/wrl/def.h		secondary		1.8 KB	May 28, 2014 5:05:05 PM
dev/otools/inc/winrtsdk/wrl/event.h		secondary		56.4 KB	May 28, 2014 5:05:05 PM
dev/otools/inc/winrtsdk/wrl/ftm.h		secondary		307 bytes	May 28, 2014 5:05:05 PM
dev/otools/inc/winrtsdk/wrl/implements.h		secondary		95.5 KB	May 28, 2014 5:05:05 PM
dev/otools/inc/winrtsdk/wrl/internal.h		secondary		3.1 KB	May 28, 2014 5:05:05 PM
dev/otools/inc/winrtsdk/wrl/module.h		secondary		74.2 KB	May 28, 2014 5:05:05 PM
dev/otools/inc/winrtsdk/wrl/wrappers/corewrappers.h		secondary		31.4 KB	May 28, 2014 5:05:05 PM
dev/otools/inc/word/FastCanvasChromeModel.fmdl.h		secondary		17.7 KB	May 28, 2014 5:05:15 PM
dev/otools/inc/word/FastCommentPopout.fmdl.h		secondary		20.5 KB	May 28, 2014 5:05:15 PM
dev/otools/inc/word/FastWwdCreationParams.fmdl.h		secondary		18.8 KB	May 28, 2014 5:05:15 PM
dev/otools/inc/word/ICanvasUIFactory.h		secondary		1.7 KB	May 28, 2014 5:05:15 PM
dev/otools/inc/word/ICanvasUIFactory_xaml.h		secondary		1 KB	May 28, 2014 5:05:15 PM
dev/otools/inc/word/IFindBarModel.h		secondary		973 bytes	May 28, 2014 5:05:15 PM
dev/otools/inc/word/IImmersiveZoomModel.h		secondary		798 bytes	May 28, 2014 5:05:15 PM
dev/otools/inc/word/KeyboardToggleModel.h		secondary		417 bytes	May 28, 2014 5:05:15 PM
dev/otools/inc/word/WordApplication.h		secondary		11.1 KB	May 28, 2014 5:05:15 PM
dev/otools/inc/word/faststatus.fmdl.h		secondary		15.2 KB	May 28, 2014 5:05:15 PM
dev/otools/inc/word/findbar.h		secondary		593 bytes	May 28, 2014 5:05:15 PM
dev/otools/inc/word/viewsettingenums.h		secondary		467 bytes	May 28, 2014 5:05:15 PM
dev/otools/inc/wordxaml/IFindBarViewWinRT.h		secondary		1.2 KB	May 28, 2014 5:05:15 PM
dev/otools/inc/wordxaml/IImmersiveZoomViewWinRT.h		secondary		1.3 KB	May 28, 2014 5:05:15 PM
dev/otools/inc/wordxaml/KeyboardToggleView.h		secondary		716 bytes	May 28, 2014 5:05:15 PM
dev/otools/inc/wordxaml/MainDocumentSurfaceControlWinRT.h		secondary		1.7 KB	May 28, 2014 5:05:16 PM
dev/otools/inc/wordxaml/WordXaml.h		secondary		967 bytes	May 28, 2014 5:05:16 PM
dev/otools/inc/wordxaml/WordXamlApi.h		secondary		523 bytes	May 28, 2014 5:05:16 PM
dev/otools/inc/xaml/Floatie.h		secondary		4.5 KB	May 28, 2014 5:05:17 PM
dev/otools/inc/xaml/SettingsWrl.h		secondary		5.2 KB	May 28, 2014 5:05:18 PM
dev/otools/inc/xaml/XamlApi.h		secondary		438 bytes	May 28, 2014 5:05:18 PM
dev/otools/inc/xsd/xsdnamespaces.h		secondary		26.4 KB	May 28, 2014 5:05:25 PM
dev/word/client/desktop/AccChecker.cpp		cpp	21 Lines	167.3 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/AppInputManager.cpp		cpp	45 Lines	4.8 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/AppMouseTool.cpp		cpp	18 Lines	2.9 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/AppTouchTool.cpp		cpp	77 Lines	11.3 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/CDktpWordProgressUI.cpp		cpp	68 Lines	15.3 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/DocMergeComputation.cpp		cpp		11.7 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/DocMergeLocks.cpp		cpp	3 Lines	41.5 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/DocMergeUI.cpp		cpp	74 Lines	9.6 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/EnglishAssist.cpp		cpp	235 Lines	30.2 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/FastWordViewAppImpl.cpp		cpp	2 Lines	2.5 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/FinalizeSlab.cpp		cpp	29 Lines	6.8 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/LoggingHelperClient.cpp		cpp	3 Lines	5.8 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/OutDocInspector.cpp		cpp	46 Lines	27.1 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/Overlay.cpp		cpp	146 Lines	14.9 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/PointerInputHandler.cpp		cpp	11 Lines	1.6 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/PolicyNudgeIdle.cpp		cpp	27 Lines	12.5 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/Status.cpp		cpp	770 Lines	84.9 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/TEComponentTests.cpp		cpp	681 Lines	63.8 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/TEOutlineView.cpp		cpp	403 Lines	29.6 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/TETextOLE.cpp		cpp	64 Lines	6.2 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/TextEffects.cpp		cpp	72 Lines	7.7 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/TouchInputUtil.cpp		cpp	1 Lines	666 bytes	May 28, 2014 5:13:11 PM
dev/word/client/desktop/UIA.cpp		cpp	279 Lines	342 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/UIInputManager.cpp		cpp	11 Lines	4 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/UITouchTool.cpp		cpp		771 bytes	May 28, 2014 5:13:11 PM
dev/word/client/desktop/Uniscribetest.cpp		cpp		45.4 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/WordUIAHelpers.cpp		cpp	14 Lines	14.1 KB	May 28, 2014 5:13:12 PM
dev/word/client/desktop/aar.cpp		cpp	601 Lines	58.6 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/acetate.cpp		cpp	3,344 Lines	261.7 KB	May 28, 2014 5:22:52 PM
dev/word/client/desktop/acetate2.cpp		cpp	135 Lines	17.7 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/acnotify.cpp		cpp	2,251 Lines	186.8 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/addin.cpp		cpp	2,593 Lines	211.2 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/addinsx.cpp		cpp	116 Lines	13.5 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/address.cpp		cpp	844 Lines	79.5 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/airspaceoff.cpp		cpp	156 Lines	19.3 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/aligners.cpp		cpp	1,174 Lines	111.9 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/annot.cpp		cpp	1,223 Lines	96.5 KB	May 28, 2014 5:22:52 PM
dev/word/client/desktop/annotink.cpp		cpp	327 Lines	95.7 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/appdim.cpp		cpp	107 Lines	9.9 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/appmode.cpp		cpp	2 Lines	938 bytes	May 28, 2014 5:12:48 PM
dev/word/client/desktop/assist.cpp		cpp	19 Lines	5 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/atnpopout.cpp		cpp	568 Lines	61.2 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/autosig.cpp		cpp	1,416 Lines	229.9 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/bar.cpp		cpp	535 Lines	62.9 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/barcmd.cpp		cpp	864 Lines	74.9 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/barcust.cpp		cpp	517 Lines	41.8 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/bardef.cpp		cpp	30 Lines	9 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/barupd.cpp		cpp	117 Lines	10.9 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/bibliorg.cpp		cpp	4,545 Lines	418.5 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/blltprf.cpp		cpp	3,059 Lines	282.2 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/block.cpp		cpp	686 Lines	52.1 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/blogout.cpp		cpp	160 Lines	117.7 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/blogsupp.cpp		cpp	36 Lines	89.6 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/boolean.cpp		cpp	69 Lines	7.6 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/bootclnt.cpp		cpp	695 Lines	73.6 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/bootglob.cpp		cpp	45 Lines	15.9 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/border.cpp		cpp	3,754 Lines	280 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/broadcast.cpp		cpp	725 Lines	75 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/bubble.cpp		cpp	785 Lines	72.2 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/bubble_.h		secondary		3.4 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/caption.cpp		cpp	2,214 Lines	142.9 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/caption_.h		secondary		4.2 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/catalog.cpp		cpp	157 Lines	13 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/cdscmd.cpp		cpp	644 Lines	64 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/cdscust.cpp		cpp	27 Lines	3.5 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/cdshelpr.cpp		cpp	254 Lines	15.7 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/cdskme.cpp		cpp	5 Lines	7 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/cdsmcr.cpp		cpp	42 Lines	4.4 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/cdstcg.cpp		cpp	82 Lines	7.8 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/chgall.cpp		cpp	774 Lines	57.6 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/clicktyp.cpp		cpp	1,171 Lines	86 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/clipbord.cpp		cpp	2,268 Lines	368.1 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/clipbrd2.cpp		cpp	567 Lines	98.7 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/cls.cpp		cpp	46 Lines	5.4 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/cmd2.cpp		cpp	580 Lines	71.9 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/cmd3.cpp		cpp	6,117 Lines	405 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/cmdafmt.cpp		cpp	2,069 Lines	167.1 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/cmdcore.cpp		cpp	1,647 Lines	187.9 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/cmdexport.cpp		cpp	314 Lines	22 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/cmdframe.cpp		cpp	1,722 Lines	144.2 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/cmdlang.cpp		cpp	463 Lines	47.1 KB	May 28, 2014 5:12:48 PM
dev/word/client/desktop/cmdprot.cpp		cpp	395 Lines	28.1 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/cmdsel.cpp		cpp	403 Lines	35.1 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/cmdwnd.cpp		cpp	1,417 Lines	115.3 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/cnvmw.cpp		cpp	1,531 Lines	97.2 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/coauth.cpp		cpp	885 Lines	171 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/coauthlocks.cpp		cpp	394 Lines	151.7 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/collab.cpp		cpp	84 Lines	6.5 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/columns.cpp		cpp	1,354 Lines	101.4 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/compare.cpp		cpp	219 Lines	75.1 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/comptest/GrfCommands.cpp		cpp	7 Lines	4.1 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/comptest/TESetup.h		secondary		1.5 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/comptest/TETestSetup.cpp		cpp	26 Lines	3.6 KB	May 28, 2014 5:12:50 PM
dev/word/client/desktop/comptest/TaskLibDesktop.cpp		cpp	735 Lines	57.3 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/comptest/TestFont.cpp		cpp	63 Lines	6.6 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/comptest/TestForcedE1oConversion.cpp		cpp	379 Lines	20.8 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/comptest/TestHeaderFooter.cpp		cpp	21 Lines	3.7 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/comptest/TestHyperlink.cpp		cpp	40 Lines	6.7 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/comptest/TestInsertBuffer.cpp		cpp	21 Lines	3.7 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/comptest/TestJpg.h		secondary		55.4 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/comptest/TestOArt.cpp		cpp	40 Lines	4.6 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/comptest/TestOCX.cpp		cpp	90 Lines	6.5 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/comptest/TestOLE.cpp		cpp	280 Lines	28.5 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/comptest/TestOpenSave.cpp		cpp	33 Lines	4.6 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/comptest/TestPageNumber.cpp		cpp	34 Lines	4.3 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/comptest/TestPageSetup.cpp		cpp	26 Lines	3.2 KB	May 28, 2014 5:12:50 PM
dev/word/client/desktop/comptest/TestSmartTags.cpp		cpp	82 Lines	7.3 KB	May 28, 2014 5:12:50 PM
dev/word/client/desktop/comptest/TestSpellingGrammar.cpp		cpp	41 Lines	4.7 KB	May 28, 2014 5:12:50 PM
dev/word/client/desktop/comptest/TestTEHeaderFooter.cpp		cpp	49 Lines	6.5 KB	May 28, 2014 5:12:50 PM
dev/word/client/desktop/comptest/TestTERMPageTurnBtn.cpp		cpp	88 Lines	10.6 KB	May 28, 2014 5:12:50 PM
dev/word/client/desktop/comptest/TestTESingleClickBVT.cpp		cpp	82 Lines	14.8 KB	May 28, 2014 5:12:50 PM
dev/word/client/desktop/comptest/testFootnoteEndnote.cpp		cpp	158 Lines	12.7 KB	May 28, 2014 5:12:49 PM
dev/word/client/desktop/concord.cpp		cpp	330 Lines	19.6 KB	May 28, 2014 5:12:50 PM
dev/word/client/desktop/consis.cpp		cpp	482 Lines	38 KB	May 28, 2014 5:12:50 PM
dev/word/client/desktop/consis_.h		secondary		3.7 KB	May 28, 2014 5:12:50 PM
dev/word/client/desktop/cookie.cpp		cpp	619 Lines	56 KB	May 28, 2014 5:12:50 PM
dev/word/client/desktop/corout.cpp		cpp	307 Lines	33.4 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/cpanel.cpp		cpp	150 Lines	12.8 KB	May 28, 2014 5:12:50 PM
dev/word/client/desktop/crtd2dprintdesktop.cpp		cpp	59 Lines	8.8 KB	May 28, 2014 5:12:50 PM
dev/word/client/desktop/ct_stub/ct_stub.cpp		cpp	1 Lines	865 bytes	May 28, 2014 5:12:50 PM
dev/word/client/desktop/ctxui.cpp		cpp	111 Lines	14.2 KB	May 28, 2014 5:12:50 PM
dev/word/client/desktop/cursor.cpp		cpp	140 Lines	25.5 KB	May 28, 2014 5:12:50 PM
dev/word/client/desktop/cust.cpp		cpp	2,425 Lines	187.6 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/cvtui.cpp		cpp	105 Lines	5.6 KB	May 28, 2014 5:12:50 PM
dev/word/client/desktop/daldlgs.cpp		cpp	315 Lines	22.6 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/ddeclnt.cpp		cpp	834 Lines	69.7 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/ddesrvr.cpp		cpp	332 Lines	53.8 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/ddesub.cpp		cpp	550 Lines	53.9 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/defcallout.cpp		cpp	478 Lines	50.5 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/defcalloutwrap.cpp		cpp	3 Lines	774 bytes	May 28, 2014 5:12:51 PM
dev/word/client/desktop/dialog1.cpp		cpp	622 Lines	63.9 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/dialog2.cpp		cpp	59 Lines	6.5 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/dialog3.cpp		cpp	1,086 Lines	107.6 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/disp2.cpp		cpp	284 Lines	25.3 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/disp3.cpp		cpp	115 Lines	14.5 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/disppage.cpp		cpp	187 Lines	19.6 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/dispspec.cpp		cpp	32 Lines	5.1 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/disputil.cpp		cpp	390 Lines	42.6 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/dispzoom.cpp		cpp	188 Lines	14.5 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/dlbenum.cpp		cpp	242 Lines	47.1 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/dlgdoc.cpp		cpp	2,343 Lines	266.2 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/dlghyph.cpp		cpp	827 Lines	57.6 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/dlglook1.cpp		cpp	3,840 Lines	468.1 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/dlglook2.cpp		cpp	250 Lines	25.8 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/dlgmenu.cpp		cpp	138 Lines	17.4 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/dlgmisc.cpp		cpp	2,168 Lines	140 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/dlgmodls.cpp		cpp	328 Lines	26.8 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/dlgopen.cpp		cpp	3,507 Lines	272.1 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/dlgrec.cpp		cpp	35 Lines	48.4 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/dlgredt.cpp		cpp	655 Lines	72.5 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/dlgsave.cpp		cpp	1,254 Lines	252.5 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/dlgsc.cpp		cpp	355 Lines	36.1 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/dlgsdm.cpp		cpp	1,601 Lines	172.5 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/dlgtable.cpp		cpp	3,974 Lines	264.8 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/dllmain.cpp		cpp	28 Lines	3.5 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/docmrg.cpp		cpp	113 Lines	22.5 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/docname.cpp		cpp	93 Lines	9.8 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/docobj.cpp		cpp	2,192 Lines	237.2 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/drag.cpp		cpp	126 Lines	20.1 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/draw.cpp		cpp		11.4 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/drawcmd.cpp		cpp	1,709 Lines	130.6 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/drawmeta.cpp		cpp	119 Lines	10.6 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/drgl.cpp		cpp	135 Lines	10 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/drm.cpp		cpp	81 Lines	72.1 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/drop.cpp		cpp	278 Lines	31.2 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/drp.cpp		cpp	1,133 Lines	125.8 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/ecdclnt.cpp		cpp	4,018 Lines	280.1 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/ecddlg.cpp		cpp	1,656 Lines	121.5 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/edcmd.cpp		cpp	860 Lines	58.5 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/editlink.cpp		cpp	1,618 Lines	119.7 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/edmacro.cpp		cpp	617 Lines	46.1 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/eldde.cpp		cpp	239 Lines	43.9 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/elfe.cpp		cpp	267 Lines	17.8 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/elfile.cpp		cpp	1,150 Lines	91.1 KB	May 28, 2014 5:12:51 PM
dev/word/client/desktop/elmisc.cpp		cpp	1,657 Lines	154.2 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/elmisc2.cpp		cpp	1,671 Lines	189.4 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/enctext.cpp		cpp	1,331 Lines	122.3 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/envelope.cpp		cpp	3,237 Lines	238.8 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/etcmd.cpp		cpp	887 Lines	78.1 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/factoid.cpp		cpp	2,156 Lines	318.1 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/fcc.cpp		cpp	924 Lines	141.4 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/fetchsf.cpp		cpp		365 bytes	May 28, 2014 5:12:52 PM
dev/word/client/desktop/fieldcmd.cpp		cpp	1,210 Lines	97.1 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/fieldsf.cpp		cpp		385 bytes	May 28, 2014 5:12:52 PM
dev/word/client/desktop/fieldspc.cpp		cpp	954 Lines	56.5 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/fieldspcui.cpp		cpp	176 Lines	10.8 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/file.cpp		cpp	16 Lines	1.8 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/filecvt.cpp		cpp	693 Lines	175.3 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/fileopen.cpp		cpp	1,494 Lines	163.8 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/filline.cpp		cpp	3,910 Lines	253.9 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/findrplc.cpp		cpp	3,116 Lines	267 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/flex.cpp		cpp	357 Lines	41.4 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/fltexp.cpp		cpp	567 Lines	44 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/fmfactory.cpp		cpp	15 Lines	3.6 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/fmtinsp.cpp		cpp	1,649 Lines	136.2 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/fmtpane.cpp		cpp	2,909 Lines	245.1 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/fnmclt.cpp		cpp	237 Lines	21.5 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/fonttest.cpp		cpp		32.2 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/fontui.cpp		cpp	662 Lines	50.6 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/footnote.cpp		cpp	663 Lines	49.2 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/form.cpp		cpp	2,138 Lines	144.1 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/frame.cpp		cpp	168 Lines	18.5 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/frameset.cpp		cpp	1,127 Lines	144 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/fsdebug.cpp		cpp		23.8 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/galleries.cpp		cpp	487 Lines	34.1 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/glossary.cpp		cpp	1,729 Lines	227.9 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/glsy.cpp		cpp	1,164 Lines	132 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/grammar.cpp		cpp	4,991 Lines	457.7 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/gramopt.cpp		cpp	741 Lines	63.2 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/grspec.cpp		cpp	161 Lines	17.3 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/grwin.cpp		cpp	1 Lines	5.1 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/hddcmd.cpp		cpp	1,115 Lines	83.1 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/heac.cpp		cpp	45 Lines	4 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/help.cpp		cpp	239 Lines	21.3 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/hhc.cpp		cpp	700 Lines	51 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/htcomponenttests.cpp		cpp	113 Lines	10.3 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/htmlclnt.cpp		cpp	112 Lines	9.1 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/htmlin.cpp		cpp	47 Lines	4.2 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/htmlout.cpp		cpp	9 Lines	1.1 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/hyplink.cpp		cpp	473 Lines	42.1 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/idle.cpp		cpp	934 Lines	109.7 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/ime.cpp		cpp	1,108 Lines	93.9 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/imecmd.cpp		cpp	558 Lines	41 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/imercnv.cpp		cpp	337 Lines	27.9 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/immzoom.cpp		cpp	242 Lines	31.6 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/AccChecker.h		secondary		4.3 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/EnglishAssist.h		secondary		3.6 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/FinalizeSlab.h		secondary		1.4 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/InputState.h		secondary		1.8 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/LetterTMCs.h		secondary		5.9 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/LsObjDsp.h		secondary		3.2 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/LsObjFgr.h		secondary		5.5 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/Obarto.h		secondary		27.2 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/OutDocInspector.h		secondary		560 bytes	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/Overlay.h		secondary		4.1 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/RdContext.h		secondary		11.6 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/RdD2DContext.h		secondary		6.7 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/RdGDIContext.h		secondary		4.5 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/TextEffects.h		secondary		8.8 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/UIA.h		secondary		30.7 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/UIInputManagerDesktopAdapter.h		secondary		1.2 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/aar.h		secondary		6.1 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/abd.h		secondary		23.5 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/inc/about.hs		secondary		1.2 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/acdef.h		secondary		745 bytes	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/acetate.h		secondary		54.8 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/acnotify.h		secondary		52.8 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/addin.h		secondary		4.6 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/addinsx.h		secondary		1.4 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/address.h		secondary		3.2 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/afmt.h		secondary		124.8 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/afmtdefs.h		secondary		38.7 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/afmtlex.h		secondary		1.4 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/annotink.h		secondary		4.6 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/appdim.h		secondary		1.5 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/arm.h		secondary		2.1 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/asialayout.h		secondary		2.7 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/assoc.h		secondary		6.4 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/atdef.h		secondary		281.2 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/atnpopout.h		secondary		12.8 KB	May 28, 2014 5:22:53 PM
dev/word/client/desktop/inc/banter.h		secondary		3.1 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/bar.h		secondary		8.5 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/bar.hs		secondary		1.4 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/bar_.h		secondary		16.4 KB	May 28, 2014 5:12:52 PM
dev/word/client/desktop/inc/bardef.h		secondary		10.1 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/barreset.hs		secondary		982 bytes	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/bibliorg.h		secondary		7 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/bidi.h		secondary		46.5 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/blltprf.h		secondary		19.6 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/blogout.h		secondary		17.4 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/blogsupp.h		secondary		10.4 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/boolean.h		secondary		1.2 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/border2.h		secondary		1.8 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/broadcast.h		secondary		14.5 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/bsc.h		secondary		3.5 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/bubble.h		secondary		1.5 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cafmtw7.hs		secondary		1.3 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/caption.h		secondary		4.4 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/catcopy.hs		secondary		694 bytes	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/catsrch.hs		secondary		3.1 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cbt.h		secondary		9.1 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cdapi.h		secondary		5.2 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cds.h		secondary		24.1 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cdsctc.h		secondary		15.7 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cdsctc2.h		secondary		828 bytes	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cdsexec.h		secondary		32.7 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cdsfci.h		secondary		191.7 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cdskcm.h		secondary		10.5 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cdskeys.h		secondary		772 bytes	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cdsmf.h		secondary		5.6 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cdspri.h		secondary		10.2 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cgenw2.hs		secondary		1 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cgrammar.hs		secondary		901 bytes	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/charw2.hs		secondary		1.4 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/chse_.h		secondary		9.6 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/ckeybord.hs		secondary		901 bytes	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/clicktyp.h		secondary		3 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cls.h		secondary		1 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cmenus.hs		secondary		953 bytes	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cnvmw.h		secondary		3.1 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/coauth.h		secondary		11.3 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/coauth_ioldoc.h		secondary		8.8 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/coauthlocks.h		secondary		14.2 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/columns.h		secondary		3.3 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/comhelp.h		secondary		3 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/compare.h		secondary		25 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/contextw.h		secondary		18.5 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cookie.h		secondary		6.4 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/corout.h		secondary		5.5 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cpanel.h		secondary		3.8 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cprintw2.hs		secondary		777 bytes	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/ctoolbar.hs		secondary		1.1 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/ctxui.h		secondary		571 bytes	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cursor.h		secondary		2.5 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cust.h		secondary		2.9 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/cvieww2.hs		secondary		1 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/dbcsmap.h		secondary		8.9 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/dbnum.h		secondary		452 bytes	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/ddedefs.h		secondary		18.8 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/debugver.h		secondary		13.6 KB	May 28, 2014 5:12:53 PM
dev/word/client/desktop/inc/defcallout.h		secondary		6 KB	May 28, 2014 5:12:54 PM
dev/word/client/desktop/inc/dialog.h		secondary		84.7 KB	May 28, 2014 5:12:54 PM
dev/word/client/desktop/inc/disp.h		secondary		143.6 KB	May 28, 2014 5:12:54 PM
dev/word/client/desktop/inc/dlbenum.h		secondary		14.3 KB	May 28, 2014 5:12:54 PM
dev/word/client/desktop/inc/dlgsc.h		secondary		2.4 KB	May 28, 2014 5:12:54 PM
dev/word/client/desktop/inc/dlgtable.h		secondary		5.3 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/dllexpt.cpp		secondary		2.2 KB	May 28, 2014 5:12:54 PM
dev/word/client/desktop/inc/dllexpt.h		secondary		878 bytes	May 28, 2014 5:12:54 PM
dev/word/client/desktop/inc/dllutil.h		secondary		1.7 KB	May 28, 2014 5:12:54 PM
dev/word/client/desktop/inc/dmdefs.h		secondary		5.5 KB	May 28, 2014 5:12:54 PM
dev/word/client/desktop/inc/doccmd.h		secondary		37.2 KB	May 28, 2014 5:12:54 PM
dev/word/client/desktop/inc/doccomp.h		secondary		26.7 KB	May 28, 2014 5:12:54 PM
dev/word/client/desktop/inc/docfile.h		secondary		7 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/docmrg.h		secondary		718 bytes	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/docname.h		secondary		1.5 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/docobjct.h		secondary		10.9 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/drag.h		secondary		46.1 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/draw.h		secondary		56.3 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/drawclient.h		secondary		3 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/drawcvt.h		secondary		606 bytes	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/drm.h		secondary		2 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/drop.h		secondary		718 bytes	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/dropcap.h		secondary		3.6 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/e2osync.h		secondary		9.9 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/ecd.h		secondary		8.9 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/edit.h		secondary		15.8 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/edobj.hs		secondary		537 bytes	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/elfe.h		secondary		916 bytes	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/elfile.h		secondary		4.6 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/enclose.h		secondary		2.5 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/enctext.h		secondary		11.5 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/envszdef.h		secondary		25.9 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/etdefs.h		secondary		2.1 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/export.h		secondary		7.4 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/factoid.h		secondary		21.5 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/factoidp.h		secondary		2 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fail.h		secondary		1.2 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fcc.h		secondary		33.4 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fetchin.h		secondary		11 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fetchsf.h		secondary		2.2 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/ff.h		secondary		5.8 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/field.h		secondary		55.6 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/field2.h		secondary		12.3 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fieldpic.h		secondary		3.2 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/figu.h		secondary		50.3 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/filecvt.h		secondary		25 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fileold.h		secondary		10.4 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fileopen.h		secondary		8.2 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fileprev.h		secondary		1.4 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/filline.h		secondary		8.7 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/filline.hs		secondary		4.3 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/findrplc.h		secondary		50.3 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/flderror.h		secondary		3.8 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fldins.h		secondary		4.8 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fldins2.h		secondary		50 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fldintl.h		secondary		905 bytes	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fldpic2.h		secondary		4.2 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/flex.h		secondary		11.5 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fltexp.h		secondary		19 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fmtbkgd.hs		secondary		519 bytes	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fmthdn.hs		secondary		1.2 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fmtinsp.h		secondary		4.6 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fmtlist.hs		secondary		3.8 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fmtlstg.hs		secondary		1.6 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fmtlstt.hs		secondary		1.1 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fnexpt.h		secondary		9.3 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/font.h		secondary		60.2 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fontsub_.h		secondary		9.6 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fonttest.h		secondary		14.7 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/fontui.h		secondary		1.8 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/footopw2.hs		secondary		1.9 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/form.h		secondary		14.5 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/formula.h		secondary		7.9 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/frame.h		secondary		23.6 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/frameset.h		secondary		26 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/ftnedn_.h		secondary		2.6 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/glossary.h		secondary		6.2 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/glsy.h		secondary		19.2 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/goto.hs		secondary		1.6 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/gramlayer.h		secondary		11.1 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/gramopt.h		secondary		3.2 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/grs.h		secondary		8.3 KB	May 28, 2014 5:12:55 PM
dev/word/client/desktop/inc/grstg_.h		secondary		875 bytes	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/grstruct.h		secondary		3.8 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/heac.h		secondary		3.5 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/header.hs		secondary		990 bytes	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/heap2.h		secondary		3.8 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/help.h		secondary		13.4 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/hgt.h		secondary		9.4 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/hostedapp.h		secondary		4.4 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/htmlchp.h		secondary		9.9 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/htmldoc.h		secondary		5.9 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/htmldraw.h		secondary		8.6 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/htmlfe.h		secondary		1.1 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/htmlfld.h		secondary		9 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/htmlfrm.h		secondary		829 bytes	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/htmlftn.h		secondary		2.9 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/htmlhdd.h		secondary		1.6 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/htmlin.h		secondary		50 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/htmllist.h		secondary		10.1 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/htmlmath.h		secondary		2.5 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/htmlout.h		secondary		37.5 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/htmlpage.h		secondary		2.4 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/htmlpap.h		secondary		7 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/htmlsty.h		secondary		46.9 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/htmlsupp.h		secondary		18.6 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/htmltbl.h		secondary		21.5 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/htmlwsp.h		secondary		2.5 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/hyph.h		secondary		10.5 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/hyphenw2.hs		secondary		849 bytes	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/hyplink.h		secondary		4.2 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/iconbar.h		secondary		1.8 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/idle.h		secondary		11.4 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/ifld.h		secondary		9.6 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/ifont.h		secondary		1.9 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/ime_.h		secondary		14.4 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/imecmd.h		secondary		3.2 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/imercnv.h		secondary		3.7 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/immzoom.h		secondary		14 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/index.h		secondary		11.9 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/init.h		secondary		8.6 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/initb.h		secondary		2.4 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/insert.h		secondary		6.7 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/insfile.hs		secondary		920 bytes	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/inspic.hs		secondary		1.4 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/intldef.h		secondary		84.4 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/intlist_.h		secondary		122.9 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/keyevent.h		secondary		1.8 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/label.h		secondary		17 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/labeldef.h		secondary		3.4 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/lad.h		secondary		8 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/layer.h		secondary		23.1 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/letters.h		secondary		6.6 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/lex.h		secondary		38.6 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/list.h		secondary		3.3 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/livedrag.h		secondary		11.6 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/livedragopq.h		secondary		727 bytes	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/lookcmd.h		secondary		36.5 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/lscbkimpl.h		secondary		45.6 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/lsdefsw.h		secondary		1.8 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/lsglobal.h		secondary		54.8 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/lshack2.h		secondary		2.2 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/lshelp.h		secondary		12.9 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/lshelpfe.h		secondary		3.3 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/lshelpfetch.h		secondary		9.1 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/lshelpge.h		secondary		6.3 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/lshelpmath.h		secondary		5.8 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/lsobj.h		secondary		3.7 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/lsobjfsm.h		secondary		3.1 KB	May 28, 2014 5:12:56 PM
dev/word/client/desktop/inc/lsobjft.h		secondary		5.1 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/lsobjrdc.h		secondary		3.4 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/lsobjspc.h		secondary		4.4 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/lsod.h		secondary		22 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/lsselrng.h		secondary		1.3 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/ltrelem_.h		secondary		25.8 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/ltrlook_.h		secondary		2.6 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/macrocmd.h		secondary		12.1 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/macrorec.h		secondary		15.9 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/macstrct.h		secondary		28.6 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/mailnav.h		secondary		3.9 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/mapi_.h		secondary		5.2 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/mathfontclient.h		secondary		3.3 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/mathio.h		secondary		30.3 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/mathui.h		secondary		6.2 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/memmark.h		secondary		2.6 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/metadata.h		secondary		616 bytes	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/metrocnv.h		secondary		997 bytes	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/metrocnvutil.h		secondary		12 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/misccmd.h		secondary		44 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/mli.h		secondary		15.5 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/mli2.h		secondary		480 bytes	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/mlielt.h		secondary		5.1 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/mlipri.h		secondary		2.3 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/mlirerr.h		secondary		11 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/mntr.h		secondary		91.7 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/mri.h		secondary		1.1 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/mru.h		secondary		2 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/msgbox.h		secondary		5.9 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/mtl.h		secondary		2.6 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/mtl2.h		secondary		889 bytes	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/mtlwin.h		secondary		855 bytes	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/new.hs		secondary		898 bytes	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/ntdevmod.h		secondary		1.9 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/nvpane.h		secondary		9.9 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/oartHost.h		secondary		83.7 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/oartTextWrapCallout.h		secondary		5.6 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/oartdisp.h		secondary		7.9 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obapp.h		secondary		13.1 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obautext.h		secondary		1.6 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obcmpmgr.h		secondary		2.4 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obcoauth.h		secondary		6.1 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obdisp.h		secondary		4.9 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obdiv.h		secondary		988 bytes	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obdoc.h		secondary		17.4 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obdocpart.h		secondary		2 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obeffects.h		secondary		54.4 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obenvlab.h		secondary		1.1 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obevents.h		secondary		11.1 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obfield.h		secondary		3.9 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obfmt.h		secondary		15.5 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obfmt_.h		secondary		3 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obframeset.h		secondary		940 bytes	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obfreeform.h		secondary		1.6 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obgen.h		secondary		36.2 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obguid.h		secondary		1.7 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obhand.h		secondary		6.4 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obkey.h		secondary		1.1 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/oblet.h		secondary		2.8 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obmath.h		secondary		9.6 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obmerge.h		secondary		1.7 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obnotes.h		secondary		2 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obnum.h		secondary		19 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obole.h		secondary		4 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obproof.h		secondary		3.5 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obr.h		secondary		1.1 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obrange.h		secondary		21.7 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obrec.h		secondary		3.3 KB	May 28, 2014 5:12:57 PM
dev/word/client/desktop/inc/obrfm.h		secondary		2.9 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/obrmarks.h		secondary		7.5 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/obroutsl.h		secondary		446 bytes	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/obsr.h		secondary		587 bytes	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/obsystem.h		secondary		438 bytes	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/obtable.h		secondary		4.8 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/obtblsty.h		secondary		636 bytes	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/obtextframe2.h		secondary		4.6 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/obtom.h		secondary		73.1 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/obutil.h		secondary		11.2 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/obvbe.h		secondary		11.5 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/obwindow.h		secondary		2.2 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/obwrdbas.h		secondary		10.3 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/obxml.h		secondary		1.1 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/ocxclnt.h		secondary		10.7 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/odraw.h		secondary		59.5 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/offchlp.h		secondary		415 bytes	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/offstm.h		secondary		2.9 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/ole2fix.h		secondary		727 bytes	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/ole2rlnk.hs		secondary		1.2 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/oleclnt.h		secondary		1.1 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/olesrvr.h		secondary		9.5 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/olesubs2.h		secondary		52.5 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/open.hs		secondary		2.5 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/openvir.h		secondary		4.1 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/options.h		secondary		5.4 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/orf.h		secondary		816 bytes	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/organize.h		secondary		435 bytes	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/ossword.h		secondary		11.5 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/ostm.h		secondary		2.8 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/otb.h		secondary		23.4 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/otbbtn.h		secondary		58.9 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/otbcust.h		secondary		3.5 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/otbnull.h		secondary		2.7 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/outline.h		secondary		8.6 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/outspace.h		secondary		13.1 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/pastegallery.h		secondary		6.3 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/pginval.h		secondary		9.7 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/pgp.h		secondary		5.3 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/pgsu.h		secondary		4 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/pic.h		secondary		40 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/picdrag.h		secondary		2.4 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/plcin.h		secondary		5.5 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/pmh.h		secondary		56.6 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/pmhclient.h		secondary		3.9 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/pmhwdso.h		secondary		7.9 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/pmselww2.hs		secondary		2.9 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/pmsww2.hs		secondary		653 bytes	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/pnh.h		secondary		3.3 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/popup.h		secondary		2.3 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/power.h		secondary		3.6 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/prcpytbl.h		secondary		1.1 MB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/prdev.h		secondary		14.6 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/pref.h		secondary		81.7 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/preview.h		secondary		2.8 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/print.h		secondary		30 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/printcmd.h		secondary		26.7 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/prm.h		secondary		80.2 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/prmsgd.h		secondary		868 bytes	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/prompt.h		secondary		15.7 KB	May 28, 2014 5:12:58 PM
dev/word/client/desktop/inc/proof.h		secondary		45 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/proofing.h		secondary		6.6 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/propsht.h		secondary		9.5 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/pubsub.h		secondary		442 bytes	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/qformats.h		secondary		6.4 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/readingmode.h		secondary		8.2 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/refpane.h		secondary		952 bytes	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/regexp.h		secondary		2.4 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/renum.h		secondary		4.2 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/rep.h		secondary		101.6 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/replw2.hs		secondary		778 bytes	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/resource.h		secondary		21.8 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/resumeread.h		secondary		12.6 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/revmarkm.h		secondary		14.9 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/rmarkw2.hs		secondary		1.2 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/rsb.h		secondary		2.5 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/rstr.h		secondary		2.4 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/rt.h		secondary		69.7 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/rtbac.h		secondary		5.3 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/rtd2d.h		secondary		42.8 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/rtd2d_ext.h		secondary		7.3 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/rtgdi.h		secondary		33.4 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/rxv.h		secondary		2 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/save.h		secondary		34.1 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/saveas.hs		secondary		2.5 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/savebkgnd.h		secondary		1016 bytes	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/savemisc.h		secondary		8 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/scc.h		secondary		2.6 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/schemepickers.h		secondary		2.8 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/scrap.h		secondary		9.2 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/scratch.h		secondary		2.9 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/screen.h		secondary		40.4 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/screentp.h		secondary		7.5 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/scrub.h		secondary		7 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/sdmdefs.h		secondary		4.6 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/sdmparse.h		secondary		7.4 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/sdt.h		secondary		91.2 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/sdtsupp.h		secondary		50.8 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/secreadstubs.h		secondary		1.6 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/secureReaderClient.h		secondary		5.7 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/secureReaderHost.h		secondary		6.8 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/sedit.h		secondary		1.2 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/sel.h		secondary		70.6 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/serverdoc.h		secondary		9.1 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/sigspot.h		secondary		3.1 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/sort.h		secondary		14.7 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/splitter.h		secondary		2.6 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/spst.h		secondary		1.2 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/srchw2.hs		secondary		738 bytes	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/statlin_.h		secondary		787 bytes	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/status.h		secondary		9.5 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/strkprc.h		secondary		97.7 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/strktwn.h		secondary		2.6 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/strtbl.h		secondary		43.1 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/style.h		secondary		115.9 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/stylecmd.h		secondary		27.1 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/styleold.h		secondary		4 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/stylepl.h		secondary		2.4 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/styname.h		secondary		636 bytes	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/sumstat.h		secondary		4 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/symbol.h		secondary		3.9 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/table.h		secondary		107 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/tablecmd.h		secondary		10.6 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/tablelive.h		secondary		4.7 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/tablestyles.h		secondary		2.3 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/tbpick.hs		secondary		1.3 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/tbtdef.h		secondary		1.7 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/tcbinmap.h		secondary		1.4 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/tcid.h		secondary		1.2 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/tfc.h		secondary		1.4 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/threadcpo.h		secondary		4.3 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/tlook_.h		secondary		55.8 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/toc.h		secondary		9.6 KB	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/tocw2.hs		secondary		926 bytes	May 28, 2014 5:12:59 PM
dev/word/client/desktop/inc/translationparser.h		secondary		15.6 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/translte.h		secondary		2.7 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/txbx.h		secondary		12 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/uicust.h		secondary		2 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/uim.h		secondary		14.5 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/unistub.h		secondary		4.8 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/unittest.h		secondary		3.9 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/username.hs		secondary		715 bytes	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/uspwrap.h		secondary		4.8 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/usrdlg.hs		secondary		506 bytes	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/utarm.h		secondary		5.1 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/video.h		secondary		1.8 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/viewopts.h		secondary		1.4 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/vis.h		secondary		6 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/vse.h		secondary		4.6 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/wartcore.h		secondary		22.7 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/wip.h		secondary		1.3 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/wmath.h		secondary		40 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/wordOsfControlContainer.h		secondary		2.4 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/wordcapi.h		secondary		6.6 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/wordcbt.h		secondary		1.6 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/wordcolorgallery.h		secondary		1.5 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/wordmail.h		secondary		28.5 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/wordnotes.h		secondary		4 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/wosrr.h		secondary		895 bytes	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/wpmm.h		secondary		6.2 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/wproc.h		secondary		24.9 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/wrdbreak.h		secondary		7.8 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/wrt.h		secondary		7.4 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/wwdhost.h		secondary		4 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/wwecd.h		secondary		29.9 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/wwndd.h		secondary		2.4 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/wwsrvr2.h		secondary		70.3 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/xchutil.h		secondary		29.9 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xml.h		secondary		819 bytes	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmlaml.h		secondary		16.2 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmlaux.h		secondary		870 bytes	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmldiv.h		secondary		776 bytes	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmldoc.h		secondary		7.6 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmldraw.h		secondary		40.4 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/inc/xmlfield.h		secondary		10.4 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmlframe.h		secondary		1.8 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmlin.h		secondary		39.7 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmllist.h		secondary		2.9 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmlmath.h		secondary		3.7 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmlout.h		secondary		49.5 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmlpage.h		secondary		6.9 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmlpara.h		secondary		3.5 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmlpart.h		secondary		1.4 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmlschema.h		secondary		24.4 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmlstyle.h		secondary		6.4 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmlsupp.h		secondary		17.7 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmltbl.h		secondary		10.8 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmltext.h		secondary		9.6 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/xmlvalidate.h		secondary		4.5 KB	May 28, 2014 5:13:00 PM
dev/word/client/desktop/inc/zoomw2.hs		secondary		900 bytes	May 28, 2014 5:13:01 PM
dev/word/client/desktop/inc/ztx.h		secondary		1.7 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/index1.cpp		cpp	1,426 Lines	89 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/index_.h		secondary	8 Lines	18.2 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/init.cpp		cpp	405 Lines	66.2 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/initb.cpp		cpp	9 Lines	2.3 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/initguid.c		cpp		655 bytes	May 28, 2014 5:13:01 PM
dev/word/client/desktop/insert.cpp		cpp	51 Lines	6 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/insfield.cpp		cpp	2,408 Lines	207.2 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/insloop.cpp		cpp	333 Lines	24 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/kerningtest.cpp		cpp		21.6 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/keyevent.cpp		cpp	36 Lines	9 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/kmc.cpp		cpp	133 Lines	11.9 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/label.cpp		cpp	1,799 Lines	131.1 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/lad.cpp		cpp	891 Lines	98.3 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/langclt.cpp		cpp	12 Lines	1.9 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/layer.cpp		cpp	507 Lines	59.5 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/letters.cpp		cpp	1,837 Lines	148.1 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/library.cpp		cpp	1,147 Lines	112.6 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/library.h		secondary		3.5 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/list_.h		secondary		3.6 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/livedrag.cpp		cpp	385 Lines	66.9 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/loadbkgnd.cpp		cpp	102 Lines	25.6 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/macrorec.cpp		cpp	585 Lines	64.6 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/mailnav.cpp		cpp	384 Lines	39.3 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/mapi.cpp		cpp	230 Lines	26.8 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/mathui.cpp		cpp	1,759 Lines	147 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/mathuidata.cpp		cpp	1 Lines	19.3 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/medtok.cpp		cpp	2,069 Lines	155.2 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/metadata.cpp		cpp	67 Lines	4.2 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/metawin.cpp		cpp	32 Lines	6.9 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/mlicore.cpp		cpp	152 Lines	16.5 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/mliexp.cpp		cpp	196 Lines	18.6 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/mliinit.cpp		cpp	25 Lines	5.6 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/mlimain.cpp		cpp	9 Lines	1.4 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/mlisym.cpp		cpp	19 Lines	2.1 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/mru.cpp		cpp	139 Lines	14.9 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/msgbox.cpp		cpp	396 Lines	44.3 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/mso.cpp		cpp	1,615 Lines	168.7 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/msocf.cpp		cpp		487 bytes	May 28, 2014 5:13:01 PM
dev/word/client/desktop/mstudlg.cpp		cpp	1,064 Lines	97.4 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/mwd.cpp		cpp	1,277 Lines	216 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/navpane.cpp		cpp	3,840 Lines	398 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/netuiwrap.cpp		cpp	2 Lines	1.4 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/ntcrtn.cpp		cpp	38 Lines	8 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/numclient.cpp		cpp	91 Lines	12.3 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/numdlg.cpp		cpp	5,913 Lines	458.3 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/numt3.cpp		cpp	889 Lines	66.6 KB	May 28, 2014 5:13:01 PM
dev/word/client/desktop/oartDisp.cpp		cpp	79 Lines	10.5 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/oartHost.cpp		cpp	1,718 Lines	196.6 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/oartTextWrapCallout.cpp		cpp	286 Lines	31.2 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obadvise.cpp		cpp	153 Lines	18 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obapp.cpp		cpp	3,114 Lines	387.3 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obarto.cpp		cpp	371 Lines	212.7 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obautext.cpp		cpp	5 Lines	48.3 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obcoauth.cpp		cpp	383 Lines	42 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obcss.cpp		cpp	253 Lines	20.4 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obdisp.cpp		cpp	671 Lines	53.6 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obdiv.cpp		cpp	356 Lines	35.1 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obdoc.cpp		cpp	9,261 Lines	852.4 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/obdocpart.cpp		cpp	755 Lines	76.8 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obeffects.cpp		cpp	2,724 Lines	311.3 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obenvlab.cpp		cpp	839 Lines	85 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obevents.cpp		cpp	654 Lines	119.8 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obfield.cpp		cpp	1,309 Lines	127.8 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obfmt.cpp		cpp	1,904 Lines	154.8 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obframeset.cpp		cpp	334 Lines	37.5 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obfreeform.cpp		cpp	136 Lines	12.6 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obgen.cpp		cpp	444 Lines	57 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obgen_.h		secondary		8.5 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obgendef.h		secondary	4 Lines	1.3 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obgenric.cpp		cpp	863 Lines	93.7 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/obhand.cpp		cpp	1,123 Lines	105.4 KB	May 28, 2014 5:22:54 PM
dev/word/client/desktop/obkey.cpp		cpp	716 Lines	69.3 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/oblet.cpp		cpp	284 Lines	31.4 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/oblet_.h		secondary		1.1 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obmath.cpp		cpp	905 Lines	111.8 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obmerge.cpp		cpp	818 Lines	84.3 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obnotes.cpp		cpp	919 Lines	83.6 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/obnum.cpp		cpp	865 Lines	124.2 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obole.cpp		cpp	2,609 Lines	215.4 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obproof.cpp		cpp	1,656 Lines	195.2 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/obr.cpp		cpp	115 Lines	8.6 KB	May 28, 2014 5:13:02 PM
dev/word/client/desktop/obrange.cpp		cpp	9,154 Lines	825.1 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/obrec.cpp		cpp	1,054 Lines	193.4 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/obrfm.cpp		cpp	308 Lines	29.5 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/obrmarks.cpp		cpp	919 Lines	156.5 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/obroutsl.cpp		cpp	17 Lines	9.5 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/obsr.cpp		cpp	143 Lines	19.5 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/obsystem.cpp		cpp	133 Lines	16.7 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/obtable.cpp		cpp	2,367 Lines	209.1 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/obtblsty.cpp		cpp	203 Lines	33.8 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/obtextframe2.cpp		cpp	239 Lines	33.5 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/obtom.cpp		cpp	794 Lines	90.6 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/obutil.cpp		cpp	676 Lines	63 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/obvbe.cpp		cpp	955 Lines	188.3 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/obvbe_.h		secondary		2 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/obwindow.cpp		cpp	2,126 Lines	209.4 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/obwrdbas.cpp		cpp	1,348 Lines	111.5 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/obxml.cpp		cpp	2,080 Lines	347.4 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/ocxclnt.cpp		cpp	2,191 Lines	219.8 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/odraw.cpp		cpp	5,290 Lines	541 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/ole2ips.cpp		cpp	1,458 Lines	127.5 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/ole2srvr.cpp		cpp	2,256 Lines	198 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/oleclnt.cpp		cpp	1,929 Lines	167.6 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/olesrvr.cpp		cpp	257 Lines	186.6 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/olesubs2.cpp		cpp	2,316 Lines	193.3 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/olewin.cpp		cpp	88 Lines	9.4 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/olkedit.cpp		cpp	1,655 Lines	233.5 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/openclient.cpp		cpp	718 Lines	57 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/openvir.cpp		cpp	567 Lines	76.4 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/options.cpp		cpp	4,398 Lines	368.5 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/orf.cpp		cpp	42 Lines	5 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/organize.cpp		cpp	679 Lines	39.8 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/osfhost.cpp		cpp	612 Lines	78.3 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/osfom.cpp		cpp	610 Lines	63 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/osfomdata.cpp		cpp	606 Lines	52.5 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/osfomtablematrix.cpp		cpp	678 Lines	59 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/osfomxml.cpp		cpp	310 Lines	32.4 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/ossclnt.cpp		cpp	31 Lines	2.9 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/otb.cpp		cpp	4,010 Lines	369.3 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/otb_.h		secondary		1.5 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/otbbtn.cpp		cpp	1,215 Lines	709.3 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/otbcust.cpp		cpp	725 Lines	69.6 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/otbnull.cpp		cpp	16 Lines	7.5 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/outline.cpp		cpp	1,290 Lines	114 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/outspace.cpp		cpp	828 Lines	96.1 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/outwin.cpp		cpp	1,143 Lines	131.2 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/pagevw.cpp		cpp	582 Lines	51.6 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/palette.cpp		cpp	69 Lines	8.6 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/pansub.cpp		cpp	14 Lines	1.9 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/pastegallery.cpp		cpp	299 Lines	60.5 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/path.cpp		cpp	29 Lines	3 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/pathui.cpp		cpp	221 Lines	17.5 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/pattdlg.cpp		cpp	82 Lines	5.3 KB	May 28, 2014 5:13:03 PM
dev/word/client/desktop/persona.cpp		cpp	235 Lines	36.7 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/pginval.cpp		cpp	461 Lines	50.6 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/pgsetup.cpp		cpp	4,039 Lines	268 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/pic2.cpp		cpp	847 Lines	59.2 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/plmeventing.cpp		cpp	1 Lines	1.3 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/pmh/cmdpmh.cpp		cpp	4,529 Lines	326.8 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/pmh/pmh.cpp		cpp	1,060 Lines	110.4 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/pmh/pmhclient.cpp		cpp	1,032 Lines	68.4 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/pmh/pmhcore.cpp		cpp	1,002 Lines	84.2 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/pmh/pmhdata.cpp		cpp	2,469 Lines	216.9 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/pmh/pmhdde.cpp		cpp	856 Lines	71.6 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/pmh/pmhfetch.cpp		cpp	1,977 Lines	167.2 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/pmh/pmhodbc.cpp		cpp	876 Lines	81.1 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/pmh/pmhodso.cpp		cpp	404 Lines	29.3 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/pmh/pmhwdso.cpp		cpp	458 Lines	75.4 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/pnh.cpp		cpp	90 Lines	9.1 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/pollabel.cpp		cpp	323 Lines	33.5 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/popup.cpp		cpp	551 Lines	44 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/power.cpp		cpp	149 Lines	22.8 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/powerpt.cpp		cpp	81 Lines	6.5 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/prdev.cpp		cpp	29 Lines	3 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/pref.cpp		cpp	667 Lines	74.8 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/pref_.h		secondary		4.6 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/preview.cpp		cpp	1,333 Lines	97.1 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/print1.cpp		cpp	219 Lines	21.3 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/print2.cpp		cpp	372 Lines	28.4 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/printbg.cpp		cpp	150 Lines	16.7 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/printui.cpp		cpp	2,013 Lines	178.5 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/prompt.cpp		cpp	359 Lines	48.7 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/proof.cpp		cpp	250 Lines	31.4 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/proof2.cpp		cpp	386 Lines	47 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/proofing.cpp		cpp	1,109 Lines	98.7 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/propsht.cpp		cpp	524 Lines	43.7 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/propssf.cpp		cpp		373 bytes	May 28, 2014 5:13:04 PM
dev/word/client/desktop/protect.cpp		cpp	1,008 Lines	162.8 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/prsetup.cpp		cpp	382 Lines	30.3 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/qformats.cpp		cpp	1,044 Lines	108.9 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/quit.cpp		cpp	668 Lines	67 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/raremsg.cpp		cpp	229 Lines	22.4 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/rcinit.cpp		cpp	25 Lines	3.3 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/readingmode.cpp		cpp	351 Lines	61.9 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/refpane.cpp		cpp	440 Lines	32.4 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/renum.cpp		cpp	1,749 Lines	134.2 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/replace.cpp		cpp	1,143 Lines	89.9 KB	May 28, 2014 5:13:04 PM
dev/word/client/desktop/resumeread.cpp		cpp	231 Lines	114.3 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/revmark.cpp		cpp	3,347 Lines	288.3 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/rsb.cpp		cpp	95 Lines	9.4 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/rulerdrw.cpp		cpp	741 Lines	51 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/rulrib.cpp		cpp	117 Lines	9.2 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/safearraywrapper.cpp		cpp	188 Lines	28.7 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/saveclient.cpp		cpp	20 Lines	27.9 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/savemisc.cpp		cpp	1,802 Lines	151.9 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/savetext.cpp		cpp	77 Lines	6.3 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/schmpick.cpp		cpp	66 Lines	32.4 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/scrap.cpp		cpp	1 Lines	1.5 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/screen2.cpp		cpp	492 Lines	56.4 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/screentp.cpp		cpp	2,089 Lines	162.9 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/scroll.cpp		cpp	245 Lines	80.2 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/scrub.cpp		cpp	12 Lines	65.5 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/sdtsupp.cpp		cpp	1,995 Lines	209.7 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/sdtui.cpp		cpp	269 Lines	16.9 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/secureReaderClient.cpp		cpp	505 Lines	55.3 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/secureReaderHost.cpp		cpp	927 Lines	85.9 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/serverdoc.cpp		cpp	519 Lines	53.5 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/sort.cpp		cpp	2,172 Lines	189.4 KB	May 28, 2014 5:22:55 PM
dev/word/client/desktop/spelcore.cpp		cpp	84 Lines	7.2 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/spell.cpp		cpp	2,360 Lines	183.3 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/splitter.cpp		cpp	1,138 Lines	82.3 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/spst.cpp		cpp	401 Lines	52.3 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/srchfmt.cpp		cpp	650 Lines	57.4 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/statline.cpp		cpp	248 Lines	25 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/stmmisc.cpp		cpp	827 Lines	93.9 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/styleclient.cpp		cpp		10.4 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/stylecmd.cpp		cpp	4,712 Lines	387.4 KB	May 28, 2014 5:22:56 PM
dev/word/client/desktop/symbol.cpp		cpp	635 Lines	70 KB	May 28, 2014 5:22:56 PM
dev/word/client/desktop/syschgclient.cpp		cpp	156 Lines	11.4 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/tablecmd.cpp		cpp	75 Lines	7.5 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/tablestyles.cpp		cpp	139 Lines	31 KB	May 28, 2014 5:13:10 PM
dev/word/client/desktop/tabs.cpp		cpp	776 Lines	60.5 KB	May 28, 2014 5:22:56 PM
dev/word/client/desktop/tbllook.cpp		cpp	553 Lines	45.4 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/teDesktopOnly.cpp		cpp	61 Lines	7.9 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/tellme.cpp		cpp	3 Lines	703 bytes	May 28, 2014 5:13:11 PM
dev/word/client/desktop/tfc.cpp		cpp	169 Lines	17.7 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/toa.cpp		cpp	1,317 Lines	90.9 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/toc.cpp		cpp	2,658 Lines	162 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/toc_.h		secondary	22 Lines	17.3 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/translte.cpp		cpp	491 Lines	37.8 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/uicust.cpp		cpp	2,358 Lines	199.7 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/uicust_.h		secondary	10 Lines	8.2 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/uim.cpp		cpp	705 Lines	58.7 KB	May 28, 2014 5:22:56 PM
dev/word/client/desktop/uimglobals.cpp		cpp	2 Lines	1.4 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/uimts.cpp		cpp	188 Lines	17.5 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/undo.cpp		cpp	18 Lines	39.8 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unicode.cpp		cpp	4 Lines	1 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unistub.cpp		cpp	22 Lines	3.6 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest.cpp		cpp	70 Lines	36.7 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/arrayxtest.cpp		cpp	19 Lines	31.9 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/disputiltest.cpp		cpp	13 Lines	26.9 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/grpfvisitest.cpp		cpp	7 Lines	18.3 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/lidkbdtest.cpp		cpp	13 Lines	1.6 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/mietest.cpp		cpp	67 Lines	41.8 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/mtxitest.cpp		cpp	18 Lines	19.5 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/numericruntest.cpp		cpp	34 Lines	37.5 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/ofxtest.cpp		cpp	18 Lines	11.9 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/plctest.cpp		cpp	18 Lines	31.3 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/printtest.cpp		cpp	3 Lines	1.1 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/proofcompletedtest.cpp		cpp	11 Lines	2.1 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/proofsqmtest.cpp		cpp	6 Lines	2 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/rdbrushtest.cpp		cpp	6 Lines	5.5 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/rmtxtests.cpp		cpp	7 Lines	4.4 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/rtbrtest.cpp		cpp	43 Lines	50.8 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/rtpentest.cpp		cpp	35 Lines	32.9 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/rtrgntest.cpp		cpp	66 Lines	105.5 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/rttest.cpp		cpp	11 Lines	36.6 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/rttest.h		secondary		24.2 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/rttexttest.cpp		cpp	3 Lines	10.3 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/savefasttest.cpp		cpp	3 Lines	2.6 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/scriptbreaktest.cpp		cpp	7 Lines	7.2 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/scriptitemizetest.cpp		cpp	6 Lines	24.1 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/udtest.cpp		cpp	4 Lines	1.9 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/videotest.cpp		cpp	4 Lines	7.1 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/unittest/wordmailtest.cpp		cpp	4 Lines	1 KB	May 28, 2014 5:22:56 PM
dev/word/client/desktop/unittest/wwndtest.cpp		cpp	4 Lines	2.6 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/utarm.cpp		cpp	134 Lines	20.3 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/utilclt.cpp		cpp	20 Lines	3.3 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/video.cpp		cpp	410 Lines	39 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/vse.cpp		cpp	371 Lines	45.2 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/win.cpp		cpp	1,020 Lines	82 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/wip.cpp		cpp	130 Lines	18.3 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/wminspct.cpp		cpp	78 Lines	13.4 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/wordOsfControlContainer.cpp		cpp	34 Lines	9.6 KB	May 28, 2014 5:13:12 PM
dev/word/client/desktop/wordcolorgallery.cpp		cpp	785 Lines	78.2 KB	May 28, 2014 5:13:11 PM
dev/word/client/desktop/wordfloatieuser.cpp		cpp	3 Lines	1.3 KB	May 28, 2014 5:13:12 PM
dev/word/client/desktop/wordmail.cpp		cpp	1,853 Lines	293.4 KB	May 28, 2014 5:22:56 PM
dev/word/client/desktop/wproc.cpp		cpp	772 Lines	221.8 KB	May 28, 2014 5:22:56 PM
dev/word/client/desktop/wrdbreak.cpp		cpp	319 Lines	30.4 KB	May 28, 2014 5:22:56 PM
dev/word/client/desktop/wwd.cpp		cpp	19 Lines	105.7 KB	May 28, 2014 5:22:56 PM
dev/word/client/desktop/wwdhost.cpp		cpp	127 Lines	14.4 KB	May 28, 2014 5:13:12 PM
dev/word/client/desktop/wwlib.cpp		cpp	2 Lines	324 bytes	May 28, 2014 5:13:12 PM
dev/word/client/desktop/wwnd.cpp		cpp	79 Lines	14.1 KB	May 28, 2014 5:13:12 PM
dev/word/client/desktop/xmlfield.cpp		cpp	19 Lines	1.5 KB	May 28, 2014 5:13:12 PM
dev/word/client/desktop/xmlmappingpane.cpp		cpp	850 Lines	76.5 KB	May 28, 2014 5:13:12 PM
dev/word/client/desktop/xmlschema.cpp		cpp	919 Lines	434 KB	May 28, 2014 5:13:12 PM
dev/word/client/desktop/xmlui.cpp		cpp	210 Lines	14.7 KB	May 28, 2014 5:13:12 PM
dev/word/client/desktop/xmlvalidate.cpp		cpp	20 Lines	111.5 KB	May 28, 2014 5:13:12 PM
dev/word/client/desktop/xref.cpp		cpp	922 Lines	63 KB	May 28, 2014 5:13:12 PM
dev/word/client/desktop/xref_.h		secondary	2 Lines	4.7 KB	May 28, 2014 5:13:12 PM
dev/word/client/desktop/xsd.cpp		cpp		721 bytes	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/AppInputManager.cpp		cpp	15 Lines	3.2 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/AppMouseTool.cpp		cpp	12 Lines	3.5 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/AppTouchTool.cpp		cpp	8 Lines	4.7 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/CImWordProgressUI.cpp		cpp	37 Lines	10.8 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/CKeyEventAdapterIm.cpp		cpp	73 Lines	13.4 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/COartPrinterD2d.cpp		cpp	28 Lines	6 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/CtxTabUser.cpp		cpp	14 Lines	3.2 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/CtxTabUser.h		secondary		1.5 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/DataLossTracking.cpp		cpp	131 Lines	23.2 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/FastKeyEventHandlerAppImpl.cpp		cpp	44 Lines	5.2 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/FastPrintTaskAppImpl.cpp		cpp	95 Lines	10.7 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/FastReadingPaneViewAppImpl.cpp		cpp	31 Lines	4.7 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/FastWordViewAppImpl.cpp		cpp	32 Lines	4.2 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/Fieldcmd.cpp		cpp		9 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/PLMEventing.cpp		cpp	136 Lines	27.7 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/TableMarks.cpp		cpp	1 Lines	1.8 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/WicFactory.cpp		cpp	18 Lines	2.1 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/WordActivation.cpp		cpp	15 Lines	4.8 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/WordGalBulNum.cpp		cpp	155 Lines	27.1 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/WordGalBulNum.h		secondary		4.6 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/WordGalTextFlow.cpp		cpp	64 Lines	11.7 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/WordGalTextFlow.h		secondary		2 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/WordUIAHelpers.cpp		cpp	5 Lines	6.3 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/acetate.cpp		cpp	1 Lines	897 bytes	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/acetate2.cpp		cpp	117 Lines	12.8 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/applicationdocumentsuser.cpp		cpp	268 Lines	25.7 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/applicationdocumentsuser.h		secondary		2.2 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/appmode.cpp		cpp	1 Lines	638 bytes	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/appmode_imm.cpp		cpp	1 Lines	610 bytes	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/appmode_wp.cpp		cpp	1 Lines	621 bytes	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/atnpopout.cpp		cpp	205 Lines	24.7 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/barupd.cpp		cpp	48 Lines	7 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/bibcore.cpp		cpp	20 Lines	2.1 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/bootim.cpp		cpp	213 Lines	21.7 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/cdscmd.cpp		cpp	19 Lines	5.8 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/cdskme.cpp		cpp	52 Lines	11.8 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/clipboard_winrt.cpp		cpp	3 Lines	1.5 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/cmdcore.cpp		cpp	86 Lines	4.1 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/cmdlang.h		secondary		892 bytes	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/cmdlangim.cpp		cpp	179 Lines	17.5 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/cmdsel.cpp		cpp	2 Lines	785 bytes	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/controluserapp.cpp		cpp	2 Lines	810 bytes	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/controluserapp.h		secondary	1 Lines	1.2 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/crtd2dprintimmersive.cpp		cpp	49 Lines	6 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/ctlFCIApp.cpp		cpp	84 Lines	8.2 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/ctlFCIApp.h		secondary		1.1 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/ctlfactoryapp.cpp		cpp	68 Lines	10 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/ctlfactoryapp.h		secondary	1 Lines	1.5 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/cursor_app.cpp		cpp	16 Lines	4.4 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/directorywrappers.cpp		cpp	1 Lines	1 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/disp1.cpp		cpp	10 Lines	5 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/disp3.cpp		cpp	6 Lines	4.7 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/dllmainim.cpp		cpp	15 Lines	1.1 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/doc.cpp		cpp	7 Lines	6 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/encryptedfiles_imm.cpp		cpp	27 Lines	2.4 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/encryptedfiles_wp.cpp		cpp	3 Lines	1.1 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/fieldfmt.cpp		cpp	3 Lines	1.5 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/fields.cpp		cpp		1.1 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/filename.cpp		cpp	1 Lines	780 bytes	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/findrplc.cpp		cpp	104 Lines	11 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/findwinrt.cpp		cpp	51 Lines	8 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/fmfactory.cpp		cpp	27 Lines	6.1 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/fmtimer.cpp		cpp	18 Lines	3.5 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/fmtimer.h		secondary		2.1 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/fnmnew.cpp		cpp	4 Lines	2.9 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/fontcontrols.cpp		cpp	126 Lines	17.4 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/fontcontrols.h		secondary	1 Lines	3.6 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/idle.cpp		cpp	35 Lines	24 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/ime.cpp		cpp	19 Lines	7.1 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/immzoom.cpp		cpp	107 Lines	17.2 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/inc/CKeyEventAdapterIm.h		secondary		1.8 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/inc/coartprinterd2d.h		secondary		1.4 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/initb.cpp		cpp	11 Lines	2.7 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/initcoreim.cpp		cpp	60 Lines	9.3 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/inputlang.cpp		cpp	9 Lines	2.2 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/layer.cpp		cpp	80 Lines	13.6 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/layout.cpp		cpp	2 Lines	1.3 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/linespacingcontrols.cpp		cpp	35 Lines	5.1 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/linespacingcontrols.h		secondary		1.3 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/loadfont.cpp		cpp	3 Lines	2.6 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/lsdisp.cpp		cpp	1 Lines	685 bytes	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/lshelpge.cpp		cpp	2 Lines	1.1 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/lshelpmath.cpp		cpp	2 Lines	2 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/macrorec.cpp		cpp	20 Lines	2.3 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/mailmergeim.cpp		cpp	11 Lines	2.6 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/metroin.cpp		cpp	10 Lines	2.9 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/metroout.cpp		cpp	73 Lines	6.1 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/mwd.cpp		cpp	96 Lines	17.4 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/numdlg.cpp		cpp	113 Lines	11.1 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/oartconv.cpp		cpp	34 Lines	4.4 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/ofx.cpp		cpp	11 Lines	3.9 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/open.cpp		cpp	3 Lines	3.7 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/osfhostimm.cpp		cpp	20 Lines	1.8 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/pagevw.cpp		cpp	7 Lines	1.9 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/pansub.cpp		cpp	2 Lines	1.4 KB	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/path.cpp		cpp	2 Lines	949 bytes	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/pginval.cpp		cpp		968 bytes	May 28, 2014 5:13:12 PM
dev/word/client/fastmodel/pic.cpp		cpp	80 Lines	10.8 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/pmhwdso.cpp		cpp		832 bytes	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/print.cpp		cpp	35 Lines	4.1 KB	May 28, 2014 5:22:56 PM
dev/word/client/fastmodel/prompt.cpp		cpp	98 Lines	14 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/proof2.cpp		cpp	29 Lines	10 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/quit.cpp		cpp	5 Lines	1.1 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/readingmode.cpp		cpp	147 Lines	27.7 KB	May 28, 2014 5:22:57 PM
dev/word/client/fastmodel/revmark.cpp		cpp	52 Lines	3.8 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/rt.cpp		cpp	4 Lines	2.7 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/rtd2d.cpp		cpp	109 Lines	14.7 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/rtdi.cpp		cpp	3 Lines	1.4 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/rtfont.cpp		cpp	170 Lines	22.8 KB	May 28, 2014 5:22:57 PM
dev/word/client/fastmodel/rtrgn.cpp		cpp	28 Lines	6.5 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/rulerdrw.cpp		cpp	44 Lines	10.2 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/rulrib.cpp		cpp	4 Lines	3.5 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/saveStreamManager.cpp		cpp	152 Lines	19.9 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/savebin.cpp		cpp	52 Lines	8.6 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/saveimm.h		secondary		325 bytes	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/scroll.cpp		cpp	5 Lines	5.9 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/spell.cpp		cpp	7 Lines	4 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/spellControlApp.cpp		cpp	153 Lines	16.5 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/spellControlApp.h		secondary		2.1 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/spellCorrectionApp.cpp		cpp	133 Lines	13.2 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/spellCorrectionApp.h		secondary		1.5 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/statline.cpp		cpp	44 Lines	5.8 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/stylecmd.cpp		cpp	1 Lines	777 bytes	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/tablecmd.cpp		cpp	5 Lines	1.3 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/tedesktoponly.cpp		cpp	5 Lines	4.9 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/uim.cpp		cpp	61 Lines	6.8 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/uimglobals.cpp		cpp	17 Lines	3.2 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/uimts.cpp		cpp	47 Lines	9.2 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/unittest/PromptUnitTest.cpp		cpp	18 Lines	6.3 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/util.cpp		cpp	5 Lines	1.1 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/wordfloatieuser.cpp		cpp	159 Lines	15.1 KB	May 28, 2014 5:22:57 PM
dev/word/client/fastmodel/wordstylesgallery.cpp		cpp	83 Lines	9.9 KB	May 28, 2014 5:22:57 PM
dev/word/client/fastmodel/wordstylesgallery.h		secondary		2 KB	May 28, 2014 5:13:13 PM
dev/word/client/fastmodel/wwd.cpp		cpp	38 Lines	19.5 KB	May 28, 2014 5:22:57 PM
dev/word/client/fastmodel/wwnd.cpp		cpp	212 Lines	27.3 KB	May 28, 2014 5:22:57 PM
dev/word/client/fastmodel/xmlstyle.cpp		cpp	22 Lines	1.6 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/CIdleHealthMonitor.cpp		cpp	84 Lines	10.7 KB	May 28, 2014 5:22:57 PM
dev/word/client/shared/Cmdhelp.cpp		cpp	2 Lines	1.1 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/DocMergeComputation.cpp		cpp	8 Lines	62.5 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/Doccomp.cpp		cpp	23 Lines	3.2 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/TETableColSel.cpp		cpp	74 Lines	7.8 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/TETableRowSel.cpp		cpp	30 Lines	3.3 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/TEText.cpp		cpp	1,982 Lines	180.5 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/TextEffects.cpp		cpp	1,520 Lines	132.9 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/TouchInputUtil.cpp		cpp	19 Lines	2.4 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/WebScalingFetchModifier.cpp		cpp	13 Lines	3.6 KB	May 28, 2014 5:13:21 PM
dev/word/client/shared/WordRulesEngineTelemetryClient.cpp		cpp	9 Lines	2.5 KB	May 28, 2014 5:13:21 PM
dev/word/client/shared/acetate.cpp		cpp	1,002 Lines	108.7 KB	May 28, 2014 5:22:57 PM
dev/word/client/shared/acetate2.cpp		cpp	993 Lines	122 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/acnotify.cpp		cpp	767 Lines	218.9 KB	May 28, 2014 5:22:57 PM
dev/word/client/shared/afmt.cpp		cpp	2,499 Lines	273.7 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/afmtlex.cpp		cpp	1,232 Lines	198.7 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/afmtrul2.cpp		cpp	799 Lines	70 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/afmtrule.cpp		cpp	204 Lines	35.2 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/afmtruli.cpp		cpp	1 Lines	1.6 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/annot.cpp		cpp	450 Lines	52.8 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/annotdisp.cpp		cpp	98 Lines	11.5 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/annotinkdisp.cpp		cpp	6 Lines	1.2 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/app/AppInputManager.cpp		cpp	281 Lines	45.9 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/app/AppMouseTool.cpp		cpp	160 Lines	18.9 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/app/AppTouchTool.cpp		cpp	135 Lines	18.8 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/app/FastMainCanvasAppImpl.cpp		cpp	22 Lines	4 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/app/FastReadingPaneDocumentAppImpl.cpp		cpp	68 Lines	10.4 KB	May 28, 2014 5:22:57 PM
dev/word/client/shared/app/FastReadingPaneDocumentPartAppImpl.cpp		cpp	2 Lines	4.1 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/app/FastWordDocumentAppImpl.cpp		cpp	177 Lines	19.7 KB	May 28, 2014 5:22:57 PM
dev/word/client/shared/app/FastWordWindowAppImpl.cpp		cpp	29 Lines	5.7 KB	May 28, 2014 5:22:57 PM
dev/word/client/shared/app/MessageBarInfo.cpp		cpp	34 Lines	6.3 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/app/ReadingPaneDocumentUIHostE2o.cpp		cpp	61 Lines	27.9 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/app/factoid_shared.cpp		cpp	7 Lines	774 bytes	May 28, 2014 5:13:13 PM
dev/word/client/shared/app/wordcoreappimpl.cpp		cpp	186 Lines	25.4 KB	May 28, 2014 5:22:57 PM
dev/word/client/shared/assist.cpp		cpp	1,785 Lines	168.4 KB	May 28, 2014 5:22:57 PM
dev/word/client/shared/atnpopout.cpp		cpp	57 Lines	60.3 KB	May 28, 2014 5:22:57 PM
dev/word/client/shared/autocorr.cpp		cpp	549 Lines	60.6 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/autosig.cpp		cpp	19 Lines	1.5 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/block.cpp		cpp	304 Lines	27 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/blogsupp.cpp		cpp	6 Lines	615 bytes	May 28, 2014 5:13:13 PM
dev/word/client/shared/bootglob.cpp		cpp	8 Lines	4.3 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/bootshared.cpp		cpp	17 Lines	2.4 KB	May 28, 2014 5:22:57 PM
dev/word/client/shared/border.cpp		cpp	1,431 Lines	124.9 KB	May 28, 2014 5:22:57 PM
dev/word/client/shared/cdscmd.cpp		cpp	2,177 Lines	174.8 KB	May 28, 2014 5:13:13 PM
dev/word/client/shared/cdscust.cpp		cpp	275 Lines	27.8 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/cdshelpr.cpp		cpp	57 Lines	6.3 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/cdskme.cpp		cpp	63 Lines	10 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/cdsmcr.cpp		cpp	372 Lines	34.2 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/cdstcg.cpp		cpp	143 Lines	30 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/clipcopy.cpp		cpp	495 Lines	42.1 KB	May 28, 2014 5:22:57 PM
dev/word/client/shared/clipfmthtml.cpp		cpp	89 Lines	7.7 KB	May 28, 2014 5:22:57 PM
dev/word/client/shared/clipfmtinternal.cpp		cpp	9 Lines	4.7 KB	May 28, 2014 5:22:57 PM
dev/word/client/shared/clipfmttext.cpp		cpp	99 Lines	11.1 KB	May 28, 2014 5:22:57 PM
dev/word/client/shared/clippaste.cpp		cpp	238 Lines	25.8 KB	May 28, 2014 5:22:57 PM
dev/word/client/shared/cmd2.cpp		cpp	446 Lines	28.9 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/cmd3.cpp		cpp	146 Lines	8.4 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/cmdcore.cpp		cpp	1,759 Lines	154.1 KB	May 28, 2014 5:22:58 PM
dev/word/client/shared/cmdframe.cpp		cpp	117 Lines	10.1 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/cmdlang.cpp		cpp	302 Lines	30.4 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/cmdsel.cpp		cpp	2,131 Lines	150.4 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/coauth.cpp		cpp	2 Lines	19.1 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/coauthlocks.cpp		cpp	12 Lines	1.8 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/columns.cpp		cpp	331 Lines	37.1 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/InProcTests/ClientTestSample.cpp		cpp	9 Lines	3.9 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/InProcTests/TestBulletsAndNumbering.cpp		cpp	26 Lines	5.3 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/InProcTests/TestComments.cpp		cpp	23 Lines	4.3 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/InProcTests/TestCutCopyPaste.cpp		cpp	9 Lines	5.6 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/InProcTests/TestEmbedFont.cpp		cpp	22 Lines	4.3 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/InProcTests/TestFields.cpp		cpp	25 Lines	6.1 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/InProcTests/TestFormatCaching.cpp		cpp	119 Lines	14.6 KB	May 28, 2014 5:22:58 PM
dev/word/client/shared/comptest/InProcTests/TestInprocFramework.cpp		cpp	5 Lines	2.6 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/InProcTests/TestInputStack.cpp		cpp	101 Lines	15.8 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/InProcTests/TestOdttf.h		secondary		37.6 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/InProcTests/TestStyles.cpp		cpp	97 Lines	9.4 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/InProcTests/TestTables.cpp		cpp	40 Lines	20.5 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/InProcTests/TestTextHighlight.cpp		cpp	90 Lines	11.9 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/TaskLibClient.cpp		cpp	291 Lines	40.3 KB	May 28, 2014 5:22:58 PM
dev/word/client/shared/comptest/TestCharacterFormat.cpp		cpp	166 Lines	20.2 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/TestFormatPara.cpp		cpp	109 Lines	12.7 KB	May 28, 2014 5:22:58 PM
dev/word/client/shared/comptest/TestLserrFetchPap.cpp		cpp	121 Lines	13.4 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/TestParagraphFormat.cpp		cpp	34 Lines	20.6 KB	May 28, 2014 5:22:58 PM
dev/word/client/shared/comptest/TestReadingMode.cpp		cpp	32 Lines	5.7 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/TestTextBox.cpp		cpp	36 Lines	6.9 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/TestViews.cpp		cpp	40 Lines	4.8 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/TestWebScalingMode.cpp		cpp	36 Lines	5.3 KB	May 28, 2014 5:13:14 PM
dev/word/client/shared/comptest/WordGRF.cpp		cpp	279 Lines	41.8 KB	May 28, 2014 5:22:58 PM
dev/word/client/shared/comptest/WordGRFCommands.cpp		cpp	260 Lines	163.9 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/comptest/WordGRFSimulateKeyboardInputSpecialUseCommand.cpp		cpp	16 Lines	1.9 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/comptest/WordTables.cpp		cpp	21 Lines	1.8 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/cookie.cpp		cpp	46 Lines	5.7 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/corout.cpp		cpp	332 Lines	45.4 KB	May 28, 2014 5:22:58 PM
dev/word/client/shared/ct_stub/ct_stub.cpp		cpp	2 Lines	1.3 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/curskeys.cpp		cpp	2,331 Lines	161.7 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/cursor.cpp		cpp	639 Lines	38.3 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/curswin.cpp		cpp	482 Lines	52.7 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/daterule.cpp		cpp	184 Lines	23.6 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/dateruli.cpp		cpp	1 Lines	1.6 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/dialog1.cpp		cpp	20 Lines	6.3 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/dialog3.cpp		cpp	134 Lines	12.1 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/disp2.cpp		cpp	363 Lines	195.4 KB	May 28, 2014 5:22:58 PM
dev/word/client/shared/disp3.cpp		cpp	7,330 Lines	559.3 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/displayfli.cpp		cpp	1,124 Lines	82 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/disppage.cpp		cpp	1,588 Lines	148 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/dispspec.cpp		cpp	54 Lines	22.6 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/disptbl.cpp		cpp	1,275 Lines	320.3 KB	May 28, 2014 5:22:58 PM
dev/word/client/shared/disputil.cpp		cpp	70 Lines	7.6 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/dispzoom.cpp		cpp	331 Lines	26.4 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/dlgdoc.cpp		cpp	9 Lines	1.3 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/dlghyph.cpp		cpp	25 Lines	1.8 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/dlglook1.cpp		cpp	1,379 Lines	90.9 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/dlgmisc.cpp		cpp	11 Lines	20.3 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/dlgsave.cpp		cpp	22 Lines	11.8 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/dlgsdm.cpp		cpp	22 Lines	3.7 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/dlgtable.cpp		cpp	725 Lines	66.8 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/doc.cpp		cpp		13.4 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/doccomp_shared.cpp		cpp	3,758 Lines	1,000.2 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/drag.cpp		cpp	1,007 Lines	105.1 KB	May 28, 2014 5:13:15 PM
dev/word/client/shared/drawcmd.cpp		cpp	532 Lines	45.6 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/drm.cpp		cpp	30 Lines	2.3 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/dttmacmp.cpp		cpp	218 Lines	25 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/e2osync.cpp		cpp	470 Lines	46.5 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/e2otext.cpp		cpp	484 Lines	66.2 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/ecdclnt.cpp		cpp	33 Lines	3.6 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/editlink.cpp		cpp	114 Lines	7.9 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/eldttm.cpp		cpp	194 Lines	33.8 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/enctext.cpp		cpp	55 Lines	4.5 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/etcmd.cpp		cpp	4 Lines	1.2 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/fail.cpp		cpp		2.3 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/fcc.cpp		cpp	1,493 Lines	163.7 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/fieldcmd.cpp		cpp	2,515 Lines	201.9 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/fieldspc.cpp		cpp	32 Lines	2.9 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/filline.cpp		cpp	1,168 Lines	89.6 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/findrplc.cpp		cpp	2,343 Lines	184.7 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/fmcacheapp.cpp		cpp	47 Lines	5 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/fmtpane.cpp		cpp	106 Lines	12.6 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/fnexpt.cpp		secondary	84 Lines	9.4 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/fnmshared.cpp		cpp	16 Lines	3 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/footnote.cpp		cpp	22 Lines	3.3 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/form.cpp		cpp	206 Lines	14.7 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/frame.cpp		cpp	1,409 Lines	120.4 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/fuzzy.cpp		cpp	1,005 Lines	61.2 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/gih.cpp		cpp	8 Lines	2.3 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/glossary.cpp		cpp	1,007 Lines	68.7 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/glsy.cpp		cpp	670 Lines	79.4 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/grammar.cpp		cpp	158 Lines	16.6 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/hddcmd.cpp		cpp	169 Lines	21 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/heac.cpp		cpp	673 Lines	53.1 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/ht.cpp		cpp	762 Lines	76.8 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/hyph.cpp		cpp	39 Lines	22.5 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/hyplink.cpp		cpp	426 Lines	30.7 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/idle.cpp		cpp	116 Lines	15.3 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/imecmd.cpp		cpp	30 Lines	2.7 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/imercnv.cpp		cpp	361 Lines	27.6 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/immzoom.cpp		cpp	527 Lines	76.4 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/AppInputManager.h		secondary		7.1 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/AppMouseTool.h		secondary		3.1 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/AppTools.h		secondary		1.9 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/AppTouchTool.h		secondary		3.4 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/CIdleHealthMonitor.h		secondary		5.3 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/inc/DocMergeComputation.h		secondary		1.4 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/DocMergeLocks.h		secondary		218 bytes	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/DocMergeUI.h		secondary		428 bytes	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/IIdleHealthMonitor.h		secondary		1.3 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/inc/ReadingPaneDocumentUIHostE2o.h		secondary		373 bytes	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/TETableColSel.h		secondary		959 bytes	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/TETableRowSel.h		secondary		959 bytes	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/WebScalingFetchModifier.h		secondary		806 bytes	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/WordRulesEngineTelemetryClient.h		secondary		1 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/acetate2_internal.h		secondary		18.9 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/acetate_internal.h		secondary		3.4 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/clip.h		secondary		6.5 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/inc/cmdcore.h		secondary		674 bytes	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/cmdshared.h		secondary		1 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/defcalloutwrap.h		secondary		394 bytes	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/dispzoom.h		secondary		717 bytes	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/fcc_internal.h		secondary		21.8 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/fieldcmd.h		secondary		22.9 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/fieldfmt_.h		secondary		466 bytes	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/fmcacheapp.h		secondary		1.2 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/gih.h		secondary		3.3 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/ht.h		secondary		12.3 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/insertsm.h		secondary		1.7 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/kmc.h		secondary		2.8 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/layer_internal.h		secondary		39.8 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/layout_.h		secondary		386 bytes	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/loadfont_.h		secondary		630 bytes	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/lsdisp_.h		secondary		510 bytes	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/lshelpge_.h		secondary		765 bytes	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/lshelpmath_.h		secondary		1.1 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/msocf.h		secondary		1.5 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/netuiwrap.h		secondary		358 bytes	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/numproto.h		secondary		42.4 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/oartcmd.h		secondary		4.9 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/readfetchmod.h		secondary		3 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/renum_.h		secondary		6.3 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/ruler.h		secondary		28.8 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/scroll.h		secondary		646 bytes	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/selexpansion.h		secondary		718 bytes	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/te.h		secondary		5.2 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/teBullets.h		secondary		2.9 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/teColumnSelection.h		secondary		3.2 KB	May 28, 2014 5:13:16 PM
dev/word/client/shared/inc/teDimmed.h		secondary		2.3 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teDispatcher.h		secondary		2.4 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teDrawing.h		secondary		7.2 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teDropDown.h		secondary		1.1 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teE1oAnchor.h		secondary		1.9 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teE2oAnchor.h		secondary		1.8 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teFactory.h		secondary		2 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teFormField.h		secondary		1.2 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teFourCorners.h		secondary		945 bytes	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teFrame.h		secondary		2.3 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teGraphics.h		secondary		2.2 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teHdrFtr.h		secondary		1.4 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teHyperlink.h		secondary		1.7 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teImmTxbx.h		secondary		884 bytes	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teImmersiveZoom.h		secondary		834 bytes	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teImplDrg.h		secondary		2.2 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teMarginBetweenPages.h		secondary		881 bytes	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teMathAcetate.h		secondary		1.2 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teOle.h		secondary		1004 bytes	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teOutlineView.h		secondary		3.1 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/tePicHilite.h		secondary		1.7 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teSymbol.h		secondary		1.2 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teTableCell.h		secondary		2.1 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teTableCol.h		secondary		2.2 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teTableInsertColRow.h		secondary		1.5 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teTableInsertLine.h		secondary		1.1 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teTableResizeMove.h		secondary		2.6 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teTableRow.h		secondary		2 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teTableTextHandler.h		secondary		1.9 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teText.h		secondary		13.1 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teTextWithDrdoUnderneath.h		secondary		1.3 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teTextboxLink.h		secondary		1.4 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teThumbnailView.h		secondary		1.9 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teTool.h		secondary		1.6 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teTouchAcetate.h		secondary		957 bytes	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teTouchConsumptionText.h		secondary		1.3 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teTouchE2o.h		secondary		2.4 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teTouchEditText.h		secondary		3.3 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teTouchFishBowl.h		secondary		969 bytes	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teTouchGrippy.h		secondary		3.9 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teTouchTool.h		secondary		985 bytes	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/tefootendnote.h		secondary		1.2 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/teparabdr.h		secondary		2 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/terevpane.h		secondary		1.8 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/termpageturnbtn.h		secondary		1.4 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/tetableimm.h		secondary		1 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/tetesthelper.h		secondary		1.4 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/undo.h		secondary		28.5 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/wrappers.h		secondary		13.7 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/inc/wwnd.h		secondary		2.6 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/init.cpp		cpp	44 Lines	7.1 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/initb.cpp		cpp	159 Lines	16 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/inputstate.cpp		cpp	27 Lines	6.7 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/insert.cpp		cpp	4 Lines	1.8 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/insfield.cpp		cpp	35 Lines	3.7 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/insights.cpp		cpp	65 Lines	6.8 KB	May 28, 2014 5:13:17 PM
dev/word/client/shared/insloop.cpp		cpp	3,641 Lines	279.5 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/intentSearch.cpp		cpp	3 Lines	783 bytes	May 28, 2014 5:13:18 PM
dev/word/client/shared/kmc.cpp		cpp	448 Lines	38.8 KB	May 28, 2014 5:13:18 PM
dev/word/client/shared/lad.cpp		cpp	277 Lines	22.9 KB	May 28, 2014 5:13:18 PM
dev/word/client/shared/layer.cpp		cpp	4,636 Lines	497.9 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/loadfont.cpp		cpp	9 Lines	1.6 KB	May 28, 2014 5:13:18 PM
dev/word/client/shared/markline.cpp		cpp	1,105 Lines	87.2 KB	May 28, 2014 5:13:18 PM
dev/word/client/shared/mathui.cpp		cpp	118 Lines	9.4 KB	May 28, 2014 5:13:18 PM
dev/word/client/shared/mie.cpp		cpp	37 Lines	7.2 KB	May 28, 2014 5:13:18 PM
dev/word/client/shared/mlicore.cpp		cpp	80 Lines	10.8 KB	May 28, 2014 5:13:18 PM
dev/word/client/shared/mntr.cpp		cpp	1,597 Lines	180.4 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/mntrrule.cpp		cpp	451 Lines	44 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/mntrruli.cpp		cpp	2 Lines	1.3 KB	May 28, 2014 5:13:18 PM
dev/word/client/shared/mntrscan.cpp		cpp	242 Lines	29.3 KB	May 28, 2014 5:13:18 PM
dev/word/client/shared/mwd.cpp		cpp	67 Lines	9.2 KB	May 28, 2014 5:13:18 PM
dev/word/client/shared/numclient.cpp		cpp	659 Lines	174.8 KB	May 28, 2014 5:13:18 PM
dev/word/client/shared/numdlg.cpp		cpp	3,529 Lines	305.3 KB	May 28, 2014 5:13:18 PM
dev/word/client/shared/numt3.cpp		cpp	8 Lines	1.3 KB	May 28, 2014 5:13:18 PM
dev/word/client/shared/oartDisp.cpp		cpp	750 Lines	66.7 KB	May 28, 2014 5:13:18 PM
dev/word/client/shared/oartHost.cpp		cpp	2,278 Lines	400.2 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/oartcmd.cpp		cpp	1,732 Lines	185.2 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/ocxclnt.cpp		cpp	21 Lines	2.2 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/odraw.cpp		cpp	535 Lines	37 KB	May 28, 2014 5:13:18 PM
dev/word/client/shared/olkshared.cpp		cpp	13 Lines	8.7 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/open.cpp		cpp	6 Lines	2.8 KB	May 28, 2014 5:13:18 PM
dev/word/client/shared/osfmerge.cpp		cpp	197 Lines	20.1 KB	May 28, 2014 5:13:18 PM
dev/word/client/shared/otb.cpp		cpp	168 Lines	13.5 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/otbbtn.cpp		cpp	69 Lines	4.8 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/outline.cpp		cpp	158 Lines	14.7 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/pagevw.cpp		cpp	5,074 Lines	398 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/pastemod.cpp		cpp	314 Lines	44.1 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/pginval.cpp		cpp	317 Lines	42.8 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/pgsetup.cpp		cpp	413 Lines	34.1 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/pic2.cpp		cpp	101 Lines	11.1 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/pictdrag.cpp		cpp	365 Lines	30.9 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/print.cpp		cpp	12 Lines	2.9 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/prompt.cpp		cpp	461 Lines	33.5 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/proof.cpp		cpp	740 Lines	74.3 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/proof2.cpp		cpp	1,767 Lines	161 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/protect.cpp		cpp	1,215 Lines	94.6 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/qformats.cpp		cpp	1 Lines	7.9 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/quit.cpp		cpp	115 Lines	14.4 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/readfetchmod.cpp		cpp	512 Lines	62 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/readingmode.cpp		cpp	90 Lines	126.5 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/regexp.cpp		cpp	578 Lines	29.5 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/render.cpp		cpp	221 Lines	20.5 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/renum.cpp		cpp	89 Lines	9.9 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/replace.cpp		cpp	82 Lines	7.6 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/revmark.cpp		cpp	252 Lines	129.8 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/rulerdrw.cpp		cpp	1,949 Lines	150.3 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/rulrib.cpp		cpp	2,124 Lines	168.3 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/savebkgnd.cpp		cpp		45.7 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/scanrule.cpp		cpp		2 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/scanruli.cpp		cpp	1 Lines	1.5 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/scrap.cpp		cpp	6 Lines	16.1 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/screen2.cpp		cpp	53 Lines	4.6 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/scroll.cpp		cpp	389 Lines	69.4 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/sdtsupp.cpp		cpp	162 Lines	243.3 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/select.cpp		cpp	5,177 Lines	486.8 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/selectsp.cpp		cpp	724 Lines	59.6 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/selecttb.cpp		cpp	1,181 Lines	90.8 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/selexpansion.cpp		cpp	32 Lines	4.1 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/seqchk.cpp		cpp	44 Lines	4.3 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/sort.cpp		cpp	172 Lines	10.6 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/spelcore.cpp		cpp	484 Lines	43.9 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/spell.cpp		cpp	3,451 Lines	316.8 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/srchfmt.cpp		cpp	967 Lines	63.9 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/statutil.cpp		cpp	206 Lines	16.1 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/stmmisc.cpp		cpp	218 Lines	35 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/strrule.cpp		cpp	18 Lines	4 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/strruli.cpp		cpp	1 Lines	1.5 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/styleclient.cpp		cpp	1 Lines	11.1 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/stylecmd.cpp		cpp	189 Lines	88.3 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/syschgclient.cpp		cpp	34 Lines	4.5 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/tablecmd.cpp		cpp	7,303 Lines	468 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/tableins.cpp		cpp	273 Lines	68.9 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/tablesub.cpp		cpp	1,465 Lines	112.8 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/tbllook.cpp		cpp	246 Lines	23.5 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/te.cpp		cpp	222 Lines	30.9 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teBullets.cpp		cpp	129 Lines	16.3 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teColumnSelection.cpp		cpp	94 Lines	14.5 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teDimmed.cpp		cpp	49 Lines	8.9 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teDispatcher.cpp		cpp	377 Lines	34.6 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teDrawing.cpp		cpp	536 Lines	62.1 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teDropDown.cpp		cpp	14 Lines	3.2 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teE1oAnchor.cpp		cpp	217 Lines	17.8 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teE2oAnchor.cpp		cpp	214 Lines	16.4 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teFactory.cpp		cpp	285 Lines	15.9 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teFormField.cpp		cpp	54 Lines	6.5 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teFourCorners.cpp		cpp	8 Lines	2 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teFrame.cpp		cpp	487 Lines	40.8 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teGraphics.cpp		cpp	94 Lines	10.7 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teHdrFtr.cpp		cpp	27 Lines	3.9 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teHyperlink.cpp		cpp	95 Lines	11 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teImmTxbx.cpp		cpp	12 Lines	2.1 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teImmersiveZoom.cpp		cpp	5 Lines	1.9 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teImplDrg.cpp		cpp	129 Lines	15.3 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teMarginBetweenPages.cpp		cpp	9 Lines	2.2 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teMathAcetate.cpp		cpp	23 Lines	4.1 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teOle.cpp		cpp	31 Lines	3.5 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/tePicHilite.cpp		cpp	116 Lines	9 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teSymbol.cpp		cpp	40 Lines	5.5 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teTableCell.cpp		cpp	145 Lines	15.6 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teTableCol.cpp		cpp	284 Lines	20.7 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teTableInsertColRow.cpp		cpp	115 Lines	11.4 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teTableInsertLine.cpp		cpp	14 Lines	2.8 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teTableResizeMove.cpp		cpp	335 Lines	27.9 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teTableRow.cpp		cpp	193 Lines	16.8 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teTableTextHandler.cpp		cpp	105 Lines	9.6 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teTextWithDrdoUnderneath.cpp		cpp	20 Lines	4.4 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teTextboxLink.cpp		cpp	22 Lines	4.5 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teThumbnailView.cpp		cpp	60 Lines	9.4 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teTool.cpp		cpp	39 Lines	7.1 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teTouchAcetate.cpp		cpp	14 Lines	2.3 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teTouchConsumptionText.cpp		cpp	70 Lines	8.3 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teTouchE2o.cpp		cpp	169 Lines	16.7 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teTouchEditText.cpp		cpp	203 Lines	27 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teTouchFishBowl.cpp		cpp	8 Lines	1.9 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teTouchGrippy.cpp		cpp	406 Lines	49.3 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/teTouchTool.cpp		cpp	59 Lines	6 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/tefootendnote.cpp		cpp	47 Lines	6.7 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/teparabdr.cpp		cpp	259 Lines	22.2 KB	May 28, 2014 5:13:19 PM
dev/word/client/shared/terevpane.cpp		cpp	109 Lines	12 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/termpageturnbtn.cpp		cpp	24 Lines	4.9 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/tetableimm.cpp		cpp	24 Lines	3.4 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/ui/LangProfileNotifySink.cpp		cpp	28 Lines	4.9 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/ui/UIInputManager.cpp		cpp	111 Lines	16.6 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/ui/UIMouseTool.cpp		cpp	368 Lines	37.2 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/ui/UITEDispatcher.cpp		cpp	158 Lines	22 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/ui/UITouchTool.cpp		cpp	110 Lines	14.4 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/ui/precomp.cpp		cpp		280 bytes	May 28, 2014 5:13:20 PM
dev/word/client/shared/ui/precomp.h		secondary		987 bytes	May 28, 2014 5:13:20 PM
dev/word/client/shared/uia/CWordUIABodyNode.cpp		cpp	30 Lines	4.3 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uia/CWordUIADocumentNode.cpp		cpp	136 Lines	15.5 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uia/CWordUIAHeaderNode.cpp		cpp	31 Lines	4.4 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uia/CWordUIAHyperlinkNode.cpp		cpp	87 Lines	9.3 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uia/CWordUIANode.cpp		cpp	188 Lines	23.9 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uia/CWordUIAPageNode.cpp		cpp	50 Lines	5.4 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uia/CWordUIATextPattern.cpp		cpp	135 Lines	18 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uia/CWordUIATextRangePattern.cpp		cpp	702 Lines	77.7 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uia/WordUIADocumentNodeFactory.cpp		cpp	3 Lines	1.1 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uia/WordUIAHelpers.cpp		cpp	7 Lines	48.9 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uim.cpp		cpp	1,153 Lines	256.7 KB	May 28, 2014 5:22:59 PM
dev/word/client/shared/uimces.cpp		cpp	20 Lines	3.2 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uimcocs.cpp		cpp	57 Lines	5.9 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uimctes.cpp		cpp	7 Lines	1.2 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uimer.cpp		cpp	36 Lines	4.8 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uimes.cpp		cpp		3.4 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uimkns.cpp		cpp	45 Lines	4.4 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uimlbis.cpp		cpp	14 Lines	3 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uimmt.cpp		cpp	51 Lines	6.5 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uimtes.cpp		cpp	65 Lines	5.7 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uimts.cpp		cpp	1,196 Lines	88.4 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uimtxs.cpp		cpp	111 Lines	7.8 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/uimuppl.cpp		cpp	42 Lines	4.1 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/undo.cpp		cpp	532 Lines	259 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/unittest/IdleHealthMonitorTest.cpp		cpp	26 Lines	6.6 KB	May 28, 2014 5:23:00 PM
dev/word/client/shared/unittest/MockWordProgressUI.h		secondary		3.1 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/unittest/PromptTest.cpp		cpp	10 Lines	2 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/unittest/facetreeserializerutil.h		secondary	16 Lines	4.6 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/unittest/fasthittestertest.cpp		cpp	12 Lines	14.6 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/unittest/fetchmodtest.cpp		cpp	54 Lines	5.5 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/unittest/hpsparsetest.cpp		cpp	19 Lines	2.3 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/unittest/insbuftest.cpp		cpp	4 Lines	11.4 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/unittest/proofsqmtest.cpp		cpp	6 Lines	2.2 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/unittest/readingmodetest.cpp		cpp	11 Lines	9.7 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/unittest/resumereadtest.cpp		cpp	4 Lines	3 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/unittest/selexpansiontest.cpp		cpp	14 Lines	8.3 KB	May 28, 2014 5:13:20 PM
dev/word/client/shared/unittest/undomergetest.cpp		cpp	14 Lines	18.3 KB	May 28, 2014 5:13:21 PM
dev/word/client/shared/unittest/word.h		secondary		117 bytes	May 28, 2014 5:13:21 PM
dev/word/client/shared/utilclt.cpp		cpp	17 Lines	3.1 KB	May 28, 2014 5:13:21 PM
dev/word/client/shared/wproc.cpp		cpp	24 Lines	56.4 KB	May 28, 2014 5:23:00 PM
dev/word/client/shared/wrappers.cpp		cpp	117 Lines	24.1 KB	May 28, 2014 5:13:21 PM
dev/word/client/shared/wrt.cpp		cpp	82 Lines	10.7 KB	May 28, 2014 5:13:21 PM
dev/word/client/shared/wwd.cpp		cpp	515 Lines	181.5 KB	May 28, 2014 5:23:00 PM
dev/word/client/shared/xmlschema.cpp		cpp	66 Lines	5.3 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/DocMergeStub_imm.cpp		cpp	24 Lines	3.9 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/airspaceoff_imm.cpp		cpp	10 Lines	5.8 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/atnim_imm.cpp		cpp	7 Lines	4.5 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/blockstub_imm.cpp		cpp	12 Lines	5.4 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/cdsmcr_imm.cpp		cpp	1 Lines	391 bytes	May 28, 2014 5:13:21 PM
dev/word/client/stubs/clicktypstub_imm.cpp		cpp	9 Lines	4.6 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/cmd3_imm.cpp		cpp	2 Lines	678 bytes	May 28, 2014 5:13:21 PM
dev/word/client/stubs/dispstub_imm.cpp		cpp	25 Lines	14.2 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/dlgsave_imm.cpp		cpp	2 Lines	2 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/docfile_imm.cpp		cpp	1 Lines	2.1 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/docim_imm.cpp		cpp	29 Lines	5.7 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/drawcmd_imm.cpp		cpp	2 Lines	1.4 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/ecdclnt_imm.cpp		cpp	1 Lines	825 bytes	May 28, 2014 5:13:21 PM
dev/word/client/stubs/export_imm.cpp		cpp	2 Lines	9.2 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/file_imm.cpp		cpp	2 Lines	1.1 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/filline_imm.cpp		cpp	10 Lines	7.4 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/fnmim_imm.cpp		cpp	12 Lines	2.7 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/frameset_imm.cpp		cpp	3 Lines	2.3 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/hdd_imm.cpp		cpp	2 Lines	1.2 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/hwndwrappers_imm.cpp		cpp	2 Lines	510 bytes	May 28, 2014 5:13:21 PM
dev/word/client/stubs/initim_imm.cpp		cpp	20 Lines	1.3 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/loghelpim_imm.cpp		cpp	3 Lines	6.5 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/mathio_imm.cpp		cpp	1 Lines	1.2 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/msouserstubs_imm.cpp		cpp	249 Lines	66.5 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/mwd_imm.cpp		cpp	3 Lines	1.3 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/navpanestub_imm.cpp		cpp	14 Lines	8.8 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/oartim_imm.cpp		cpp	54 Lines	31.8 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/odrawim_imm.cpp		cpp	170 Lines	38.7 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/odtim_imm.cpp		cpp	101 Lines	23.7 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/olestub_imm.cpp		cpp	22 Lines	39.6 KB	May 28, 2014 5:23:00 PM
dev/word/client/stubs/olkedit_imm.cpp		cpp	1 Lines	1 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/openim_imm.cpp		cpp	7 Lines	5.9 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/osfhoststubs_imm.cpp		cpp	28 Lines	4.8 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/otb_imm.cpp		cpp	18 Lines	2.6 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/pmhstubs_imm.cpp		cpp	80 Lines	23.2 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/pmhwdsoim_imm.cpp		cpp	1 Lines	960 bytes	May 28, 2014 5:13:21 PM
dev/word/client/stubs/printim_imm.cpp		cpp	35 Lines	20.2 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/quit_imm.cpp		cpp	1 Lines	921 bytes	May 28, 2014 5:13:21 PM
dev/word/client/stubs/recordim_imm.cpp		cpp	10 Lines	11 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/savebin_imm.cpp		cpp	4 Lines	3.4 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/saveim_imm.cpp		cpp	1 Lines	1.1 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/sdtim_imm.cpp		cpp	1 Lines	718 bytes	May 28, 2014 5:13:21 PM
dev/word/client/stubs/sdtsupp_imm.cpp		cpp	10 Lines	5 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/secreadim_imm.cpp		cpp	17 Lines	8.9 KB	May 28, 2014 5:13:21 PM
dev/word/client/stubs/status_imm.cpp		cpp	2 Lines	657 bytes	May 28, 2014 5:13:21 PM
dev/word/client/stubs/stub_imm.cpp		cpp	14 Lines	152.7 KB	May 28, 2014 5:13:22 PM
dev/word/client/stubs/stubdlg_imm.cpp		cpp	9 Lines	5.3 KB	May 28, 2014 5:23:00 PM
dev/word/client/stubs/stubfind_imm.cpp		cpp	13 Lines	12 KB	May 28, 2014 5:13:22 PM
dev/word/client/stubs/stubfld_imm.cpp		cpp	61 Lines	12.9 KB	May 28, 2014 5:13:22 PM
dev/word/client/stubs/stubgen1_imm.cpp		cpp	4 Lines	323.3 KB	May 28, 2014 5:23:00 PM
dev/word/client/stubs/stubgen2_imm.cpp		cpp	196 Lines	60.4 KB	May 28, 2014 5:13:22 PM
dev/word/client/stubs/stubgen4_imm.cpp		cpp	239 Lines	156.7 KB	May 28, 2014 5:23:00 PM
dev/word/client/stubs/stubidle_imm.cpp		cpp		1.1 KB	May 28, 2014 5:13:22 PM
dev/word/client/stubs/stubinppane_imm.cpp		cpp	1 Lines	576 bytes	May 28, 2014 5:13:22 PM
dev/word/client/stubs/stubkeys_imm.cpp		cpp	49 Lines	6.5 KB	May 28, 2014 5:13:22 PM
dev/word/client/stubs/stubmouse_imm.cpp		cpp		241 bytes	May 28, 2014 5:13:22 PM
dev/word/client/stubs/stubrm_imm.cpp		cpp		624 bytes	May 28, 2014 5:13:22 PM
dev/word/client/stubs/stubsel_imm.cpp		cpp	22 Lines	44.4 KB	May 28, 2014 5:23:00 PM
dev/word/client/stubs/stubvar1_imm.cpp		cpp	133 Lines	40.9 KB	May 28, 2014 5:23:00 PM
dev/word/client/stubs/stubwwd_imm.cpp		cpp	46 Lines	26.2 KB	May 28, 2014 5:13:22 PM
dev/word/client/stubs/synchronizationstub_imm.cpp		cpp	2 Lines	259 bytes	May 28, 2014 5:13:22 PM
dev/word/client/stubs/syschgim_imm.cpp		cpp	2 Lines	2.3 KB	May 28, 2014 5:13:22 PM
dev/word/client/stubs/teOutlineView_imm.cpp		cpp	7 Lines	1.9 KB	May 28, 2014 5:13:22 PM
dev/word/client/stubs/texteffects_imm.cpp		cpp	1 Lines	860 bytes	May 28, 2014 5:13:22 PM
dev/word/client/stubs/thumbnail_imm.cpp		cpp	1 Lines	686 bytes	May 28, 2014 5:13:22 PM
dev/word/client/stubs/undostub_imm.cpp		cpp	4 Lines	8.8 KB	May 28, 2014 5:13:22 PM
dev/word/client/stubs/utilim_imm.cpp		cpp	11 Lines	4.5 KB	May 28, 2014 5:13:22 PM
dev/word/client/stubs/vbestubs_imm.cpp		cpp	1 Lines	653 bytes	May 28, 2014 5:13:22 PM
dev/word/client/stubs/wmath1_imm.cpp		cpp	1 Lines	705 bytes	May 28, 2014 5:13:22 PM
dev/word/client/stubs/wordmailstub_imm.cpp		cpp	1 Lines	737 bytes	May 28, 2014 5:13:22 PM
dev/word/client/stubs/wwdim_imm.cpp		cpp	5 Lines	2.6 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/RdGDIContext.cpp		cpp	281 Lines	42.3 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/Util.cpp		cpp	39 Lines	5.6 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/WicFactory.cpp		cpp	6 Lines	2.1 KB	May 28, 2014 5:13:23 PM
dev/word/client/win32/bdrcore.cpp		cpp	397 Lines	37.7 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/bibcore.cpp		cpp	65 Lines	6.4 KB	May 28, 2014 5:23:00 PM
dev/word/client/win32/bitmap.cpp		cpp	14 Lines	1.4 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/boot.cpp		cpp	2 Lines	799 bytes	May 28, 2014 5:13:22 PM
dev/word/client/win32/clipboard.cpp		cpp	20 Lines	5.3 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/directorywrappers.cpp		cpp	1 Lines	884 bytes	May 28, 2014 5:13:22 PM
dev/word/client/win32/disp1.cpp		cpp	49 Lines	9 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/disp3.cpp		cpp	10 Lines	2.9 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/doc.cpp		cpp	46 Lines	6.1 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/docfile.cpp		cpp	10 Lines	4.7 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/ecdutil.cpp		cpp	183 Lines	21.7 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/export.cpp		cpp	762 Lines	125.9 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/fieldfmt.cpp		cpp	54 Lines	4.7 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/fields.cpp		cpp		3.3 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/file.cpp		cpp	24 Lines	3.7 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/filename.cpp		cpp	9 Lines	1013 bytes	May 28, 2014 5:13:22 PM
dev/word/client/win32/fnmnew.cpp		cpp	65 Lines	9.1 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/gfxwrappers.cpp		cpp	37 Lines	3.5 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/grutil.cpp		cpp	61 Lines	17.5 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/hdd.cpp		cpp	27 Lines	3.7 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/hwndwrappers.cpp		cpp	1 Lines	446 bytes	May 28, 2014 5:13:22 PM
dev/word/client/win32/init.cpp		cpp	22 Lines	2.1 KB	May 28, 2014 5:23:00 PM
dev/word/client/win32/inputlang.cpp		cpp	3 Lines	1.6 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/layout.cpp		cpp	20 Lines	1.9 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/lineservices.cpp		cpp	10 Lines	1.8 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/loadfont.cpp		cpp	19 Lines	4.1 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/lsdisp.cpp		cpp	13 Lines	1 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/lshelpge.cpp		cpp	20 Lines	2.2 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/lshelpmath.cpp		cpp	11 Lines	2.3 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/mathio.cpp		cpp	23 Lines	9.5 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/metroin.cpp		cpp	6 Lines	1.9 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/metroout.cpp		cpp	121 Lines	9.2 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/mtxi.cpp		cpp	13 Lines	1.3 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/oagp.cpp		cpp	117 Lines	17.5 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/oartconv.cpp		cpp	100 Lines	8.9 KB	May 28, 2014 5:23:01 PM
dev/word/client/win32/odgvs.cpp		cpp	272 Lines	32.3 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/odrawcore.cpp		cpp	211 Lines	20.2 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/odtcore.cpp		cpp	1,292 Lines	171 KB	May 28, 2014 5:23:01 PM
dev/word/client/win32/oemchar.cpp		cpp	17 Lines	3.9 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/ofx.cpp		cpp	96 Lines	9.1 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/open.cpp		cpp	13 Lines	9.4 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/ostm.cpp		cpp	4 Lines	1.5 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/pagevw.cpp		cpp	31 Lines	1.9 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/path.cpp		cpp	2 Lines	789 bytes	May 28, 2014 5:13:22 PM
dev/word/client/win32/pic.cpp		cpp	335 Lines	35.4 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/plugui.cpp		cpp	16 Lines	2.1 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/pmhwdso.cpp		cpp		1 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/prdev.cpp		cpp	219 Lines	31.7 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/print.cpp		cpp	467 Lines	30.6 KB	May 28, 2014 5:23:01 PM
dev/word/client/win32/render.cpp		cpp	56 Lines	35.9 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/rt.cpp		cpp	21 Lines	4.8 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/rtd2d.cpp		cpp	284 Lines	26.7 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/rtd2d_gdi.cpp		cpp	257 Lines	30.2 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/rtdi.cpp		cpp	10 Lines	2.2 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/rtfont.cpp		cpp	88 Lines	12 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/rtgdi.cpp		cpp	576 Lines	73.4 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/rtrgn.cpp		cpp	107 Lines	16.3 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/rulerdrw.cpp		cpp	2 Lines	759 bytes	May 28, 2014 5:13:22 PM
dev/word/client/win32/savebin.cpp		cpp	323 Lines	34.4 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/screen.cpp		cpp	2 Lines	1.3 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/sdtsupp.cpp		cpp	46 Lines	5.6 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/syschgwin32.cpp		cpp	50 Lines	4.5 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/teaser.cpp		cpp	246 Lines	60.8 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/thumbnail.cpp		cpp	143 Lines	9.9 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/txbx.cpp		cpp	5 Lines	869 bytes	May 28, 2014 5:13:22 PM
dev/word/client/win32/unicode.cpp		cpp	47 Lines	3.2 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/unittest/metroouttest.cpp		cpp	4 Lines	5.6 KB	May 28, 2014 5:23:01 PM
dev/word/client/win32/usphelp.cpp		cpp	159 Lines	7.8 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/wartcore.cpp		cpp	25 Lines	6 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/wdoart/CanvasE2oCommands.cpp		cpp	85 Lines	7.4 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/wdoart/CanvasEditor.cpp		cpp	33 Lines	4 KB	May 28, 2014 5:13:22 PM
dev/word/client/win32/wdoart/word.h		secondary		1.5 KB	May 28, 2014 5:13:23 PM
dev/word/client/win32/wmath1.cpp		cpp	47 Lines	3.7 KB	May 28, 2014 5:13:23 PM
dev/word/client/win32/wwd.cpp		cpp	5 Lines	2.5 KB	May 28, 2014 5:13:23 PM
dev/word/client/win32/xmlstyle.cpp		cpp	1 Lines	804 bytes	May 28, 2014 5:13:23 PM
dev/word/client/win32/xsd.cpp		cpp	84 Lines	6.5 KB	May 28, 2014 5:13:23 PM
dev/word/core/MailMerge.cpp		cpp	201 Lines	16.7 KB	May 28, 2014 5:13:24 PM
dev/word/core/RdContext.cpp		cpp	21 Lines	6.1 KB	May 28, 2014 5:13:25 PM
dev/word/core/RdD2DContext.cpp		cpp	469 Lines	59.7 KB	May 28, 2014 5:13:25 PM
dev/word/core/RdD2DUtil.h		secondary		2.4 KB	May 28, 2014 5:13:25 PM
dev/word/core/TextEffects.cpp		cpp	259 Lines	22.5 KB	May 28, 2014 5:13:26 PM
dev/word/core/abd.cpp		cpp	927 Lines	174.1 KB	May 28, 2014 5:23:01 PM
dev/word/core/abd2.cpp		cpp	1,135 Lines	114 KB	May 28, 2014 5:23:01 PM
dev/word/core/abort.cpp		cpp	71 Lines	9.4 KB	May 28, 2014 5:13:23 PM
dev/word/core/annotcore.cpp		cpp	22 Lines	66 KB	May 28, 2014 5:13:23 PM
dev/word/core/appmode.cpp		cpp	53 Lines	7.3 KB	May 28, 2014 5:13:23 PM
dev/word/core/arrayx.cpp		cpp	792 Lines	95.7 KB	May 28, 2014 5:13:23 PM
dev/word/core/assoc.cpp		cpp	38 Lines	5.5 KB	May 28, 2014 5:13:23 PM
dev/word/core/banter.cpp		cpp	1,718 Lines	171.7 KB	May 28, 2014 5:13:23 PM
dev/word/core/barcode.cpp		cpp	329 Lines	26.2 KB	May 28, 2014 5:13:23 PM
dev/word/core/bdrcore.cpp		cpp	421 Lines	36.6 KB	May 28, 2014 5:13:23 PM
dev/word/core/bibcore.cpp		cpp	622 Lines	186.4 KB	May 28, 2014 5:23:01 PM
dev/word/core/bidi.cpp		cpp	326 Lines	25 KB	May 28, 2014 5:13:23 PM
dev/word/core/bookmark.cpp		cpp	32 Lines	152.1 KB	May 28, 2014 5:13:23 PM
dev/word/core/boot.cpp		cpp	192 Lines	35 KB	May 28, 2014 5:23:01 PM
dev/word/core/bsc.cpp		cpp	136 Lines	21.7 KB	May 28, 2014 5:23:01 PM
dev/word/core/ca.cpp		cpp	50 Lines	11.5 KB	May 28, 2014 5:13:23 PM
dev/word/core/cdsfile.cpp		cpp	687 Lines	64 KB	May 28, 2014 5:13:23 PM
dev/word/core/coartprintmanager.cpp		cpp	46 Lines	8.8 KB	May 28, 2014 5:13:23 PM
dev/word/core/coauthinfo.cpp		cpp	94 Lines	10.6 KB	May 28, 2014 5:13:23 PM
dev/word/core/col.cpp		cpp	54 Lines	4.8 KB	May 28, 2014 5:13:23 PM
dev/word/core/color.cpp		cpp	58 Lines	5.9 KB	May 28, 2014 5:13:23 PM
dev/word/core/comptest/MockTestLogger.cpp		cpp	226 Lines	18.6 KB	May 28, 2014 5:23:01 PM
dev/word/core/comptest/TaskLibCore.cpp		cpp	287 Lines	78.5 KB	May 28, 2014 5:23:01 PM
dev/word/core/copts.cpp		cpp	51 Lines	24 KB	May 28, 2014 5:13:23 PM
dev/word/core/cpsty.cpp		cpp	688 Lines	56.1 KB	May 28, 2014 5:13:23 PM
dev/word/core/csm.cpp		cpp	38 Lines	17.3 KB	May 28, 2014 5:13:23 PM
dev/word/core/csscascd.cpp		cpp	585 Lines	64.5 KB	May 28, 2014 5:13:23 PM
dev/word/core/csscutil.cpp		cpp	888 Lines	93.7 KB	May 28, 2014 5:23:01 PM
dev/word/core/cssin.cpp		cpp	5,825 Lines	286.1 KB	May 28, 2014 5:13:23 PM
dev/word/core/cvauto.cpp		cpp		5.2 KB	May 28, 2014 5:23:01 PM
dev/word/core/d2d1print.cpp		cpp	40 Lines	30.4 KB	May 28, 2014 5:13:23 PM
dev/word/core/dbcs.cpp		cpp	348 Lines	53.8 KB	May 28, 2014 5:13:23 PM
dev/word/core/dbnum.cpp		cpp	134 Lines	5.5 KB	May 28, 2014 5:13:23 PM
dev/word/core/disp1.cpp		cpp	670 Lines	103.9 KB	May 28, 2014 5:23:01 PM
dev/word/core/dispbrc.cpp		cpp	2,017 Lines	214.4 KB	May 28, 2014 5:13:23 PM
dev/word/core/dllutil.cpp		cpp	92 Lines	14.1 KB	May 28, 2014 5:23:01 PM
dev/word/core/doc.cpp		cpp	3,311 Lines	711.6 KB	May 28, 2014 5:23:01 PM
dev/word/core/docfile.cpp		cpp	375 Lines	48.9 KB	May 28, 2014 5:23:01 PM
dev/word/core/docparts.cpp		cpp	41 Lines	26.9 KB	May 28, 2014 5:13:23 PM
dev/word/core/docstats.cpp		cpp	379 Lines	39.4 KB	May 28, 2014 5:13:23 PM
dev/word/core/dops.cpp		cpp	1,737 Lines	110.3 KB	May 28, 2014 5:23:02 PM
dev/word/core/dota.cpp		cpp	146 Lines	83.6 KB	May 28, 2014 5:13:23 PM
dev/word/core/draw.cpp		cpp	1,449 Lines	186.4 KB	May 28, 2014 5:23:02 PM
dev/word/core/drawcvt.cpp		cpp	421 Lines	36.5 KB	May 28, 2014 5:13:23 PM
dev/word/core/drawdisp.cpp		cpp	165 Lines	16 KB	May 28, 2014 5:13:23 PM
dev/word/core/drawoop.cpp		cpp	724 Lines	75 KB	May 28, 2014 5:13:23 PM
dev/word/core/drawspec.cpp		cpp	259 Lines	40.3 KB	May 28, 2014 5:13:23 PM
dev/word/core/dsdserializedversion.cpp		cpp	10 Lines	2.9 KB	May 28, 2014 5:13:23 PM
dev/word/core/dttm.cpp		cpp	312 Lines	38.1 KB	May 28, 2014 5:13:23 PM
dev/word/core/e2osynccore.cpp		cpp	30 Lines	9.5 KB	May 28, 2014 5:13:23 PM
dev/word/core/e2otextcore.cpp		cpp	60 Lines	13.3 KB	May 28, 2014 5:13:23 PM
dev/word/core/ecdpub.cpp		cpp	10 Lines	1.4 KB	May 28, 2014 5:13:23 PM
dev/word/core/edit.cpp		cpp	1,610 Lines	625.6 KB	May 28, 2014 5:23:02 PM
dev/word/core/eid.cpp		cpp	453 Lines	209.3 KB	May 28, 2014 5:13:23 PM
dev/word/core/export.cpp		cpp	59 Lines	5.4 KB	May 28, 2014 5:13:23 PM
dev/word/core/extchar.cpp		cpp	364 Lines	32.3 KB	May 28, 2014 5:13:23 PM
dev/word/core/factio.cpp		cpp	280 Lines	31.1 KB	May 28, 2014 5:13:23 PM
dev/word/core/fetch.cpp		cpp		345 bytes	May 28, 2014 5:13:23 PM
dev/word/core/fetchmod.cpp		cpp	135 Lines	17.1 KB	May 28, 2014 5:13:23 PM
dev/word/core/field.cpp		cpp		363 bytes	May 28, 2014 5:13:23 PM
dev/word/core/fieldclc.cpp		cpp	2,257 Lines	213.7 KB	May 28, 2014 5:13:23 PM
dev/word/core/fieldcore.cpp		cpp	1,578 Lines	165.4 KB	May 28, 2014 5:13:23 PM
dev/word/core/fieldfmt.cpp		cpp	1,288 Lines	191.3 KB	May 28, 2014 5:13:23 PM
dev/word/core/fieldpic.cpp		cpp	1,000 Lines	63.2 KB	May 28, 2014 5:13:23 PM
dev/word/core/fieldseq.cpp		cpp	213 Lines	17.4 KB	May 28, 2014 5:13:23 PM
dev/word/core/figu.cpp		cpp	163 Lines	129.4 KB	May 28, 2014 5:13:23 PM
dev/word/core/file.cpp		cpp	3,941 Lines	349 KB	May 28, 2014 5:23:02 PM
dev/word/core/filecvtcore.cpp		cpp	8 Lines	10.7 KB	May 28, 2014 5:13:23 PM
dev/word/core/filename.cpp		cpp	460 Lines	57.1 KB	May 28, 2014 5:13:23 PM
dev/word/core/filewin.cpp		cpp	52 Lines	6.1 KB	May 28, 2014 5:13:23 PM
dev/word/core/fldintl.cpp		cpp	754 Lines	60.9 KB	May 28, 2014 5:13:23 PM
dev/word/core/fltexpcore.cpp		cpp	1,948 Lines	132.1 KB	May 28, 2014 5:13:23 PM
dev/word/core/fnmnew.cpp		cpp	2,188 Lines	245.8 KB	May 28, 2014 5:23:02 PM
dev/word/core/fontinfo.cpp		cpp	32 Lines	10.3 KB	May 28, 2014 5:13:23 PM
dev/word/core/fontsub.cpp		cpp	1,137 Lines	88 KB	May 28, 2014 5:13:23 PM
dev/word/core/format.cpp		cpp	1,612 Lines	151.9 KB	May 28, 2014 5:13:23 PM
dev/word/core/formatsp.cpp		cpp	1,202 Lines	81.8 KB	May 28, 2014 5:13:23 PM
dev/word/core/formfld.cpp		cpp	993 Lines	74.3 KB	May 28, 2014 5:13:23 PM
dev/word/core/formula.cpp		cpp	1,128 Lines	64.7 KB	May 28, 2014 5:13:23 PM
dev/word/core/framesetio.cpp		cpp	188 Lines	22.2 KB	May 28, 2014 5:13:23 PM
dev/word/core/fsbreak.cpp		cpp	845 Lines	116.5 KB	May 28, 2014 5:23:02 PM
dev/word/core/fscache.cpp		cpp	146 Lines	18.9 KB	May 28, 2014 5:13:23 PM
dev/word/core/fsdebug.cpp		cpp		23.3 KB	May 28, 2014 5:13:24 PM
dev/word/core/fsfig.cpp		cpp	1,376 Lines	89.2 KB	May 28, 2014 5:13:24 PM
dev/word/core/fsframe.cpp		cpp	1,049 Lines	212 KB	May 28, 2014 5:13:24 PM
dev/word/core/fsgen.cpp		cpp	670 Lines	75.7 KB	May 28, 2014 5:13:24 PM
dev/word/core/fshelp.cpp		cpp	374 Lines	155.2 KB	May 28, 2014 5:23:02 PM
dev/word/core/fslayout.cpp		cpp	2,258 Lines	345.8 KB	May 28, 2014 5:23:02 PM
dev/word/core/fsmath.cpp		cpp	324 Lines	43.8 KB	May 28, 2014 5:23:02 PM
dev/word/core/fsobj.cpp		cpp	31 Lines	8.2 KB	May 28, 2014 5:13:24 PM
dev/word/core/fspgsmpl.cpp		cpp	623 Lines	70.9 KB	May 28, 2014 5:13:24 PM
dev/word/core/fstable.cpp		cpp	1,276 Lines	103.3 KB	May 28, 2014 5:13:24 PM
dev/word/core/fstxt.cpp		cpp	782 Lines	88.3 KB	May 28, 2014 5:23:02 PM
dev/word/core/fsutil.cpp		cpp	247 Lines	10.8 KB	May 28, 2014 5:13:24 PM
dev/word/core/fswrd.cpp		cpp	1,029 Lines	91.1 KB	May 28, 2014 5:13:24 PM
dev/word/core/globals.cpp		cpp	37 Lines	17.4 KB	May 28, 2014 5:13:24 PM
dev/word/core/glossarycore.cpp		cpp	71 Lines	24.9 KB	May 28, 2014 5:13:24 PM
dev/word/core/grs.cpp		cpp	4 Lines	1.7 KB	May 28, 2014 5:13:24 PM
dev/word/core/grutil.cpp		cpp	1,034 Lines	100.2 KB	May 28, 2014 5:23:02 PM
dev/word/core/hdd.cpp		cpp	477 Lines	65.6 KB	May 28, 2014 5:13:24 PM
dev/word/core/heap.cpp		cpp	159 Lines	42.9 KB	May 28, 2014 5:23:02 PM
dev/word/core/htmlchp.cpp		cpp	2,461 Lines	201.2 KB	May 28, 2014 5:13:24 PM
dev/word/core/htmldoc.cpp		cpp	3,083 Lines	234 KB	May 28, 2014 5:23:02 PM
dev/word/core/htmldraw.cpp		cpp	1,658 Lines	150.9 KB	May 28, 2014 5:13:24 PM
dev/word/core/htmlfe.cpp		cpp	262 Lines	21.8 KB	May 28, 2014 5:23:02 PM
dev/word/core/htmlfld.cpp		cpp	2,424 Lines	228.9 KB	May 28, 2014 5:13:24 PM
dev/word/core/htmlfrm.cpp		cpp	223 Lines	23.3 KB	May 28, 2014 5:13:24 PM
dev/word/core/htmlftn.cpp		cpp	236 Lines	23.6 KB	May 28, 2014 5:23:02 PM
dev/word/core/htmlhdd.cpp		cpp	328 Lines	30.2 KB	May 28, 2014 5:13:24 PM
dev/word/core/htmlin.cpp		cpp	6,473 Lines	507.7 KB	May 28, 2014 5:23:02 PM
dev/word/core/htmllist.cpp		cpp	2,140 Lines	213 KB	May 28, 2014 5:23:02 PM
dev/word/core/htmlmath.cpp		cpp	409 Lines	39.9 KB	May 28, 2014 5:13:24 PM
dev/word/core/htmlout.cpp		cpp	4,158 Lines	351.1 KB	May 28, 2014 5:23:02 PM
dev/word/core/htmlpage.cpp		cpp	1,257 Lines	77.2 KB	May 28, 2014 5:13:24 PM
dev/word/core/htmlpap.cpp		cpp	1,143 Lines	103.4 KB	May 28, 2014 5:23:02 PM
dev/word/core/htmlsty.cpp		cpp	3,632 Lines	320.1 KB	May 28, 2014 5:23:02 PM
dev/word/core/htmlsupp.cpp		cpp	1,547 Lines	251.3 KB	May 28, 2014 5:23:02 PM
dev/word/core/htmltbl.cpp		cpp	1,728 Lines	351.6 KB	May 28, 2014 5:23:02 PM
dev/word/core/htmlwsp.cpp		cpp	463 Lines	40.7 KB	May 28, 2014 5:13:24 PM
dev/word/core/hyphcore.cpp		cpp	394 Lines	27.4 KB	May 28, 2014 5:13:24 PM
dev/word/core/index.cpp		cpp	1,702 Lines	91.9 KB	May 28, 2014 5:13:24 PM
dev/word/core/index2.cpp		cpp	503 Lines	39.3 KB	May 28, 2014 5:13:24 PM
dev/word/core/initmain.cpp		cpp	841 Lines	67.2 KB	May 28, 2014 5:23:02 PM
dev/word/core/insbufutil.cpp		cpp	1 Lines	7.7 KB	May 28, 2014 5:13:24 PM
dev/word/core/inscore.cpp		cpp	203 Lines	41 KB	May 28, 2014 5:13:24 PM
dev/word/core/inval.cpp		cpp	563 Lines	217.6 KB	May 28, 2014 5:23:02 PM
dev/word/core/istgwrap.cpp		cpp	106 Lines	19 KB	May 28, 2014 5:13:24 PM
dev/word/core/istreamlog.cpp		cpp	159 Lines	28.2 KB	May 28, 2014 5:13:24 PM
dev/word/core/kinsoku.cpp		cpp	225 Lines	29.2 KB	May 28, 2014 5:13:24 PM
dev/word/core/lang.cpp		cpp	287 Lines	50.1 KB	May 28, 2014 5:13:24 PM
dev/word/core/layout.cpp		cpp	1,672 Lines	157.2 KB	May 28, 2014 5:23:02 PM
dev/word/core/layout1.cpp		cpp	44 Lines	4.7 KB	May 28, 2014 5:13:24 PM
dev/word/core/layout2.cpp		cpp	683 Lines	131.2 KB	May 28, 2014 5:13:24 PM
dev/word/core/layoutap.cpp		cpp	174 Lines	14.9 KB	May 28, 2014 5:13:24 PM
dev/word/core/legal.cpp		cpp	45 Lines	6.5 KB	May 28, 2014 5:13:24 PM
dev/word/core/loadfont.cpp		cpp	3,103 Lines	284.6 KB	May 28, 2014 5:23:02 PM
dev/word/core/log.cpp		cpp	7 Lines	2.3 KB	May 28, 2014 5:13:24 PM
dev/word/core/lsObjDsp.cpp		cpp	180 Lines	13.9 KB	May 28, 2014 5:23:02 PM
dev/word/core/lsObjFgr.cpp		cpp	675 Lines	56.5 KB	May 28, 2014 5:23:02 PM
dev/word/core/lscreate.cpp		cpp	162 Lines	32.7 KB	May 28, 2014 5:23:02 PM
dev/word/core/lsdisp.cpp		cpp	764 Lines	62.7 KB	May 28, 2014 5:13:24 PM
dev/word/core/lsformat.cpp		cpp	1,952 Lines	187.6 KB	May 28, 2014 5:23:02 PM
dev/word/core/lshelp.cpp		cpp	2,597 Lines	291.7 KB	May 28, 2014 5:23:02 PM
dev/word/core/lshelpfe.cpp		cpp	715 Lines	82.2 KB	May 28, 2014 5:23:02 PM
dev/word/core/lshelpfetch.cpp		cpp	2,185 Lines	226.2 KB	May 28, 2014 5:23:02 PM
dev/word/core/lshelpge.cpp		cpp	481 Lines	57.8 KB	May 28, 2014 5:23:02 PM
dev/word/core/lshelpmath.cpp		cpp	1,347 Lines	219.1 KB	May 28, 2014 5:23:02 PM
dev/word/core/lsobj.cpp		cpp	27 Lines	5.6 KB	May 28, 2014 5:13:24 PM
dev/word/core/lsobjfsm.cpp		cpp	147 Lines	12.4 KB	May 28, 2014 5:23:02 PM
dev/word/core/lsobjft.cpp		cpp	237 Lines	21.9 KB	May 28, 2014 5:13:24 PM
dev/word/core/lsobjmov.cpp		cpp	18 Lines	3 KB	May 28, 2014 5:13:24 PM
dev/word/core/lsobjrdc.cpp		cpp	96 Lines	10.2 KB	May 28, 2014 5:23:02 PM
dev/word/core/lsobjspc.cpp		cpp	228 Lines	20.9 KB	May 28, 2014 5:23:02 PM
dev/word/core/lsod.cpp		cpp	43 Lines	6.5 KB	May 28, 2014 5:13:24 PM
dev/word/core/lsquery.cpp		cpp	962 Lines	115.8 KB	May 28, 2014 5:23:02 PM
dev/word/core/lvc.cpp		cpp	122 Lines	16.6 KB	May 28, 2014 5:13:24 PM
dev/word/core/macro.cpp		cpp	188 Lines	17.1 KB	May 28, 2014 5:13:24 PM
dev/word/core/mapfnpfcb.cpp		cpp	120 Lines	19.4 KB	May 28, 2014 5:13:24 PM
dev/word/core/mapx.cpp		cpp	19 Lines	4.7 KB	May 28, 2014 5:13:24 PM
dev/word/core/master.cpp		cpp	33 Lines	5 KB	May 28, 2014 5:13:24 PM
dev/word/core/mathio.cpp		cpp	416 Lines	130.3 KB	May 28, 2014 5:13:24 PM
dev/word/core/metrocommon.cpp		cpp	166 Lines	16.3 KB	May 28, 2014 5:13:24 PM
dev/word/core/metroin.cpp		cpp	1,091 Lines	79.1 KB	May 28, 2014 5:13:24 PM
dev/word/core/metrolego.cpp		cpp	245 Lines	22.2 KB	May 28, 2014 5:13:24 PM
dev/word/core/metroole.cpp		cpp	54 Lines	18.4 KB	May 28, 2014 5:13:24 PM
dev/word/core/metroout.cpp		cpp	879 Lines	75.3 KB	May 28, 2014 5:13:24 PM
dev/word/core/msocore.cpp		cpp	54 Lines	7.7 KB	May 28, 2014 5:13:24 PM
dev/word/core/mtl.cpp		cpp	172 Lines	18.8 KB	May 28, 2014 5:13:24 PM
dev/word/core/mtxi.cpp		cpp	379 Lines	39.4 KB	May 28, 2014 5:13:24 PM
dev/word/core/mwd.cpp		cpp	189 Lines	18.7 KB	May 28, 2014 5:13:24 PM
dev/word/core/myso.cpp		cpp	66 Lines	10 KB	May 28, 2014 5:13:24 PM
dev/word/core/mystg.cpp		cpp	2 Lines	28.9 KB	May 28, 2014 5:13:24 PM
dev/word/core/mystge.cpp		cpp	45 Lines	6.7 KB	May 28, 2014 5:13:24 PM
dev/word/core/mystgw.cpp		cpp	10 Lines	20.6 KB	May 28, 2014 5:13:24 PM
dev/word/core/mystm.cpp		cpp	214 Lines	26.9 KB	May 28, 2014 5:13:24 PM
dev/word/core/mystmw.cpp		cpp	83 Lines	13 KB	May 28, 2014 5:13:24 PM
dev/word/core/myx.cpp		cpp	886 Lines	119.5 KB	May 28, 2014 5:23:02 PM
dev/word/core/ntdevmod.cpp		cpp	85 Lines	12.1 KB	May 28, 2014 5:13:24 PM
dev/word/core/ntmath.cpp		cpp	31 Lines	5.2 KB	May 28, 2014 5:13:24 PM
dev/word/core/number.cpp		cpp	2,418 Lines	447.9 KB	May 28, 2014 5:13:24 PM
dev/word/core/numt3core.cpp		cpp	641 Lines	45.7 KB	May 28, 2014 5:13:24 PM
dev/word/core/oartanchor.cpp		cpp	2,140 Lines	240.3 KB	May 28, 2014 5:13:24 PM
dev/word/core/oartapp.cpp		cpp	86 Lines	9.5 KB	May 28, 2014 5:13:24 PM
dev/word/core/oartconv.cpp		cpp	937 Lines	327.4 KB	May 28, 2014 5:23:03 PM
dev/word/core/oarth.cpp		cpp	701 Lines	123.9 KB	May 28, 2014 5:13:24 PM
dev/word/core/oartlayout.cpp		cpp	259 Lines	18.9 KB	May 28, 2014 5:13:24 PM
dev/word/core/oartodf.cpp		cpp	4,656 Lines	370.7 KB	May 28, 2014 5:23:03 PM
dev/word/core/oartosf.cpp		cpp	32 Lines	3.7 KB	May 28, 2014 5:13:24 PM
dev/word/core/oartoss.cpp		cpp	469 Lines	71.7 KB	May 28, 2014 5:13:24 PM
dev/word/core/oartsrvcmds.cpp		cpp	90 Lines	8.7 KB	May 28, 2014 5:13:24 PM
dev/word/core/oartutil.cpp		cpp	552 Lines	154.2 KB	May 28, 2014 5:13:24 PM
dev/word/core/oartv.cpp		cpp	7 Lines	1.6 KB	May 28, 2014 5:13:24 PM
dev/word/core/oartvsd.cpp		cpp	258 Lines	27.8 KB	May 28, 2014 5:13:24 PM
dev/word/core/oartxml.cpp		cpp	238 Lines	56.8 KB	May 28, 2014 5:13:24 PM
dev/word/core/oartxmlB.cpp		cpp	379 Lines	38.4 KB	May 28, 2014 5:13:24 PM
dev/word/core/ocxcore.cpp		cpp	261 Lines	37.4 KB	May 28, 2014 5:23:03 PM
dev/word/core/odrawcore.cpp		cpp	1,379 Lines	411 KB	May 28, 2014 5:13:24 PM
dev/word/core/ofc.cpp		cpp	11 Lines	2.6 KB	May 28, 2014 5:13:24 PM
dev/word/core/offstm.cpp		cpp	124 Lines	13.7 KB	May 28, 2014 5:13:24 PM
dev/word/core/ofx.cpp		cpp	80 Lines	10.5 KB	May 28, 2014 5:13:24 PM
dev/word/core/olecore.cpp		cpp	147 Lines	23.6 KB	May 28, 2014 5:23:03 PM
dev/word/core/open.cpp		cpp	4,458 Lines	596.3 KB	May 28, 2014 5:23:03 PM
dev/word/core/orapi.cpp		cpp		319 bytes	May 28, 2014 5:13:24 PM
dev/word/core/osmbc.cpp		cpp	123 Lines	41.5 KB	May 28, 2014 5:13:24 PM
dev/word/core/ossword.cpp		cpp	165 Lines	32 KB	May 28, 2014 5:13:24 PM
dev/word/core/ostm.cpp		cpp	49 Lines	10.9 KB	May 28, 2014 5:13:24 PM
dev/word/core/ostrglue.cpp		cpp	229 Lines	19.6 KB	May 28, 2014 5:13:24 PM
dev/word/core/otannot.cpp		cpp	85 Lines	78.4 KB	May 28, 2014 5:13:24 PM
dev/word/core/otaux.cpp		cpp	4 Lines	1.1 KB	May 28, 2014 5:13:24 PM
dev/word/core/otcommon.cpp		cpp	35 Lines	15.6 KB	May 28, 2014 5:13:24 PM
dev/word/core/otfield.cpp		cpp	2,301 Lines	167.9 KB	May 28, 2014 5:13:24 PM
dev/word/core/otin.cpp		cpp	349 Lines	36.2 KB	May 28, 2014 5:13:24 PM
dev/word/core/otlist.cpp		cpp	761 Lines	57.1 KB	May 28, 2014 5:13:24 PM
dev/word/core/otmath.cpp		cpp	171 Lines	20.3 KB	May 28, 2014 5:13:24 PM
dev/word/core/otmm.cpp		cpp	562 Lines	30.8 KB	May 28, 2014 5:13:24 PM
dev/word/core/otout.cpp		cpp	404 Lines	34.9 KB	May 28, 2014 5:13:24 PM
dev/word/core/otpage.cpp		cpp	1,065 Lines	112.2 KB	May 28, 2014 5:23:03 PM
dev/word/core/otpara.cpp		cpp	880 Lines	92.5 KB	May 28, 2014 5:13:24 PM
dev/word/core/otstyle.cpp		cpp	439 Lines	38.7 KB	May 28, 2014 5:13:24 PM
dev/word/core/ottbl.cpp		cpp	570 Lines	60 KB	May 28, 2014 5:13:24 PM
dev/word/core/ottext.cpp		cpp	865 Lines	82.3 KB	May 28, 2014 5:23:03 PM
dev/word/core/outcore.cpp		cpp	160 Lines	17.4 KB	May 28, 2014 5:13:24 PM
dev/word/core/pagecache.cpp		cpp	414 Lines	89.8 KB	May 28, 2014 5:13:24 PM
dev/word/core/pansub.cpp		cpp	227 Lines	27.8 KB	May 28, 2014 5:13:24 PM
dev/word/core/parid.cpp		cpp	117 Lines	90.7 KB	May 28, 2014 5:13:25 PM
dev/word/core/path.cpp		cpp	349 Lines	39.3 KB	May 28, 2014 5:13:25 PM
dev/word/core/pattern.cpp		cpp	70 Lines	33.8 KB	May 28, 2014 5:13:25 PM
dev/word/core/personid.cpp		cpp	23 Lines	3.1 KB	May 28, 2014 5:13:25 PM
dev/word/core/pgp.cpp		cpp	30 Lines	147.3 KB	May 28, 2014 5:13:25 PM
dev/word/core/pic.cpp		cpp	1,873 Lines	198.3 KB	May 28, 2014 5:13:25 PM
dev/word/core/picbullet.cpp		cpp	199 Lines	19.5 KB	May 28, 2014 5:13:25 PM
dev/word/core/pintests.cpp		cpp	551 Lines	87.5 KB	May 28, 2014 5:13:25 PM
dev/word/core/plc.cpp		cpp	1,006 Lines	118 KB	May 28, 2014 5:13:25 PM
dev/word/core/plugui.cpp		cpp	266 Lines	57.3 KB	May 28, 2014 5:13:25 PM
dev/word/core/pmhrender.cpp		cpp	21 Lines	2.4 KB	May 28, 2014 5:13:25 PM
dev/word/core/pmhwdsocore.cpp		cpp	413 Lines	34.2 KB	May 28, 2014 5:13:25 PM
dev/word/core/pollabelcore.cpp		cpp	11 Lines	1.8 KB	May 28, 2014 5:13:25 PM
dev/word/core/prdev.cpp		cpp	1,479 Lines	151.6 KB	May 28, 2014 5:13:25 PM
dev/word/core/prdevwin.cpp		cpp	849 Lines	71 KB	May 28, 2014 5:13:25 PM
dev/word/core/print.cpp		cpp	911 Lines	121.9 KB	May 28, 2014 5:13:25 PM
dev/word/core/printsub.cpp		cpp	459 Lines	76.6 KB	May 28, 2014 5:13:25 PM
dev/word/core/printtable.cpp		cpp	1,450 Lines	129.7 KB	May 28, 2014 5:13:25 PM
dev/word/core/prm.cpp		cpp	3,788 Lines	452.9 KB	May 28, 2014 5:23:03 PM
dev/word/core/proofcore.cpp		cpp	15 Lines	64.8 KB	May 28, 2014 5:13:25 PM
dev/word/core/props.cpp		cpp		353 bytes	May 28, 2014 5:13:25 PM
dev/word/core/protcore.cpp		cpp	229 Lines	48.8 KB	May 28, 2014 5:13:25 PM
dev/word/core/render.cpp		cpp	7 Lines	19.9 KB	May 28, 2014 5:13:25 PM
dev/word/core/rm.cpp		cpp	559 Lines	256.6 KB	May 28, 2014 5:13:25 PM
dev/word/core/rsid.cpp		cpp	139 Lines	20.8 KB	May 28, 2014 5:13:25 PM
dev/word/core/rt.cpp		cpp	391 Lines	61.7 KB	May 28, 2014 5:23:03 PM
dev/word/core/rtd2d.cpp		cpp	2,498 Lines	289.1 KB	May 28, 2014 5:23:03 PM
dev/word/core/rtd2d_cs.cpp		cpp	931 Lines	94.9 KB	May 28, 2014 5:23:03 PM
dev/word/core/rtd2d_ext.cpp		cpp	166 Lines	55 KB	May 28, 2014 5:23:03 PM
dev/word/core/rtf/rtfin.cpp		cpp	5,492 Lines	359.8 KB	May 28, 2014 5:13:25 PM
dev/word/core/rtf/rtfin2.cpp		cpp	2,863 Lines	237.7 KB	May 28, 2014 5:23:03 PM
dev/word/core/rtf/rtfmath.cpp		cpp	212 Lines	24.7 KB	May 28, 2014 5:13:25 PM
dev/word/core/rtf/rtfodraw.cpp		cpp	30 Lines	2.8 KB	May 28, 2014 5:13:25 PM
dev/word/core/rtf/rtfout.cpp		cpp	5,603 Lines	400.3 KB	May 28, 2014 5:23:03 PM
dev/word/core/rtf/rtfout2.cpp		cpp	1,935 Lines	122.3 KB	May 28, 2014 5:13:25 PM
dev/word/core/rtf/rtfrare.cpp		cpp	951 Lines	90.8 KB	May 28, 2014 5:13:26 PM
dev/word/core/rtf/rtfstm.cpp		cpp	48 Lines	10.3 KB	May 28, 2014 5:13:26 PM
dev/word/core/rtf/rtfsubs.cpp		cpp	561 Lines	59.6 KB	May 28, 2014 5:13:26 PM
dev/word/core/rtimrgn.cpp		cpp	152 Lines	17.2 KB	May 28, 2014 5:13:26 PM
dev/word/core/rxv.cpp		cpp	229 Lines	16.1 KB	May 28, 2014 5:23:03 PM
dev/word/core/savebin.cpp		cpp	3,030 Lines	343.7 KB	May 28, 2014 5:23:03 PM
dev/word/core/savefast.cpp		cpp	2,152 Lines	376.8 KB	May 28, 2014 5:23:03 PM
dev/word/core/savetext.cpp		cpp	444 Lines	25.5 KB	May 28, 2014 5:13:26 PM
dev/word/core/sbd.cpp		cpp	128 Lines	67.6 KB	May 28, 2014 5:13:26 PM
dev/word/core/sdt.cpp		cpp	908 Lines	486.6 KB	May 28, 2014 5:23:03 PM
dev/word/core/sdtsuppcore.cpp		cpp	620 Lines	222.4 KB	May 28, 2014 5:13:26 PM
dev/word/core/sect.cpp		cpp	106 Lines	19.7 KB	May 28, 2014 5:13:26 PM
dev/word/core/selcore.cpp		cpp	880 Lines	78.7 KB	May 28, 2014 5:13:26 PM
dev/word/core/sigspot.cpp		cpp	367 Lines	32.5 KB	May 28, 2014 5:13:26 PM
dev/word/core/spellcore.cpp		cpp	4 Lines	11.5 KB	May 28, 2014 5:13:26 PM
dev/word/core/stm.cpp		cpp	18 Lines	3.4 KB	May 28, 2014 5:13:26 PM
dev/word/core/string.cpp		cpp	2,313 Lines	248 KB	May 28, 2014 5:13:26 PM
dev/word/core/strtbl.cpp		cpp	48 Lines	6.2 KB	May 28, 2014 5:13:26 PM
dev/word/core/sttb.cpp		cpp	856 Lines	99.9 KB	May 28, 2014 5:13:26 PM
dev/word/core/style.cpp		cpp	3,646 Lines	658.1 KB	May 28, 2014 5:23:03 PM
dev/word/core/styledef.cpp		cpp	1,446 Lines	321.6 KB	May 28, 2014 5:13:26 PM
dev/word/core/styleui.cpp		cpp	220 Lines	76 KB	May 28, 2014 5:13:26 PM
dev/word/core/sym.cpp		cpp	30 Lines	18.5 KB	May 28, 2014 5:13:26 PM
dev/word/core/syschg.cpp		cpp	374 Lines	40.6 KB	May 28, 2014 5:13:26 PM
dev/word/core/table.cpp		cpp	1,922 Lines	761.7 KB	May 28, 2014 5:23:03 PM
dev/word/core/tcr.cpp		cpp	393 Lines	41.4 KB	May 28, 2014 5:13:26 PM
dev/word/core/telemetry.cpp		cpp	95 Lines	15.2 KB	May 28, 2014 5:13:26 PM
dev/word/core/thread1.cpp		cpp	34 Lines	5.3 KB	May 28, 2014 5:13:26 PM
dev/word/core/tocfld.cpp		cpp	1,160 Lines	81.6 KB	May 28, 2014 5:13:26 PM
dev/word/core/translationparser.cpp		cpp	1,703 Lines	147 KB	May 28, 2014 5:13:26 PM
dev/word/core/txbx.cpp		cpp	764 Lines	92.1 KB	May 28, 2014 5:13:26 PM
dev/word/core/unicode.cpp		cpp	478 Lines	56.8 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/catest.cpp		cpp	9 Lines	12.3 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/csstest.cpp		cpp	3 Lines	4.2 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/filenametest.cpp		cpp	3 Lines	1.4 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/fpathpreftest.cpp		cpp	3 Lines	744 bytes	May 28, 2014 5:13:26 PM
dev/word/core/unittest/mapxtest.cpp		cpp	10 Lines	19.1 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/mathiotest.cpp		cpp	5 Lines	3.3 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/mergegrpprlstest.cpp		cpp	3 Lines	2.6 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/mwdtest.cpp		cpp	7 Lines	13.2 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/ostmtest.cpp		cpp	10 Lines	5.4 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/pagecachetest.cpp		cpp	8 Lines	25.1 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/poitest.cpp		cpp	11 Lines	6.4 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/prooftest.cpp		cpp	3 Lines	1.5 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/rtrgntest.cpp		cpp	7 Lines	7.9 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/rxvtest.cpp		cpp	9 Lines	4.9 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/scriptlayouttest.cpp		cpp	12 Lines	5.8 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/systemlocalestest.cpp		cpp	11 Lines	10.2 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/timetest.cpp		cpp	11 Lines	6.3 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/udtest.cpp		cpp	4 Lines	1.5 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/utiltest.cpp		cpp	8 Lines	3.2 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/vectest.cpp		cpp	18 Lines	8.6 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/xmldrawtest.cpp		cpp	6 Lines	7.6 KB	May 28, 2014 5:13:26 PM
dev/word/core/unittest/xmlfieldtest.cpp		cpp	3 Lines	1.4 KB	May 28, 2014 5:13:26 PM
dev/word/core/updnconvert.cpp		cpp	1,057 Lines	161.6 KB	May 28, 2014 5:13:26 PM
dev/word/core/uspwrap.cpp		cpp	148 Lines	21.2 KB	May 28, 2014 5:13:26 PM
dev/word/core/util.cpp		cpp	994 Lines	138.9 KB	May 28, 2014 5:13:26 PM
dev/word/core/wartcore.cpp		cpp	136 Lines	49.7 KB	May 28, 2014 5:13:26 PM
dev/word/core/wdoart.cpp		cpp		418 bytes	May 28, 2014 5:13:26 PM
dev/word/core/wdoart/CanvasE2o.cpp		cpp	191 Lines	21.7 KB	May 28, 2014 5:13:26 PM
dev/word/core/wdoart/CanvasE2oCommands.cpp		cpp	275 Lines	24.2 KB	May 28, 2014 5:23:03 PM
dev/word/core/wdoart/CanvasE2oDragElement.cpp		cpp	121 Lines	12.5 KB	May 28, 2014 5:13:26 PM
dev/word/core/wdoart/CanvasE2oStg.cpp		cpp	65 Lines	6 KB	May 28, 2014 5:13:26 PM
dev/word/core/wdoart/CanvasE2oView.cpp		cpp	35 Lines	5.5 KB	May 28, 2014 5:13:26 PM
dev/word/core/wdoart/CanvasEditor.cpp		cpp	476 Lines	44.7 KB	May 28, 2014 5:13:26 PM
dev/word/core/wdoart/CanvasSelection.cpp		cpp	30 Lines	3.9 KB	May 28, 2014 5:13:26 PM
dev/word/core/wdoart/CanvasShapeTracker.cpp		cpp	2 Lines	1.4 KB	May 28, 2014 5:13:26 PM
dev/word/core/wdoart/CanvasViewElement.cpp		cpp	161 Lines	17.3 KB	May 28, 2014 5:13:26 PM
dev/word/core/wdoart/LegacyShrinkWrap.cpp		cpp	260 Lines	32.1 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/OMWordShape.cpp		cpp	45 Lines	41.8 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/OMWordShapes.cpp		cpp		10.8 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/WordAnchorParam.cpp		cpp	5 Lines	1.2 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/WordContentPart.cpp		cpp		3.2 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/WordE2oDuos.cpp		cpp	75 Lines	8.2 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/WordE2oEditor.cpp		cpp	188 Lines	21.5 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/WordE2oHelper.cpp		cpp	949 Lines	103.3 KB	May 28, 2014 5:23:03 PM
dev/word/core/wdoart/WordE2oReaderParams.cpp		cpp	8 Lines	2.3 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/WordE2oToGvmlConverter.cpp		cpp	52 Lines	6.5 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/WordEditPointsEditor.cpp		cpp	17 Lines	2.9 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/WordFixTextBoxInfo.cpp		cpp	27 Lines	4.7 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/WordGroupCommands.cpp		cpp	114 Lines	14.5 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/WordGroupE2oStg.cpp		cpp	107 Lines	11.6 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/WordGroupViewElement.cpp		cpp	45 Lines	7.5 KB	May 28, 2014 5:13:28 PM
dev/word/core/wdoart/WordGvmlToE2oConverter.cpp		cpp	203 Lines	22.2 KB	May 28, 2014 5:13:28 PM
dev/word/core/wdoart/WordIDGenerationInfo.cpp		cpp	6 Lines	1.1 KB	May 28, 2014 5:13:28 PM
dev/word/core/wdoart/WordInkE2oStg.cpp		cpp	49 Lines	5.7 KB	May 28, 2014 5:13:28 PM
dev/word/core/wdoart/WordSaveInfo.cpp		cpp	40 Lines	8 KB	May 28, 2014 5:13:28 PM
dev/word/core/wdoart/WordShapeE2oStg.cpp		cpp	169 Lines	18.3 KB	May 28, 2014 5:13:28 PM
dev/word/core/wdoart/WordTextEditingInfo.cpp		cpp	13 Lines	3 KB	May 28, 2014 5:13:28 PM
dev/word/core/wdoart/WordWriterParams.cpp		cpp	16 Lines	2 KB	May 28, 2014 5:13:28 PM
dev/word/core/wdoart/inc/CanvasE2o.h		secondary		6.6 KB	May 28, 2014 5:13:26 PM
dev/word/core/wdoart/inc/CanvasE2oCommands.h		secondary		11.8 KB	May 28, 2014 5:13:26 PM
dev/word/core/wdoart/inc/CanvasE2oDragElement.h		secondary		2.2 KB	May 28, 2014 5:13:26 PM
dev/word/core/wdoart/inc/CanvasE2oStg.h		secondary		1.8 KB	May 28, 2014 5:13:26 PM
dev/word/core/wdoart/inc/CanvasE2oView.h		secondary		1.8 KB	May 28, 2014 5:13:26 PM
dev/word/core/wdoart/inc/CanvasEditor.h		secondary		4 KB	May 28, 2014 5:13:26 PM
dev/word/core/wdoart/inc/CanvasSelection.h		secondary		2.3 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/CanvasShapeTracker.h		secondary		1 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/CanvasViewElement.h		secondary		4.7 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/OMWordShape.h		secondary		13.9 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/OMWordShapes.h		secondary		3.7 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordAnchorParam.h		secondary		1.4 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordContentPart.h		secondary		3.6 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordE2o.h		secondary		3.9 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordE2oClientData.h		secondary		7.8 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordE2oDuos.h		secondary		4.2 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordE2oEditor.h		secondary		4.1 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordE2oHelper.h		secondary		13.8 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordE2oReaderParams.h		secondary		1.9 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordE2oToGvmlConverter.h		secondary		2.1 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordEditPointsEditor.h		secondary		2.1 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordFixTextBoxInfo.h		secondary		5.1 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordGroupCommands.h		secondary		5.3 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordGroupE2o.h		secondary		4.5 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordGroupE2oStg.h		secondary		3.5 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordGroupViewElement.h		secondary		1.6 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordGvmlToE2oConverter.h		secondary		1.8 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordIDGenerationInfo.h		secondary		1.4 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordInkE2o.h		secondary		4.2 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordInkE2oStg.h		secondary		1.5 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordPictureE2oStg.h		secondary		3.7 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordSaveInfo.h		secondary		4.5 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordSelection.h		secondary		17.7 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordShapeE2o.h		secondary		4.9 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordShapeE2oStg.h		secondary		5.8 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordTextEditingInfo.h		secondary		2.6 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordTopdr.h		secondary		32.7 KB	May 28, 2014 5:23:03 PM
dev/word/core/wdoart/inc/WordTypeInfo.h		secondary		1.1 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/WordWriterParams.h		secondary		2 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/Wordanchorinfo.h		secondary		6.9 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/Worde2oview.h		secondary		2.9 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/oartwordcanvas_gen.h		secondary		9.7 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/oartwordcontentpart_gen.h		secondary		3.4 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/oartwordgroup_gen.h		secondary		11.8 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/oartwordshape_gen.h		secondary		13.9 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/pictureduos.h		secondary		2.2 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/picturee2o.h		secondary		19.8 KB	May 28, 2014 5:23:03 PM
dev/word/core/wdoart/inc/picturee2o_gen.h		secondary		3.1 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/wddrs.h		secondary		2 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/wdeditor.h		secondary		5.5 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/wdtopdrcmd.h		secondary		18.5 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/worddragelement.h		secondary		2.6 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/worddrawingeditor.h		secondary		1.4 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/wordgroupe2oview.h		secondary		1.2 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/wordgroupeditor.h		secondary		2.1 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/wordinke2oview.h		secondary		1.3 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/wordinkeditor.h		secondary		1.1 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/wordshapee2oview.h		secondary		1.3 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/wordshapeeditor.h		secondary		1.8 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/wordshapetextviewelement.h		secondary		3.9 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/inc/wordshapeviewelement.h		secondary		1.9 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/oartWordNonEcmaShapeTextbox_gen.cpp		cpp		866 bytes	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/oartWordShapeTextbox_gen.cpp		cpp		851 bytes	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/oartwordcanvas_gen.cpp		cpp	35 Lines	12.8 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/oartwordcontentpart_gen.cpp		cpp	21 Lines	13.5 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/oartwordgroup_gen.cpp		cpp	43 Lines	22.5 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/oartwordshape_gen.cpp		cpp	178 Lines	28.2 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/pictureduos.cpp		cpp	28 Lines	3.8 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/picturee2o.cpp		cpp	512 Lines	76.4 KB	May 28, 2014 5:23:03 PM
dev/word/core/wdoart/picturee2o14_gen.cpp		cpp		792 bytes	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/picturee2o_gen.cpp		cpp	94 Lines	13.9 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/wddrs.cpp		cpp	8 Lines	10.8 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/wdeditor.cpp		cpp	313 Lines	88.3 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/wdtopdrcmd.cpp		cpp	1,082 Lines	164.7 KB	May 28, 2014 5:23:03 PM
dev/word/core/wdoart/word.h		secondary		1.6 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/wordanchorinfo.cpp		cpp	11 Lines	6.8 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/worddragelement.cpp		cpp	16 Lines	3.5 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/worddrawingeditor.cpp		cpp	59 Lines	5.2 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/worde2o.cpp		cpp	58 Lines	10.4 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/worde2oclientdata.cpp		cpp	153 Lines	16.4 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/worde2oview.cpp		cpp	26 Lines	5.3 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/wordgroupe2o.cpp		cpp	84 Lines	12.7 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/wordgroupe2oview.cpp		cpp		2.1 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/wordgroupeditor.cpp		cpp	186 Lines	19.3 KB	May 28, 2014 5:13:27 PM
dev/word/core/wdoart/wordinke2o.cpp		cpp	85 Lines	13.5 KB	May 28, 2014 5:13:28 PM
dev/word/core/wdoart/wordinke2oview.cpp		cpp		2.7 KB	May 28, 2014 5:13:28 PM
dev/word/core/wdoart/wordinkeditor.cpp		cpp	8 Lines	1.1 KB	May 28, 2014 5:13:28 PM
dev/word/core/wdoart/wordpicturee2ostg.cpp		cpp	58 Lines	5.7 KB	May 28, 2014 5:13:28 PM
dev/word/core/wdoart/wordselection.cpp		cpp	318 Lines	50.9 KB	May 28, 2014 5:13:28 PM
dev/word/core/wdoart/wordshapee2o.cpp		cpp	78 Lines	14 KB	May 28, 2014 5:13:28 PM
dev/word/core/wdoart/wordshapee2oview.cpp		cpp	8 Lines	2.2 KB	May 28, 2014 5:13:28 PM
dev/word/core/wdoart/wordshapeeditor.cpp		cpp	25 Lines	4 KB	May 28, 2014 5:13:28 PM
dev/word/core/wdoart/wordshapetextviewelement.cpp		cpp	113 Lines	13.3 KB	May 28, 2014 5:13:28 PM
dev/word/core/wdoart/wordshapeviewelement.cpp		cpp	41 Lines	6.4 KB	May 28, 2014 5:13:28 PM
dev/word/core/wdoart14.cpp		cpp		424 bytes	May 28, 2014 5:13:28 PM
dev/word/core/wink.cpp		cpp	21 Lines	4.4 KB	May 28, 2014 5:13:28 PM
dev/word/core/wmath.cpp		cpp	233 Lines	319.9 KB	May 28, 2014 5:23:03 PM
dev/word/core/wpref.cpp		cpp	1,358 Lines	229.7 KB	May 28, 2014 5:23:03 PM
dev/word/core/wrt.cpp		cpp	31 Lines	5.8 KB	May 28, 2014 5:13:28 PM
dev/word/core/wwdutil.cpp		cpp	249 Lines	26.5 KB	May 28, 2014 5:13:28 PM
dev/word/core/xmlaml.cpp		cpp	1,316 Lines	148.8 KB	May 28, 2014 5:23:03 PM
dev/word/core/xmlaux.cpp		cpp	78 Lines	12.4 KB	May 28, 2014 5:13:28 PM
dev/word/core/xmldiv.cpp		cpp	192 Lines	14.1 KB	May 28, 2014 5:13:28 PM
dev/word/core/xmldoc.cpp		cpp	4,188 Lines	336.3 KB	May 28, 2014 5:23:04 PM
dev/word/core/xmldraw.cpp		cpp	1,557 Lines	358.9 KB	May 28, 2014 5:23:04 PM
dev/word/core/xmlfield.cpp		cpp	50 Lines	189.4 KB	May 28, 2014 5:23:04 PM
dev/word/core/xmlframe.cpp		cpp	288 Lines	26.9 KB	May 28, 2014 5:13:29 PM
dev/word/core/xmlin.cpp		cpp	2,140 Lines	230.9 KB	May 28, 2014 5:13:29 PM
dev/word/core/xmllist.cpp		cpp	911 Lines	72.5 KB	May 28, 2014 5:13:29 PM
dev/word/core/xmlmath.cpp		cpp	241 Lines	39.2 KB	May 28, 2014 5:13:29 PM
dev/word/core/xmlout.cpp		cpp	1,966 Lines	296.2 KB	May 28, 2014 5:23:04 PM
dev/word/core/xmlpage.cpp		cpp	965 Lines	91.9 KB	May 28, 2014 5:13:29 PM
dev/word/core/xmlpara.cpp		cpp	1,268 Lines	115.2 KB	May 28, 2014 5:13:29 PM
dev/word/core/xmlpart.cpp		cpp	218 Lines	17.7 KB	May 28, 2014 5:23:04 PM
dev/word/core/xmlstyle.cpp		cpp	1,762 Lines	132 KB	May 28, 2014 5:13:29 PM
dev/word/core/xmlsupp.cpp		cpp	644 Lines	106.1 KB	May 28, 2014 5:13:29 PM
dev/word/core/xmltbl.cpp		cpp	1,911 Lines	187.5 KB	May 28, 2014 5:23:04 PM
dev/word/core/xmltext.cpp		cpp	1,897 Lines	180.3 KB	May 28, 2014 5:23:04 PM
dev/word/core/xsd.cpp		cpp	24 Lines	71.2 KB	May 28, 2014 5:13:29 PM
dev/word/core/ztx.cpp		cpp	195 Lines	31.8 KB	May 28, 2014 5:13:29 PM
dev/word/endpoints/converters/lyncconv/conv/WordSrvGlue.cpp		cpp	8 Lines	2.8 KB	May 28, 2014 5:13:34 PM
dev/word/endpoints/converters/lyncconv/conv/lyncconv.cpp		cpp	190 Lines	20.3 KB	May 28, 2014 5:13:34 PM
dev/word/endpoints/converters/lyncconv/conv/lyncconv.h		secondary		680 bytes	May 28, 2014 5:13:34 PM
dev/word/endpoints/converters/lyncconv/conv/lynchtmlconv.cpp		cpp	203 Lines	22.3 KB	May 28, 2014 5:23:05 PM
dev/word/endpoints/converters/lyncconv/conv/lynchtmlconv.h		secondary		2.3 KB	May 28, 2014 5:13:34 PM
dev/word/endpoints/converters/lyncconv/inc/lynchtmlconvforidl.h		secondary		988 bytes	May 28, 2014 5:13:34 PM
dev/word/endpoints/converters/lyncconv/inc/lynchtmlconvutil.h		secondary		11.9 KB	May 28, 2014 5:13:34 PM
dev/word/endpoints/converters/lyncconv/proxy/lynchtmlconvproxy.cpp		cpp	179 Lines	15.8 KB	May 28, 2014 5:13:34 PM
dev/word/endpoints/converters/lyncconv/proxy/lynchtmlconvpxy.c		cpp	1 Lines	455 bytes	May 28, 2014 5:13:34 PM
dev/word/endpoints/converters/metrocnv/WordSrvGlue.cpp		cpp	8 Lines	2.8 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/converters/metrocnv/metrocnv.cpp		cpp	96 Lines	25.2 KB	May 28, 2014 5:13:34 PM
dev/word/endpoints/converters/wordcnvpxy/metrocnvproxy.cpp		cpp	286 Lines	30.2 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/converters/wordcnvpxy/wordconvproxy.c		cpp	1 Lines	514 bytes	May 28, 2014 5:13:35 PM
dev/word/endpoints/converters/wordconv/cwordconv.cpp		cpp	329 Lines	30.8 KB	May 28, 2014 5:23:05 PM
dev/word/endpoints/converters/wordconv/cwordconv.h		secondary		2.6 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/WPStubs/Stubs_WP.cpp		cpp	180 Lines	66.4 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/metro/comptest/GrfCommands.cpp		cpp	27 Lines	4 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/comptest/TaskLibMetro.cpp		cpp	76 Lines	11.5 KB	May 28, 2014 5:23:05 PM
dev/word/endpoints/metro/comptest/TaskLibMetro_Imm.cpp		cpp	26 Lines	3.2 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/comptest/TaskLibMetro_Imm.h		secondary		1.1 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/comptest/TaskLibMetro_Wp.cpp		cpp	22 Lines	3.1 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/comptest/TaskLibMetro_Wp.h		secondary		1.1 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/comptest/TasklibMetro.h		secondary		2 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/comptest/TestUIA.cpp		cpp	29 Lines	5.7 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/comptest/WordGRFSimulateKeyboardInputSpecialUseCommand.cpp		cpp	35 Lines	6.3 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/CPrintTaskHandler.cpp		cpp	36 Lines	4.8 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/CPrintTaskHandler.h		secondary		1.1 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/DocumentCanvasUIAPeer.cpp		cpp	30 Lines	3.4 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/DocumentCanvasUIAPeer.h		secondary		6.1 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/DocumentCanvasUserControl.cpp		cpp	60 Lines	8.2 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/DocumentCanvasUserControl.h		secondary		2.4 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/FastFindBarUIImpl.cpp		cpp	24 Lines	4.3 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/FastImmersiveZoomUIImpl.cpp		cpp	62 Lines	10.4 KB	May 28, 2014 5:23:05 PM
dev/word/endpoints/metro/dll/ui/FastKeyEventHandlerUIImpl.cpp		cpp	59 Lines	8 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/FastMainCanvasUIImplWinRT.cpp		cpp	131 Lines	17.1 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/FastMainCanvasUIImplWinRT_imm.cpp		cpp	2 Lines	954 bytes	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/FastMainCanvasUIImplWinRT_wp.cpp		cpp		737 bytes	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/FastScrollerStateUIImpl.cpp		cpp	46 Lines	5.9 KB	May 28, 2014 5:23:05 PM
dev/word/endpoints/metro/dll/ui/FastUIMUIImpl.cpp		cpp	44 Lines	5.6 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/FastWordWindowBackUIImpl.cpp		cpp	84 Lines	9.6 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/IWordCoreImmInformal.h		secondary		510 bytes	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/PLMEventing.cpp		cpp	17 Lines	4 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/ReadingPaneDocumentIm.cpp		cpp	30 Lines	5.6 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/ReadingPaneDocumentIm.h		secondary		1.7 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/ReadingPaneDocumentPartIm.cpp		cpp	70 Lines	11.2 KB	May 28, 2014 5:23:05 PM
dev/word/endpoints/metro/dll/ui/ReadingPaneDocumentPartIm.h		secondary		2.2 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/ReadingPaneViewIm.cpp		cpp	46 Lines	7.5 KB	May 28, 2014 5:23:05 PM
dev/word/endpoints/metro/dll/ui/ReadingPaneViewIm.h		secondary		1.8 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/SettingsManager.cpp		cpp	10 Lines	2.4 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/SettingsManager.h		secondary		1.3 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/SettingsManager_imm.cpp		cpp	4 Lines	1 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/SettingsManager_wp.cpp		cpp	1 Lines	660 bytes	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/SoftKbd.cpp		cpp	87 Lines	22.9 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/SoftKbd.h		secondary		2.4 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/TouchInputUtil.cpp		cpp	17 Lines	2.5 KB	May 28, 2014 5:13:36 PM
dev/word/endpoints/metro/dll/ui/UIATextProvider.cpp		cpp	26 Lines	5.5 KB	May 28, 2014 5:13:36 PM
dev/word/endpoints/metro/dll/ui/UIATextProvider.h		secondary		4.8 KB	May 28, 2014 5:13:36 PM
dev/word/endpoints/metro/dll/ui/UIInputManager.cpp		cpp	309 Lines	34.9 KB	May 28, 2014 5:23:05 PM
dev/word/endpoints/metro/dll/ui/UIMouseTool.cpp		cpp	3 Lines	1.4 KB	May 28, 2014 5:13:36 PM
dev/word/endpoints/metro/dll/ui/UIScrollingLayerListener.cpp		cpp	16 Lines	3.1 KB	May 28, 2014 5:13:36 PM
dev/word/endpoints/metro/dll/ui/WordDocumentIm.cpp		cpp	25 Lines	5.5 KB	May 28, 2014 5:13:36 PM
dev/word/endpoints/metro/dll/ui/WordDocumentIm.h		secondary		1.7 KB	May 28, 2014 5:13:36 PM
dev/word/endpoints/metro/dll/ui/WordViewIm.cpp		cpp	31 Lines	5.3 KB	May 28, 2014 5:23:05 PM
dev/word/endpoints/metro/dll/ui/WordViewIm.h		secondary		1.6 KB	May 28, 2014 5:13:36 PM
dev/word/endpoints/metro/dll/ui/commanduser.cpp		cpp	26 Lines	6 KB	May 28, 2014 5:23:05 PM
dev/word/endpoints/metro/dll/ui/commanduser.h		secondary	2 Lines	2.3 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/controluser.cpp		cpp	2 Lines	805 bytes	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/controluser.h		secondary	1 Lines	1.2 KB	May 28, 2014 5:23:05 PM
dev/word/endpoints/metro/dll/ui/coreim.cpp		cpp	296 Lines	35.5 KB	May 28, 2014 5:23:05 PM
dev/word/endpoints/metro/dll/ui/coreim.h		secondary		5.1 KB	May 28, 2014 5:23:05 PM
dev/word/endpoints/metro/dll/ui/cprinthandler.cpp		cpp	80 Lines	10.8 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/cprinthandler.h		secondary		2 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/ctlFCI.cpp		cpp	22 Lines	2.9 KB	May 28, 2014 5:23:05 PM
dev/word/endpoints/metro/dll/ui/ctlFCI.h		secondary		987 bytes	May 28, 2014 5:23:05 PM
dev/word/endpoints/metro/dll/ui/ctlFeedback.cpp		cpp	6 Lines	1.4 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/ctlFeedback.h		secondary		840 bytes	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/cursor_ui.cpp		cpp	17 Lines	12.7 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/precomp.cpp		cpp		280 bytes	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/precomp.h		secondary		2.7 KB	May 28, 2014 5:13:35 PM
dev/word/endpoints/metro/dll/ui/uim.cpp		cpp	5 Lines	1023 bytes	May 28, 2014 5:13:36 PM
dev/word/endpoints/metro/dll/ui/winrtutil.h		secondary	6 Lines	2 KB	May 28, 2014 5:13:36 PM
dev/word/endpoints/metro/dll/ui/xamlutil.cpp		cpp	54 Lines	8 KB	May 28, 2014 5:13:36 PM
dev/word/endpoints/metro/dll/ui/xamlutil.h		secondary		1.3 KB	May 28, 2014 5:13:36 PM
dev/word/endpoints/metro/lib/LoadingUICustomContent.cpp		cpp	26 Lines	7.3 KB	May 28, 2014 5:13:37 PM
dev/word/endpoints/metro/lib/LoadingUICustomContent.h		secondary		2.2 KB	May 28, 2014 5:13:37 PM
dev/word/endpoints/metro/lib/LoadingUIUser.cpp		cpp	10 Lines	2.3 KB	May 28, 2014 5:13:37 PM
dev/word/endpoints/metro/lib/LoadingUIUser.h		secondary		939 bytes	May 28, 2014 5:13:37 PM
dev/word/endpoints/metro/lib/applicationuser.cpp		cpp	181 Lines	31.1 KB	May 28, 2014 5:13:37 PM
dev/word/endpoints/metro/lib/applicationuser.h		secondary	1 Lines	5 KB	May 28, 2014 5:13:37 PM
dev/word/endpoints/metro/lib/applicationuser_imm.cpp		cpp	13 Lines	2.2 KB	May 28, 2014 5:13:37 PM
dev/word/endpoints/metro/lib/applicationuser_wp.cpp		cpp	3 Lines	760 bytes	May 28, 2014 5:13:37 PM
dev/word/endpoints/metro/lib/landingpageuser.cpp		cpp	19 Lines	3.2 KB	May 28, 2014 5:23:05 PM
dev/word/endpoints/metro/lib/landingpageuser.h		secondary	1 Lines	1.2 KB	May 28, 2014 5:23:06 PM
dev/word/endpoints/metro/lib/precomp.cpp		cpp		278 bytes	May 28, 2014 5:13:37 PM
dev/word/endpoints/metro/lib/precomp.h		secondary		2.3 KB	May 28, 2014 5:13:37 PM
dev/word/endpoints/metro/lib/syncstatuspaneuser.cpp		cpp	25 Lines	2.9 KB	May 28, 2014 5:13:37 PM
dev/word/endpoints/metro/lib/syncstatuspaneuser.h		secondary	1 Lines	1.2 KB	May 28, 2014 5:13:37 PM
dev/word/endpoints/metro/lib/word.cpp		cpp	4 Lines	1.3 KB	May 28, 2014 5:13:37 PM
dev/word/endpoints/metro/lib/wordhostim.cpp		cpp	43 Lines	5.5 KB	May 28, 2014 5:13:37 PM
dev/word/endpoints/metro/lib/wordhostim.h		secondary	2 Lines	1.5 KB	May 28, 2014 5:13:37 PM
dev/word/endpoints/metro/lib/wordhostim_imm.cpp		cpp	1 Lines	373 bytes	May 28, 2014 5:13:38 PM
dev/word/endpoints/metro/lib/wordhostim_wp.cpp		cpp	1 Lines	370 bytes	May 28, 2014 5:13:38 PM
dev/word/endpoints/metro/lib/wordimres.h		secondary		322 bytes	May 28, 2014 5:13:38 PM
dev/word/endpoints/metro/wlibim/unittest/unittest.cpp		cpp	18 Lines	3.3 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/exe/sword.cpp		cpp	24 Lines	11 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/exe/wordsrvglue.cpp		cpp	5 Lines	2.3 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/stubs/osfhoststubs.cpp		cpp	27 Lines	4.2 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/stubs/plmeventing.cpp		cpp		870 bytes	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/stubs/pmhstubs.cpp		cpp	80 Lines	19.6 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/stubs/secreadsrv.cpp		cpp	15 Lines	5.8 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/stubs/stub.cpp		cpp	17 Lines	103.4 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/stubs/stubfld.cpp		cpp		13.3 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/stubs/stubgen1.cpp		cpp	13 Lines	552.3 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/stubs/stubgen2.cpp		cpp	233 Lines	55.8 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/stubs/stubgen3.cpp		cpp	190 Lines	48.3 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/stubs/stubgen4.cpp		cpp	31 Lines	56.2 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/stubs/stubvar1.cpp		cpp	130 Lines	43.5 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/wacword/WacLogger.cpp		cpp	5 Lines	7 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/wacword/WacMsoServerUser.cpp		cpp	1 Lines	4.8 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/wacword/WacMsoServerUser.h		secondary		1.3 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/wacword/WordInterface.h		secondary		496 bytes	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wacword/WordServer.cpp		cpp	38 Lines	15.7 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wacword/WordServer.h		secondary		1.5 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wacword/wacfile.cpp		cpp	20 Lines	2.4 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/wacword/wacfile.h		secondary		715 bytes	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/wacword/wacword.h		secondary		1.3 KB	May 28, 2014 5:13:38 PM
dev/word/endpoints/srv/wordsrv/EnterpriseLogger.cpp		cpp	35 Lines	5.7 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/LoggingHelperServer.cpp		cpp	64 Lines	11.2 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/WordLogSite.cpp		cpp	5 Lines	2.9 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/WordLogSite.h		secondary		1 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/WordMsoServerUser.cpp		cpp	12 Lines	2.3 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/WordMsoServerUser.h		secondary		864 bytes	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/appmode.cpp		cpp	2 Lines	928 bytes	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/bootsrv.cpp		cpp	222 Lines	21.5 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/dllmain.cpp		cpp	16 Lines	1.2 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/docserver.cpp		cpp	29 Lines	5.9 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/filewrap.cpp		cpp	85 Lines	7.5 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/filewrap.h		secondary		1.3 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/fnmserver.cpp		cpp	6 Lines	1.8 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/inc/CDocExShim.h		secondary		11.8 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/inc/EnterpriseLogger.h		secondary		1.6 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/inc/wordsrv.h		secondary		646 bytes	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/initsrv.cpp		cpp	84 Lines	8.8 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/insbufsrv.cpp		cpp	17 Lines	7.9 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/loadfont.cpp		cpp	3 Lines	848 bytes	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/mailmergeserver.cpp		cpp	12 Lines	3.2 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/msosrv.cpp		cpp	21 Lines	3.1 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/oartsrv.cpp		cpp	125 Lines	53.2 KB	May 28, 2014 5:23:06 PM
dev/word/endpoints/srv/wordsrv/odrawsrv.cpp		cpp	243 Lines	37.9 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/odtsrv.cpp		cpp	83 Lines	14 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/opensrv.cpp		cpp	155 Lines	15.6 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/pansub.cpp		cpp	2 Lines	1.4 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/pmhwdsoserver.cpp		cpp	1 Lines	960 bytes	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/printsrv.cpp		cpp	71 Lines	28.6 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/savesrv.cpp		cpp	10 Lines	3.1 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/sdtserver.cpp		cpp		807 bytes	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/syschgserver.cpp		cpp		820 bytes	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/thumbnail.cpp		cpp	3 Lines	7.2 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/utilsrv.cpp		cpp	8 Lines	2.3 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/viewwrap.cpp		cpp	348 Lines	38 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/viewwrap.h		secondary		4.8 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/srv/wordsrv/wwdsrv.cpp		cpp	58 Lines	8.6 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/win/factoids/FactoidsOnIdle.cpp		cpp	40 Lines	3.9 KB	May 28, 2014 5:13:39 PM
dev/word/endpoints/win/winword/winword.cpp		cpp	62 Lines	7.8 KB	May 28, 2014 5:13:41 PM
dev/word/endpoints/win/wwlib/unittest/unittest.cpp		cpp	23 Lines	2.9 KB	May 28, 2014 5:13:41 PM
dev/word/endpoints/win/wwlibcxm/wwlibcxm.cpp		cpp	14 Lines	2.2 KB	May 28, 2014 5:13:42 PM
dev/word/inc/Abort.h		secondary		3.8 KB	May 28, 2014 5:13:42 PM
dev/word/inc/Aligners.h		secondary		7.7 KB	May 28, 2014 5:13:42 PM
dev/word/inc/AsyncUtils.h		secondary		5.3 KB	May 28, 2014 5:13:42 PM
dev/word/inc/IWordMsoServerUser.h		secondary		983 bytes	May 28, 2014 5:13:44 PM
dev/word/inc/IWordServerLogger.h		secondary		2.7 KB	May 28, 2014 5:13:44 PM
dev/word/inc/LegacyShrinkWrap.h		secondary		1.2 KB	May 28, 2014 5:13:44 PM
dev/word/inc/LoggingHelper.h		secondary		2.4 KB	May 28, 2014 5:13:44 PM
dev/word/inc/OsfApiSet.h		secondary		3.3 KB	May 28, 2014 5:13:45 PM
dev/word/inc/SaveInitiateKind.h		secondary		1 KB	May 28, 2014 5:13:46 PM
dev/word/inc/TeDesktopOnly.h		secondary		596 bytes	May 28, 2014 5:13:46 PM
dev/word/inc/TopOfMainTrigger.h		secondary		1 KB	May 28, 2014 5:13:46 PM
dev/word/inc/TouchInputUtil.h		secondary		1.7 KB	May 28, 2014 5:13:46 PM
dev/word/inc/WicFactory.h		secondary		329 bytes	May 28, 2014 5:13:46 PM
dev/word/inc/WordFloatieUser.h		secondary		1.5 KB	May 28, 2014 5:13:46 PM
dev/word/inc/WordSalHelpers.h		secondary		2.6 KB	May 28, 2014 5:13:46 PM
dev/word/inc/appmode.h		secondary	32 Lines	29.5 KB	May 28, 2014 5:13:42 PM
dev/word/inc/arrayx.h		secondary	121 Lines	69.2 KB	May 28, 2014 5:13:42 PM
dev/word/inc/bitmap.h		secondary		1020 bytes	May 28, 2014 5:13:42 PM
dev/word/inc/bookmark.h		secondary	50 Lines	36.6 KB	May 28, 2014 5:13:42 PM
dev/word/inc/boot.h		secondary		7.6 KB	May 28, 2014 5:13:42 PM
dev/word/inc/border.h		secondary	29 Lines	48 KB	May 28, 2014 5:13:42 PM
dev/word/inc/ca.h		secondary	16 Lines	5.4 KB	May 28, 2014 5:13:42 PM
dev/word/inc/cdscmd_.h		secondary		621 bytes	May 28, 2014 5:13:42 PM
dev/word/inc/ch.h		secondary	17 Lines	27.7 KB	May 28, 2014 5:13:42 PM
dev/word/inc/coartprintmanager.h		secondary		2.9 KB	May 28, 2014 5:13:42 PM
dev/word/inc/coauthinfo.h		secondary		2 KB	May 28, 2014 5:13:42 PM
dev/word/inc/color.h		secondary		7.1 KB	May 28, 2014 5:13:42 PM
dev/word/inc/convertsrv.h		secondary		2 KB	May 28, 2014 5:13:42 PM
dev/word/inc/cpsty.h		secondary		2 KB	May 28, 2014 5:13:42 PM
dev/word/inc/csm.h		secondary		3.3 KB	May 28, 2014 5:13:42 PM
dev/word/inc/csmm5.h		secondary		1.3 KB	May 28, 2014 5:13:42 PM
dev/word/inc/csscascd.h		secondary		2.8 KB	May 28, 2014 5:13:42 PM
dev/word/inc/csscutil.h		secondary		18 KB	May 28, 2014 5:13:42 PM
dev/word/inc/cssin.h		secondary		14.2 KB	May 28, 2014 5:13:42 PM
dev/word/inc/cursors_resources.h		secondary		6.9 KB	May 28, 2014 5:13:42 PM
dev/word/inc/cvauto.h		secondary	3 Lines	1.3 KB	May 28, 2014 5:13:42 PM
dev/word/inc/d2d1print.h		secondary		3.5 KB	May 28, 2014 5:23:06 PM
dev/word/inc/dbcs.h		secondary	74 Lines	21.6 KB	May 28, 2014 5:13:42 PM
dev/word/inc/debug.h		secondary	3 Lines	71.9 KB	May 28, 2014 5:13:42 PM
dev/word/inc/debugasserts.h		secondary		2.6 KB	May 28, 2014 5:13:42 PM
dev/word/inc/debugwin.h		secondary		5.9 KB	May 28, 2014 5:13:42 PM
dev/word/inc/directorywrappers.h		secondary		429 bytes	May 28, 2014 5:13:42 PM
dev/word/inc/disp_.h		secondary		1.1 KB	May 28, 2014 5:13:42 PM
dev/word/inc/dispcore.h		secondary	147 Lines	119.5 KB	May 28, 2014 5:23:06 PM
dev/word/inc/doc.h		secondary	194 Lines	315.4 KB	May 28, 2014 5:23:06 PM
dev/word/inc/docstats.h		secondary		1.3 KB	May 28, 2014 5:13:42 PM
dev/word/inc/doslib.h		secondary		417 bytes	May 28, 2014 5:13:42 PM
dev/word/inc/dota.h		secondary		61.6 KB	May 28, 2014 5:13:42 PM
dev/word/inc/drawspec.h		secondary		2.2 KB	May 28, 2014 5:13:43 PM
dev/word/inc/dsdserializedversion.h		secondary		777 bytes	May 28, 2014 5:13:43 PM
dev/word/inc/dttm.h		secondary	4 Lines	10.5 KB	May 28, 2014 5:13:43 PM
dev/word/inc/e2otext.h		secondary		11.6 KB	May 28, 2014 5:13:43 PM
dev/word/inc/eid.h		secondary	25 Lines	56.5 KB	May 28, 2014 5:23:06 PM
dev/word/inc/etcmd_.h		secondary		1.3 KB	May 28, 2014 5:13:43 PM
dev/word/inc/extchar.h		secondary		2.4 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/FastImmersiveZoom.fmdl.h		secondary		31 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/FastInputManager.fmdl.h		secondary		42.7 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/FastMainCanvas.fmdl.h		secondary		20.8 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/FastMainCanvasAppImpl.h		secondary		962 bytes	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/FastPrintTask.fmdl.h		secondary		28.1 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/FastPrintTaskAppImpl.h		secondary		1.3 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/FastReadingPaneDocument.fmdl.h		secondary		26.3 KB	May 28, 2014 5:23:06 PM
dev/word/inc/fastmodel/FastReadingPaneDocumentAppImpl.h		secondary		1.6 KB	May 28, 2014 5:23:06 PM
dev/word/inc/fastmodel/FastReadingPaneDocumentPart.fmdl.h		secondary		35.1 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/FastReadingPaneDocumentPartAppImpl.h		secondary		1.2 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/FastReadingPaneView.fmdl.h		secondary		25 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/FastReadingPaneViewAppImpl.h		secondary		1.1 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/FastUIM.fmdl.h		secondary		37.5 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/FastWordData.fmdl.h		secondary		2.9 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/FastWordDocument.fmdl.h		secondary		30.6 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/FastWordDocumentAppImpl.h		secondary		1.2 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/FastWordView.fmdl.h		secondary		23.5 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/FastWordWindow.fmdl.h		secondary		77.1 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/FastWordWindowAppImpl.h		secondary		1.1 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/FastWordWindowBackUIImpl.h		secondary		1.4 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/Fastfindbar.fmdl.h		secondary		20.7 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/LangProfileNotifySink.h		secondary		1.3 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/MessageBarInfo.h		secondary		7.4 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/UIInputManager.h		secondary		10.2 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/UIMouseTool.h		secondary		6.1 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/UITEDispatcher.h		secondary		3.4 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/UITe.h		secondary		3.7 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/UITools.h		secondary		2.3 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/UITouchTool.h		secondary		3 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/WordGalBulNum.fmdl.h		secondary		18.4 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/WordGalTextFlow.fmdl.h		secondary		18.6 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/WordStylesGallery.fmdl.h		secondary		17.7 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/facelayerdata.h		secondary		2.8 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/fastcanvaselement.fmdl.h		secondary		36.4 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/fasthittester.h		secondary		24.8 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/fastkeyeventhandleruiimpl.h		secondary		1.2 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/fastuimuiimpl.h		secondary		919 bytes	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/fastwordviewappimpl.h		secondary		1015 bytes	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/threadutil.h		secondary		1.3 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fastmodel/wordcore.fmdl.h		secondary		34.8 KB	May 28, 2014 5:23:06 PM
dev/word/inc/fastmodel/wordcoreappimpl.h		secondary		2 KB	May 28, 2014 5:23:06 PM
dev/word/inc/fetch.inl		secondary		408.3 KB	May 28, 2014 5:23:06 PM
dev/word/inc/fetchmod.h		secondary	21 Lines	5.8 KB	May 28, 2014 5:13:43 PM
dev/word/inc/field.inl		secondary		169.4 KB	May 28, 2014 5:23:06 PM
dev/word/inc/fieldclc.h		secondary		1.7 KB	May 28, 2014 5:13:43 PM
dev/word/inc/file.h		secondary	96 Lines	213.3 KB	May 28, 2014 5:23:06 PM
dev/word/inc/file_.h		secondary		650 bytes	May 28, 2014 5:13:43 PM
dev/word/inc/filewrapi.h		secondary		684 bytes	May 28, 2014 5:13:43 PM
dev/word/inc/fkp_.h		secondary		3.4 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fnm.h		secondary	8 Lines	7.8 KB	May 28, 2014 5:13:43 PM
dev/word/inc/format.h		secondary	66 Lines	55 KB	May 28, 2014 5:13:43 PM
dev/word/inc/frobb.h		secondary		1.7 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fsbreak.h		secondary		6.1 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fscache.h		secondary		6.7 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fsdebug.h		secondary		5 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fsfig.h		secondary		4.3 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fsframe.h		secondary		7.7 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fsgen.h		secondary		18.6 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fshack.h		secondary		472 bytes	May 28, 2014 5:13:43 PM
dev/word/inc/fshelp.h		secondary		40.2 KB	May 28, 2014 5:23:06 PM
dev/word/inc/fsmath.h		secondary		6.2 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fsnm.h		secondary		1.7 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fsobj.h		secondary		2.5 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fstable.h		secondary		17.8 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fstxt.h		secondary		27.7 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fsutil.h		secondary	1 Lines	1.2 KB	May 28, 2014 5:13:43 PM
dev/word/inc/fswrd.h		secondary		20.1 KB	May 28, 2014 5:13:43 PM
dev/word/inc/ftutil.h		secondary		1.5 KB	May 28, 2014 5:13:43 PM
dev/word/inc/galleries.h		secondary		10.3 KB	May 28, 2014 5:13:43 PM
dev/word/inc/geom.h		secondary		1.6 KB	May 28, 2014 5:13:43 PM
dev/word/inc/grammar_.h		secondary		53.1 KB	May 28, 2014 5:13:43 PM
dev/word/inc/grutil_.h		secondary		5.1 KB	May 28, 2014 5:13:43 PM
dev/word/inc/hdd.h		secondary		826 bytes	May 28, 2014 5:13:43 PM
dev/word/inc/heap.h		secondary	23 Lines	19.6 KB	May 28, 2014 5:13:43 PM
dev/word/inc/hhc_.h		secondary		8.6 KB	May 28, 2014 5:13:43 PM
dev/word/inc/hwndwrappers.h		secondary		374 bytes	May 28, 2014 5:13:43 PM
dev/word/inc/icons_resources.h		secondary		1.3 KB	May 28, 2014 5:13:44 PM
dev/word/inc/idlepublic.h		secondary	27 Lines	11.6 KB	May 28, 2014 5:23:06 PM
dev/word/inc/insbuf.h		secondary	2 Lines	5.1 KB	May 28, 2014 5:13:44 PM
dev/word/inc/insbufutil.h		secondary		2 KB	May 28, 2014 5:13:44 PM
dev/word/inc/inter.h		secondary		19 KB	May 28, 2014 5:13:44 PM
dev/word/inc/istreamlog.h		secondary		3.2 KB	May 28, 2014 5:13:44 PM
dev/word/inc/kinsoku.h		secondary	22 Lines	5.8 KB	May 28, 2014 5:13:44 PM
dev/word/inc/lang.h		secondary	23 Lines	11.2 KB	May 28, 2014 5:13:44 PM
dev/word/inc/layout.h		secondary	31 Lines	62.3 KB	May 28, 2014 5:13:44 PM
dev/word/inc/log.h		secondary		1.9 KB	May 28, 2014 5:13:44 PM
dev/word/inc/lshack.h		secondary		2.6 KB	May 28, 2014 5:13:44 PM
dev/word/inc/mapfnpfcb.h		secondary	3 Lines	3.4 KB	May 28, 2014 5:13:44 PM
dev/word/inc/mapx.h		secondary	211 Lines	28.5 KB	May 28, 2014 5:13:44 PM
dev/word/inc/message.h		secondary	3 Lines	46.8 KB	May 28, 2014 5:13:44 PM
dev/word/inc/metro/CSaveStreamManager.h		secondary		3.6 KB	May 28, 2014 5:13:44 PM
dev/word/inc/metro/FastFindBarUIImpl.h		secondary		1 KB	May 28, 2014 5:13:44 PM
dev/word/inc/metro/FastImmersiveZoomUIImpl.h		secondary		2.3 KB	May 28, 2014 5:13:45 PM
dev/word/inc/metro/FastMainCanvasUIImplWinRT.h		secondary		2.4 KB	May 28, 2014 5:13:45 PM
dev/word/inc/metro/FastScrollerStateUIImpl.h		secondary		1.3 KB	May 28, 2014 5:13:45 PM
dev/word/inc/metro/PLMEventing.h		secondary		1.5 KB	May 28, 2014 5:13:45 PM
dev/word/inc/metro/PLMEventing_internal.h		secondary		5.8 KB	May 28, 2014 5:13:45 PM
dev/word/inc/metro/UIInputManagerWinRTAdapter.h		secondary		4.4 KB	May 28, 2014 5:13:45 PM
dev/word/inc/metro/UIScrollingLayerListener.h		secondary		1.1 KB	May 28, 2014 5:13:45 PM
dev/word/inc/metro/WordActivation.h		secondary		1.2 KB	May 28, 2014 5:13:45 PM
dev/word/inc/metrocommon.h		secondary	43 Lines	9.9 KB	May 28, 2014 5:13:45 PM
dev/word/inc/metroin.h		secondary		11.2 KB	May 28, 2014 5:13:45 PM
dev/word/inc/metrolego.h		secondary		1.1 KB	May 28, 2014 5:13:45 PM
dev/word/inc/metroole.h		secondary		1.4 KB	May 28, 2014 5:13:45 PM
dev/word/inc/metroout.h		secondary		11 KB	May 28, 2014 5:13:45 PM
dev/word/inc/mtxi.h		secondary		5.7 KB	May 28, 2014 5:13:45 PM
dev/word/inc/mtxi_.h		secondary		781 bytes	May 28, 2014 5:13:45 PM
dev/word/inc/mwd.h		secondary	22 Lines	19.4 KB	May 28, 2014 5:13:45 PM
dev/word/inc/myso.h		secondary		4.8 KB	May 28, 2014 5:13:45 PM
dev/word/inc/mystg.h		secondary		2.9 KB	May 28, 2014 5:13:45 PM
dev/word/inc/mystge.h		secondary		1.7 KB	May 28, 2014 5:13:45 PM
dev/word/inc/mystgw.h		secondary		3.3 KB	May 28, 2014 5:13:45 PM
dev/word/inc/mystm.h		secondary		2.3 KB	May 28, 2014 5:13:45 PM
dev/word/inc/mystmw.h		secondary		2.7 KB	May 28, 2014 5:13:45 PM
dev/word/inc/myx.h		secondary		24 KB	May 28, 2014 5:13:45 PM
dev/word/inc/myxr.h		secondary		8 KB	May 28, 2014 5:13:45 PM
dev/word/inc/nt_dos.h		secondary		3 KB	May 28, 2014 5:13:45 PM
dev/word/inc/number.h		secondary	1 Lines	24.1 KB	May 28, 2014 5:13:45 PM
dev/word/inc/oagp.h		secondary		1.8 KB	May 28, 2014 5:13:45 PM
dev/word/inc/oartanchor.h		secondary	35 Lines	28.4 KB	May 28, 2014 5:13:45 PM
dev/word/inc/oartapp.h		secondary		3 KB	May 28, 2014 5:13:45 PM
dev/word/inc/oartcore.h		secondary		908 bytes	May 28, 2014 5:13:45 PM
dev/word/inc/oartofc.h		secondary		1 KB	May 28, 2014 5:13:45 PM
dev/word/inc/oartoss.h		secondary	12 Lines	10.6 KB	May 28, 2014 5:13:45 PM
dev/word/inc/oartproxy.h		secondary	19 Lines	40.6 KB	May 28, 2014 5:13:45 PM
dev/word/inc/oartutil.h		secondary	6 Lines	14.2 KB	May 28, 2014 5:13:45 PM
dev/word/inc/ofx.h		secondary		3.8 KB	May 28, 2014 5:13:45 PM
dev/word/inc/ole2dbg.h		secondary		1002 bytes	May 28, 2014 5:13:45 PM
dev/word/inc/open.h		secondary		9.4 KB	May 28, 2014 5:13:45 PM
dev/word/inc/osmbc.h		secondary		1.8 KB	May 28, 2014 5:13:45 PM
dev/word/inc/ostrtype.h		secondary		3.8 KB	May 28, 2014 5:13:45 PM
dev/word/inc/otannot.h		secondary		9.3 KB	May 28, 2014 5:13:45 PM
dev/word/inc/otaux.h		secondary		473 bytes	May 28, 2014 5:13:45 PM
dev/word/inc/otcommon.h		secondary		3.6 KB	May 28, 2014 5:13:45 PM
dev/word/inc/otfield.h		secondary		5.2 KB	May 28, 2014 5:13:45 PM
dev/word/inc/otin.h		secondary		8.7 KB	May 28, 2014 5:13:45 PM
dev/word/inc/otlist.h		secondary		2.3 KB	May 28, 2014 5:13:45 PM
dev/word/inc/otmath.h		secondary		624 bytes	May 28, 2014 5:13:45 PM
dev/word/inc/otmm.h		secondary		501 bytes	May 28, 2014 5:13:45 PM
dev/word/inc/otout.h		secondary		6.3 KB	May 28, 2014 5:13:45 PM
dev/word/inc/otpage.h		secondary		13.9 KB	May 28, 2014 5:13:45 PM
dev/word/inc/otpara.h		secondary		1.7 KB	May 28, 2014 5:13:45 PM
dev/word/inc/otstyle.h		secondary		3.8 KB	May 28, 2014 5:13:45 PM
dev/word/inc/ottbl.h		secondary		2.5 KB	May 28, 2014 5:13:45 PM
dev/word/inc/ottext.h		secondary		1.9 KB	May 28, 2014 5:13:45 PM
dev/word/inc/owningbstr.h		secondary	7 Lines	2.1 KB	May 28, 2014 5:13:45 PM
dev/word/inc/pagecache.h		secondary	15 Lines	13.7 KB	May 28, 2014 5:13:45 PM
dev/word/inc/parid.h		secondary		12.5 KB	May 28, 2014 5:13:45 PM
dev/word/inc/parid_.h		secondary		1.3 KB	May 28, 2014 5:13:45 PM
dev/word/inc/path.h		secondary	14 Lines	29 KB	May 28, 2014 5:13:45 PM
dev/word/inc/pattern.h		secondary	7 Lines	8.2 KB	May 28, 2014 5:13:45 PM
dev/word/inc/persona.h		secondary		3 KB	May 28, 2014 5:13:45 PM
dev/word/inc/pgsetup_.h		secondary		12.4 KB	May 28, 2014 5:13:45 PM
dev/word/inc/plc.h		secondary	4 Lines	8.1 KB	May 28, 2014 5:13:45 PM
dev/word/inc/plex.h		secondary	4 Lines	9.8 KB	May 28, 2014 5:13:45 PM
dev/word/inc/plugui.h		secondary	36 Lines	15.7 KB	May 28, 2014 5:13:45 PM
dev/word/inc/pollabel.h		secondary		2.2 KB	May 28, 2014 5:13:45 PM
dev/word/inc/print_.h		secondary		590 bytes	May 28, 2014 5:13:45 PM
dev/word/inc/printtable.h		secondary		1.5 KB	May 28, 2014 5:13:45 PM
dev/word/inc/prompt_internal.h		secondary		903 bytes	May 28, 2014 5:13:45 PM
dev/word/inc/proof_.h		secondary		777 bytes	May 28, 2014 5:13:45 PM
dev/word/inc/props.h		secondary	60 Lines	136.2 KB	May 28, 2014 5:23:07 PM
dev/word/inc/props.inl		secondary		551.3 KB	May 28, 2014 5:13:45 PM
dev/word/inc/propset.h		secondary		1.9 KB	May 28, 2014 5:13:45 PM
dev/word/inc/protect.h		secondary	3 Lines	18 KB	May 28, 2014 5:13:45 PM
dev/word/inc/rareflag.h		secondary	1 Lines	47.8 KB	May 28, 2014 5:13:45 PM
dev/word/inc/refactor.h		secondary		754 bytes	May 28, 2014 5:13:45 PM
dev/word/inc/render.h		secondary		7.9 KB	May 28, 2014 5:13:45 PM
dev/word/inc/restids.h		secondary		1.4 KB	May 28, 2014 5:13:45 PM
dev/word/inc/revmark.h		secondary	68 Lines	61.9 KB	May 28, 2014 5:13:45 PM
dev/word/inc/rt_.h		secondary		10.6 KB	May 28, 2014 5:13:46 PM
dev/word/inc/rtf.h		secondary		89.2 KB	May 28, 2014 5:13:46 PM
dev/word/inc/rtfmath.h		secondary		2.4 KB	May 28, 2014 5:13:46 PM
dev/word/inc/rtfold.h		secondary		4.6 KB	May 28, 2014 5:13:46 PM
dev/word/inc/rtfstm.h		secondary		1.9 KB	May 28, 2014 5:13:46 PM
dev/word/inc/rtimrgn.h		secondary		4.9 KB	May 28, 2014 5:13:46 PM
dev/word/inc/rtimrgn.inl		secondary		1.7 KB	May 28, 2014 5:13:46 PM
dev/word/inc/rulrib_.h		secondary		1.2 KB	May 28, 2014 5:13:46 PM
dev/word/inc/safearraywrapper.h		secondary		6.1 KB	May 28, 2014 5:13:46 PM
dev/word/inc/saveStreamManager.h		secondary		2 KB	May 28, 2014 5:13:46 PM
dev/word/inc/selcore.h		secondary	27 Lines	17.5 KB	May 28, 2014 5:13:46 PM
dev/word/inc/set.h		secondary	6 Lines	4.1 KB	May 28, 2014 5:13:46 PM
dev/word/inc/sharedenums.h		secondary		513 bytes	May 28, 2014 5:13:46 PM
dev/word/inc/spell_.h		secondary		36.7 KB	May 28, 2014 5:13:46 PM
dev/word/inc/sprm.h		secondary		53 KB	May 28, 2014 5:13:46 PM
dev/word/inc/string_.h		secondary	199 Lines	106.4 KB	May 28, 2014 5:13:46 PM
dev/word/inc/sttb.h		secondary	36 Lines	26.6 KB	May 28, 2014 5:13:46 PM
dev/word/inc/syschg_.h		secondary		465 bytes	May 28, 2014 5:13:46 PM
dev/word/inc/tcr.h		secondary	5 Lines	13.7 KB	May 28, 2014 5:13:46 PM
dev/word/inc/telemetry.h		secondary		7.7 KB	May 28, 2014 5:13:46 PM
dev/word/inc/test/InProcTaskLib.h		secondary		18.6 KB	May 28, 2014 5:23:07 PM
dev/word/inc/test/MockTestLogger.h		secondary		1.9 KB	May 28, 2014 5:23:07 PM
dev/word/inc/test/WordGRF.h		secondary		3.9 KB	May 28, 2014 5:13:46 PM
dev/word/inc/test/WordGRFSimulateKeyboardInputSpecialUseCommand.h		secondary		1.1 KB	May 28, 2014 5:13:46 PM
dev/word/inc/test/WordTables.h		secondary		830 bytes	May 28, 2014 5:13:46 PM
dev/word/inc/test/unittestcommon.h		secondary		1.9 KB	May 28, 2014 5:13:46 PM
dev/word/inc/thread.h		secondary		20.8 KB	May 28, 2014 5:13:46 PM
dev/word/inc/throw.h		secondary		373 bytes	May 28, 2014 5:13:46 PM
dev/word/inc/thumbnail.h		secondary		834 bytes	May 28, 2014 5:13:46 PM
dev/word/inc/txbx_.h		secondary		310 bytes	May 28, 2014 5:13:46 PM
dev/word/inc/ui/vec.h		secondary		21 KB	May 28, 2014 5:13:46 PM
dev/word/inc/uia/CWordUIABodyNode.h		secondary		1.3 KB	May 28, 2014 5:13:46 PM
dev/word/inc/uia/CWordUIADocumentNode.h		secondary		2.5 KB	May 28, 2014 5:13:46 PM
dev/word/inc/uia/CWordUIAHeaderNode.h		secondary		1.3 KB	May 28, 2014 5:13:46 PM
dev/word/inc/uia/CWordUIAHyperlinkNode.h		secondary		1.6 KB	May 28, 2014 5:13:46 PM
dev/word/inc/uia/CWordUIANode.h		secondary		3.2 KB	May 28, 2014 5:13:46 PM
dev/word/inc/uia/CWordUIAPageNode.h		secondary		1.2 KB	May 28, 2014 5:13:46 PM
dev/word/inc/uia/CWordUIATextPattern.h		secondary		2.5 KB	May 28, 2014 5:13:46 PM
dev/word/inc/uia/CWordUIATextRangePattern.h		secondary		4.7 KB	May 28, 2014 5:13:46 PM
dev/word/inc/uia/IWordUIADocumentNode.h		secondary		825 bytes	May 28, 2014 5:13:46 PM
dev/word/inc/uia/WordUIADocumentNodeFactory.h		secondary		496 bytes	May 28, 2014 5:13:46 PM
dev/word/inc/uia/WordUIAHelpers.h		secondary		5.6 KB	May 28, 2014 5:13:46 PM
dev/word/inc/uim_.h		secondary		44.6 KB	May 28, 2014 5:23:07 PM
dev/word/inc/unicode_.h		secondary	8 Lines	9.8 KB	May 28, 2014 5:13:46 PM
dev/word/inc/updnconvert.h		secondary		7.1 KB	May 28, 2014 5:13:46 PM
dev/word/inc/util.h		secondary	47 Lines	29.5 KB	May 28, 2014 5:13:46 PM
dev/word/inc/util2.h		secondary	55 Lines	22.3 KB	May 28, 2014 5:13:46 PM
dev/word/inc/version.h		secondary		1.5 KB	May 28, 2014 5:13:46 PM
dev/word/inc/wal/LoggingUtilities.h		secondary		865 bytes	May 28, 2014 5:13:46 PM
dev/word/inc/wal/corout.h		secondary		972 bytes	May 28, 2014 5:13:46 PM
dev/word/inc/wal/iwordlogger.h		secondary		1.7 KB	May 28, 2014 5:13:46 PM
dev/word/inc/wal/logcommon.h		secondary		937 bytes	May 28, 2014 5:13:46 PM
dev/word/inc/wal/syscursor.h		secondary		317 bytes	May 28, 2014 5:13:46 PM
dev/word/inc/wal/tls.h		secondary		1.9 KB	May 28, 2014 5:13:46 PM
dev/word/inc/wal/walstring.h		secondary		597 bytes	May 28, 2014 5:13:46 PM
dev/word/inc/wart.h		secondary	116 Lines	31.3 KB	May 28, 2014 5:13:46 PM
dev/word/inc/win.h		secondary	46 Lines	36.9 KB	May 28, 2014 5:13:46 PM
dev/word/inc/wink.h		secondary		1.8 KB	May 28, 2014 5:13:46 PM
dev/word/inc/wk.h		secondary		3.2 KB	May 28, 2014 5:13:46 PM
dev/word/inc/word.h		secondary	94 Lines	54.8 KB	May 28, 2014 5:13:46 PM
dev/word/inc/wordcore.h		secondary	14 Lines	4.6 KB	May 28, 2014 5:23:07 PM
dev/word/inc/wordmso.h		secondary		12.6 KB	May 28, 2014 5:13:46 PM
dev/word/inc/wordoartfwd.h		secondary		5.8 KB	May 28, 2014 5:13:46 PM
dev/word/inc/wordosfhost.h		secondary	12 Lines	15.5 KB	May 28, 2014 5:13:46 PM
dev/word/inc/wordosfmerge.h		secondary		4.2 KB	May 28, 2014 5:13:46 PM
dev/word/inc/wordosfompriv.h		secondary	5 Lines	20.3 KB	May 28, 2014 5:13:46 PM
dev/word/inc/wpo.h		secondary	85 Lines	30.9 KB	May 28, 2014 5:13:46 PM
dev/word/inc/za.h		secondary		1.8 KB	May 28, 2014 5:13:46 PM
dev/word/wal/android/tls.cpp		cpp	5 Lines	2 KB	May 28, 2014 5:14:46 PM
dev/word/wal/common/awordloggerstring.h		secondary		1.4 KB	May 28, 2014 5:14:46 PM
dev/word/wal/common/cwordloggermultiplex.cpp		cpp	36 Lines	6.2 KB	May 28, 2014 5:14:46 PM
dev/word/wal/common/cwordloggermultiplex.h		secondary		1.8 KB	May 28, 2014 5:14:46 PM
dev/word/wal/common/cwordloggeruls.cpp		cpp	13 Lines	5.2 KB	May 28, 2014 5:14:46 PM
dev/word/wal/common/cwordloggeruls.h		secondary		1.7 KB	May 28, 2014 5:14:46 PM
dev/word/wal/common/walcommon.h		secondary		2.3 KB	May 28, 2014 5:14:46 PM
dev/word/wal/common/walstring.cpp		cpp	23 Lines	2.3 KB	May 28, 2014 5:14:46 PM
dev/word/wal/win/common/cwordloggeretw.cpp		cpp	19 Lines	4.9 KB	May 28, 2014 5:14:46 PM
dev/word/wal/win/common/cwordloggeretw.h		secondary		1.8 KB	May 28, 2014 5:14:46 PM
dev/word/wal/win/win32/LoggingUtilities.cpp		cpp	7 Lines	1.6 KB	May 28, 2014 5:14:46 PM
dev/word/wal/win/win32/corout.cpp		cpp	28 Lines	4.9 KB	May 28, 2014 5:14:46 PM
dev/word/wal/win/win32/cwordloggeretw_init.cpp		cpp	2 Lines	898 bytes	May 28, 2014 5:14:46 PM
dev/word/wal/win/win32/cwordloggerwinfile.cpp		cpp	51 Lines	10.1 KB	May 28, 2014 5:14:46 PM
dev/word/wal/win/win32/cwordloggerwinfile.h		secondary		1.7 KB	May 28, 2014 5:14:46 PM
dev/word/wal/win/win32/input.cpp		cpp	1 Lines	765 bytes	May 28, 2014 5:14:46 PM
dev/word/wal/win/win32/syscursor.cpp		cpp	1 Lines	741 bytes	May 28, 2014 5:14:46 PM
dev/word/wal/win/win32/tls.cpp		cpp	5 Lines	2 KB	May 28, 2014 5:14:46 PM
dev/word/wal/win/win32/wal_pch.h		secondary		574 bytes	May 28, 2014 5:14:46 PM
dev/word/wal/win/winrt/LoggingUtilities.cpp		cpp	6 Lines	1.6 KB	May 28, 2014 5:14:46 PM
dev/word/wal/win/winrt/corout.cpp		cpp	76 Lines	9.3 KB	May 28, 2014 5:14:46 PM
dev/word/wal/win/winrt/cwordloggeretw_init.cpp		cpp	7 Lines	1.2 KB	May 28, 2014 5:14:46 PM
dev/word/wal/win/winrt/input.cpp		cpp	2 Lines	811 bytes	May 28, 2014 5:14:46 PM
dev/word/wal/win/winrt/syscursor.cpp		cpp	2 Lines	895 bytes	May 28, 2014 5:14:46 PM
dev/word/wal/win/winrt/tls.cpp		cpp	5 Lines	2 KB	May 28, 2014 5:14:46 PM</Text>
        </SubSection>
        <SubSection enabled="true">
            <Title>Reference Elements</Title>
            <Description>A Listing of all libraries used for the translation phase of the analysis</Description>
            <Text>Classpath:&#xD;
&#xD;
No classpath specified during translation&#xD;
&#xD;
Libdirs:&#xD;
&#xD;
No libdirs specified during translation</Text>
        </SubSection>
        <SubSection enabled="true">
            <Title>Rulepacks</Title>
            <Description>A listing of all rulepacks used in the analysis</Description>
            <Text>Valid Rulepacks:

Name: 		Fortify Secure Coding Rules, Core, ABAP
Version: 	2014.1.0.0010
ID: 				5A663288-B1F7-416A-AEED-E5F00DC3596F
SKU: 			RUL13095

Name: 		Fortify Secure Coding Rules, Core, ActionScript 3.0
Version: 	2014.1.0.0010
ID: 				92127AA2-E666-4F28-B1C1-C0F6A939A089
SKU: 			RUL13094

Name: 		Fortify Secure Coding Rules, Core, Android
Version: 	2014.1.0.0010
ID: 				FF9890E6-D119-4EE8-A591-83DCF4CA6952
SKU: 			RUL13093

Name: 		Fortify Secure Coding Rules, Core, Annotations
Version: 	2014.1.0.0010
ID: 				14EE50EB-FA1C-4AE8-8B59-39F952E21E3B
SKU: 			RUL13078

Name: 		Fortify Secure Coding Rules, Core, ColdFusion
Version: 	2014.1.0.0010
ID: 				EEA7C678-058E-462A-8A59-AF925F7B7164
SKU: 			RUL13024

Name: 		Fortify Secure Coding Rules, Core, C/C++
Version: 	2014.1.0.0010
ID: 				711E0652-7494-42BE-94B1-DB3799418C7E
SKU: 			RUL13001

Name: 		Fortify Secure Coding Rules, Core, .NET
Version: 	2014.1.0.0010
ID: 				D57210E5-E762-4112-97DD-019E61D32D0E
SKU: 			RUL13002

Name: 		Fortify Secure Coding Rules, Core, Java
Version: 	2014.1.0.0010
ID: 				06A6CC97-8C3F-4E73-9093-3E74C64A2AAF
SKU: 			RUL13003

Name: 		Fortify Secure Coding Rules, Core, JavaScript
Version: 	2014.1.0.0010
ID: 				BD292C4E-4216-4DB8-96C7-9B607BFD9584
SKU: 			RUL13059

Name: 		Fortify Secure Coding Rules, Core, Objective-C
Version: 	2014.1.0.0010
ID: 				B18E58BA-8B2D-4FC5-83BF-378594CAD260
SKU: 			RUL13099

Name: 		Fortify Secure Coding Rules, Core, PHP
Version: 	2014.1.0.0010
ID: 				343CBB32-087C-4A4E-8BD8-273B5F876069
SKU: 			RUL13058

Name: 		Fortify Secure Coding Rules, Core, Python
Version: 	2014.1.0.0010
ID: 				FD15CBE4-E059-4CBB-914E-546BDCEB422B
SKU: 			RUL13083

Name: 		Fortify Secure Coding Rules, Core, SQL
Version: 	2014.1.0.0010
ID: 				6494160B-E1DB-41F5-9840-2B1609EE7649
SKU: 			RUL13004

Name: 		Fortify Secure Coding Rules, Core, Classic ASP, VBScript, and VB6
Version: 	2014.1.0.0010
ID: 				1D426B6F-8D33-4AD6-BBCE-237ABAFAB924
SKU: 			RUL13060

Name: 		Fortify Secure Coding Rules, Extended, Configuration
Version: 	2014.1.0.0010
ID: 				CD6959FC-0C37-45BE-9637-BAA43C3A4D56
SKU: 			RUL13005

Name: 		Fortify Secure Coding Rules, Extended, Content
Version: 	2014.1.0.0010
ID: 				9C48678C-09B6-474D-B86D-97EE94D38F17
SKU: 			RUL13067

Name: 		Fortify Secure Coding Rules, Extended, C/C++
Version: 	2014.1.0.0010
ID: 				BD4641AD-A6FF-4401-A8F4-6873272F2748
SKU: 			RUL13006

Name: 		Fortify Secure Coding Rules, Extended, .NET
Version: 	2014.1.0.0010
ID: 				557BCC56-CD42-43A7-B4FE-CDD00D58577E
SKU: 			RUL13027

Name: 		Fortify Secure Coding Rules, Extended, Java
Version: 	2014.1.0.0010
ID: 				AAAC0B10-79E7-4FE5-9921-F4903A79D317
SKU: 			RUL13007

Name: 		Fortify Secure Coding Rules, Extended, JSP
Version: 	2014.1.0.0010
ID: 				00403342-15D0-48C9-8E67-4B1CFBDEFCD2
SKU: 			RUL13026

Name: 		Fortify Secure Coding Rules, Extended, SQL
Version: 	2014.1.0.0010
ID: 				4BC5B2FA-C209-4DBC-9C3E-1D3EEFAF135A
SKU: 			RUL13025

External Metadata:

Name: 		CWE
ID: 				3ADB9EE4-5761-4289-8BD3-CBFCC593EBBC

Name: 		FISMA
ID: 				B40F9EE0-3824-4879-B9FE-7A789C89307C

Name: 		NIST SP 800-53 Rev.4
ID: 				1114583B-EA24-45BE-B7F8-B61201BACDD0

Name: 		OWASP Top 10 2004
ID: 				771C470C-9274-4580-8556-C023E4D3ADB4

Name: 		OWASP Top 10 2007
ID: 				1EB1EC0E-74E6-49A0-BCE5-E6603802987A

Name: 		OWASP Top 10 2010
ID: 				FDCECA5E-C2A8-4BE8-BB26-76A8ECD0ED59

Name: 		OWASP Top 10 2013
ID: 				1A2B4C7E-93B0-4502-878A-9BE40D2A25C4

Name: 		PCI 1.1
ID: 				CBDB9D4D-FC20-4C04-AD58-575901CAB531

Name: 		PCI 1.2
ID: 				57940BDB-99F0-48BF-BF2E-CFC42BA035E5

Name: 		PCI 2.0
ID: 				8970556D-7F9F-4EA7-8033-9DF39D68FF3E

Name: 		PCI 3.0
ID: 				E2FB0D38-0192-4F03-8E01-FE2A12680CA3

Name: 		SANS Top 25 2009
ID: 				939EF193-507A-44E2-ABB7-C00B2168B6D8

Name: 		SANS Top 25 2010
ID: 				72688795-4F7B-484C-88A6-D4757A6121CA

Name: 		SANS Top 25 2011
ID: 				92EB4481-1FD9-4165-8E16-F2DE6CB0BD63

Name: 		STIG 3
ID: 				F2FA57EA-5AAA-4DDE-90A5-480BE65CE7E7

Name: 		STIG 3.4
ID: 				58E2C21D-C70F-4314-8994-B859E24CF855

Name: 		STIG 3.5
ID: 				DD18E81F-3507-41FA-9DFA-2A9A15B5479F

Name: 		WASC 24 + 2
ID: 				9DC61E7F-1A48-4711-BBFD-E9DFF537871F

</Text>
        </SubSection>
        <SubSection enabled="true">
            <Title>Properties</Title>
            <Description>A complete listing of all properties set during analysis phase</Description>
            <Text>WinForms.CollectionMutationMonitor.Label=WinFormsDataSource
WinForms.ExtractEventHandlers=true
WinForms.TransformChangeNotificationPattern=true
WinForms.TransformDataBindings=true
WinForms.TransformMessageLoops=true
awt.toolkit=sun.awt.windows.WToolkit
com.fortify.AuthenticationKey=C:\Users\wenkec\AppData\Local/Fortify/config/tools
com.fortify.Core=D:\tools\Fortify\Core
com.fortify.InstallRoot=D:\tools\Fortify
com.fortify.InstallationUserName=wenkec
com.fortify.SCAExecutablePath=D:	oolsFortifybinsourceanalyzer.exe
com.fortify.TotalPhysicalMemory=17121353728
com.fortify.VS.RequireASPPrecompilation=true
com.fortify.WorkingDirectory=C:\Users\wenkec\AppData\Local/Fortify
com.fortify.locale=en
com.fortify.sca.AddImpliedMethods=true
com.fortify.sca.AntCompilerClass=com.fortify.dev.ant.SCACompiler
com.fortify.sca.BuildID=word_f1
com.fortify.sca.BundleControlflowIssues=true
com.fortify.sca.CollectPerformanceData=true
com.fortify.sca.CustomRulesDir=D:\tools\Fortify\Core\config\customrules
com.fortify.sca.DaemonCompilers=com.fortify.sca.util.compilers.GppCompiler,com.fortify.sca.util.compilers.GccCompiler,com.fortify.sca.util.compilers.AppleGppCompiler,com.fortify.sca.util.compilers.AppleGccCompiler,com.fortify.sca.util.compilers.MicrosoftCompiler,com.fortify.sca.util.compilers.MicrosoftLinker,com.fortify.sca.util.compilers.LdCompiler,com.fortify.sca.util.compilers.ArUtil,com.fortify.sca.util.compilers.SunCCompiler,com.fortify.sca.util.compilers.SunCppCompiler,com.fortify.sca.util.compilers.IntelCompiler,com.fortify.sca.util.compilers.ExternalCppAdapter,com.fortify.sca.util.compilers.ClangCompiler
com.fortify.sca.DeadCodeFilter=true
com.fortify.sca.DeadCodeIgnoreTrivialPredicates=true
com.fortify.sca.DefaultAnalyzers=semantic:dataflow:controlflow:nullptr:configuration:content:structural:buffer
com.fortify.sca.DefaultFileTypes=java,jsp,jspx,tag,tagx,tld,sql,cfm,php,phtml,ctp,pks,pkh,pkb,xml,config,settings,properties,dll,exe,inc,asp,vbscript,js,ini,bas,cls,vbs,frm,ctl,html,htm,xsd,wsdd,xmi,py,cfml,cfc,abap,xhtml,cpx,xcfg,jsff,as,mxml,cbl,cscfg,csdef,wadcfg,appxmanifest,wsdl
com.fortify.sca.DefaultJarsDirs=default_jars
com.fortify.sca.DefaultRulesDir=D:\tools\Fortify\Core\config\rules
com.fortify.sca.DisableDeadCodeElimination=false
com.fortify.sca.DisableFunctionPointers=false
com.fortify.sca.DisableGlobals=false
com.fortify.sca.DisableInferredConstants=false
com.fortify.sca.DisplayProgress=true
com.fortify.sca.EnableInterproceduralConstantResolution=true
com.fortify.sca.EnableNestedWrappers=true
com.fortify.sca.EnableStructuralMatchCache=true
com.fortify.sca.EnableWrapperDetection=true
com.fortify.sca.FVDLDisableDescriptions=false
com.fortify.sca.FVDLDisableProgramData=false
com.fortify.sca.FVDLDisableSnippets=false
com.fortify.sca.FVDLStylesheet=D:\tools\Fortify\Core/resources/sca/fvdl2html.xsl
com.fortify.sca.IndirectCallGraphBuilders=com.fortify.sca.analyzer.callgraph.WinFormsAdHocFunctionBuilder,com.fortify.sca.analyzer.callgraph.VirtualCGBuilder,com.fortify.sca.analyzer.callgraph.J2EEIndirectCGBuilder,com.fortify.sca.analyzer.callgraph.JNICGBuilder,com.fortify.sca.analyzer.callgraph.StoredProcedureResolver,com.fortify.sca.analyzer.callgraph.JavaWSCGBuilder,com.fortify.sca.analyzer.callgraph.StrutsCGBuilder,com.fortify.sca.analyzer.callgraph.DotNetWSCGBuilder,com.fortify.sca.analyzer.callgraph.SqlServerSPResolver,com.fortify.sca.analyzer.callgraph.ASPCGBuilder,com.fortify.sca.analyzer.callgraph.ScriptedCGBuilder,com.fortify.sca.analyzer.callgraph.NewJspCustomTagCGBuilder,com.fortify.sca.analyzer.callgraph.DotNetCABCGBuilder,com.fortify.sca.analyzer.callgraph.StateInjectionCGBuilder,com.fortify.sca.analyzer.callgraph.SqlServerSPResolver2,com.fortify.sca.analyzer.callgraph.PHPLambdaResolver,com.fortify.sca.analyzer.callgraph.JavaWebCGBuilder
com.fortify.sca.JVMArgs=-Djava.awt.headless=true -Dcom.sun.management.jmxremote=true -XX:SoftRefLRUPolicyMSPerMB=3000 -Xmx15000M -Xss1M -Xms300M -server
com.fortify.sca.JdkVersion=1.4
com.fortify.sca.LowSeverityCutoff=1.0
com.fortify.sca.NoNestedOutTagOutput=org.apache.taglibs.standard.tag.rt.core.RemoveTag,org.apache.taglibs.standard.tag.rt.core.SetTag
com.fortify.sca.PID=5184
com.fortify.sca.PrintPerformanceDataAfterScan=false
com.fortify.sca.ProjectRoot=C:\Users\wenkec\AppData\Local/Fortify
com.fortify.sca.ProjectRoot=C:\Users\wenkec\AppData\Local/Fortify
com.fortify.sca.RequireMapKeys=classrule
com.fortify.sca.ResultsFile=word_f1.fpr
com.fortify.sca.SolverTimeout=15
com.fortify.sca.SqlLanguage=TSQL
com.fortify.sca.SuppressLowSeverity=true
com.fortify.sca.ThreadCount.NameTableLoading=1
com.fortify.sca.UnicodeInputFile=true
com.fortify.sca.WrapperHeuristic=moderate
com.fortify.sca.analyzer.controlflow.EnableLivenessOptimization=false
com.fortify.sca.analyzer.controlflow.EnableMachineFiltering=false
com.fortify.sca.analyzer.controlflow.EnableRefRuleOptimization=false
com.fortify.sca.analyzer.controlflow.EnableTimeOut=true
com.fortify.sca.compilers.ant=com.fortify.sca.util.compilers.AntAdapter
com.fortify.sca.compilers.ar=com.fortify.sca.util.compilers.ArUtil
com.fortify.sca.compilers.armcc=com.fortify.sca.util.compilers.ArmCcCompiler
com.fortify.sca.compilers.armcpp=com.fortify.sca.util.compilers.ArmCppCompiler
com.fortify.sca.compilers.c++=com.fortify.sca.util.compilers.GppCompiler
com.fortify.sca.compilers.c89=com.fortify.sca.util.compilers.C89Compiler
com.fortify.sca.compilers.cc=com.fortify.sca.util.compilers.GccCompiler
com.fortify.sca.compilers.cl=com.fortify.sca.util.compilers.MicrosoftCompiler
com.fortify.sca.compilers.clearmake=com.fortify.sca.util.compilers.TouchlessCompiler
com.fortify.sca.compilers.devenv=com.fortify.sca.util.compilers.DevenvNetAdapter
com.fortify.sca.compilers.fortify=com.fortify.sca.util.compilers.FortifyCompiler
com.fortify.sca.compilers.g++=com.fortify.sca.util.compilers.GppCompiler
com.fortify.sca.compilers.g++-*=com.fortify.sca.util.compilers.GppCompiler
com.fortify.sca.compilers.g++2*=com.fortify.sca.util.compilers.GppCompiler
com.fortify.sca.compilers.g++3*=com.fortify.sca.util.compilers.GppCompiler
com.fortify.sca.compilers.g++4*=com.fortify.sca.util.compilers.GppCompiler
com.fortify.sca.compilers.gcc=com.fortify.sca.util.compilers.GccCompiler
com.fortify.sca.compilers.gcc-*=com.fortify.sca.util.compilers.GccCompiler
com.fortify.sca.compilers.gcc2*=com.fortify.sca.util.compilers.GccCompiler
com.fortify.sca.compilers.gcc3*=com.fortify.sca.util.compilers.GccCompiler
com.fortify.sca.compilers.gcc4*=com.fortify.sca.util.compilers.GccCompiler
com.fortify.sca.compilers.gmake=com.fortify.sca.util.compilers.TouchlessCompiler
com.fortify.sca.compilers.icc=com.fortify.sca.util.compilers.IntelCompiler
com.fortify.sca.compilers.icl=com.fortify.sca.util.compilers.MicrosoftCompiler
com.fortify.sca.compilers.icpc=com.fortify.sca.util.compilers.IntelCompiler
com.fortify.sca.compilers.jam=com.fortify.sca.util.compilers.TouchlessCompiler
com.fortify.sca.compilers.javac=com.fortify.sca.util.compilers.JavacCompiler
com.fortify.sca.compilers.ld=com.fortify.sca.util.compilers.LdCompiler
com.fortify.sca.compilers.link=com.fortify.sca.util.compilers.MicrosoftLinker
com.fortify.sca.compilers.make=com.fortify.sca.util.compilers.TouchlessCompiler
com.fortify.sca.compilers.msbuild=com.fortify.sca.util.compilers.MSBuildAdapter
com.fortify.sca.compilers.msdev=com.fortify.sca.util.compilers.DevenvAdapter
com.fortify.sca.compilers.mvn=com.fortify.sca.util.compilers.MavenAdapter
com.fortify.sca.compilers.nmake=com.fortify.sca.util.compilers.TouchlessCompiler
com.fortify.sca.compilers.tcc=com.fortify.sca.util.compilers.ArmCcCompiler
com.fortify.sca.compilers.tcpp=com.fortify.sca.util.compilers.ArmCppCompiler
com.fortify.sca.compilers.touchless=com.fortify.sca.util.compilers.FortifyCompiler
com.fortify.sca.compilers.xilink=com.fortify.sca.util.compilers.MicrosoftLinker
com.fortify.sca.cpfe.441.command=D:\tools\Fortify\Core/private-bin/sca/cpfe441
com.fortify.sca.cpfe.command=D:\tools\Fortify\Core/private-bin/sca/cpfe441.rfct.exe
com.fortify.sca.cpfe.file.option=--gen_c_file_name
com.fortify.sca.cpfe.options=--remove_unneeded_entities --suppress_vtbl -tused
com.fortify.sca.cpfe.options=--remove_unneeded_entities --suppress_vtbl -tused
com.fortify.sca.env.exesearchpath=D:\tmp\fortify;D:\tools\Fortify\bin;C:\Windows\system32;C:\Windows;c:\tools\idw;c:\tools\dbgx64;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;e:\userdepot\wenkec\bin;d:\tools\Nmap;d:\tools\Fortify\bin;D:\tools\Fortify\bin\..\Core\lib
com.fortify.sca.fileextensions.ABAP=ABAP
com.fortify.sca.fileextensions.abap=ABAP
com.fortify.sca.fileextensions.appxmanifest=XML
com.fortify.sca.fileextensions.as=ACTIONSCRIPT
com.fortify.sca.fileextensions.asp=ASP
com.fortify.sca.fileextensions.bas=VB6
com.fortify.sca.fileextensions.cfc=CFML
com.fortify.sca.fileextensions.cfm=CFML
com.fortify.sca.fileextensions.cfml=CFML
com.fortify.sca.fileextensions.cls=VB6
com.fortify.sca.fileextensions.config=XML
com.fortify.sca.fileextensions.cpx=XML
com.fortify.sca.fileextensions.cs=CSHARP
com.fortify.sca.fileextensions.cscfg=XML
com.fortify.sca.fileextensions.csdef=XML
com.fortify.sca.fileextensions.ctl=VB6
com.fortify.sca.fileextensions.ctp=PHP
com.fortify.sca.fileextensions.dll=MSIL
com.fortify.sca.fileextensions.exe=MSIL
com.fortify.sca.fileextensions.faces=JSPX
com.fortify.sca.fileextensions.frm=VB6
com.fortify.sca.fileextensions.htm=HTML
com.fortify.sca.fileextensions.html=HTML
com.fortify.sca.fileextensions.ini=JAVA_PROPERTIES
com.fortify.sca.fileextensions.java=JAVA
com.fortify.sca.fileextensions.js=JAVASCRIPT
com.fortify.sca.fileextensions.jsff=JSPX
com.fortify.sca.fileextensions.jsp=JSP
com.fortify.sca.fileextensions.jspx=JSPX
com.fortify.sca.fileextensions.mdl=MSIL
com.fortify.sca.fileextensions.mod=MSIL
com.fortify.sca.fileextensions.mxml=MXML
com.fortify.sca.fileextensions.php=PHP
com.fortify.sca.fileextensions.phtml=PHP
com.fortify.sca.fileextensions.pkb=PLSQL
com.fortify.sca.fileextensions.pkh=PLSQL
com.fortify.sca.fileextensions.pks=PLSQL
com.fortify.sca.fileextensions.properties=JAVA_PROPERTIES
com.fortify.sca.fileextensions.py=PYTHON
com.fortify.sca.fileextensions.settings=XML
com.fortify.sca.fileextensions.sql=SQL
com.fortify.sca.fileextensions.tag=JSP
com.fortify.sca.fileextensions.tagx=JSP
com.fortify.sca.fileextensions.tld=TLD
com.fortify.sca.fileextensions.vb=VB
com.fortify.sca.fileextensions.vbs=VB6
com.fortify.sca.fileextensions.vbscript=VBSCRIPT
com.fortify.sca.fileextensions.wadcfg=XML
com.fortify.sca.fileextensions.wsdd=XML
com.fortify.sca.fileextensions.wsdl=XML
com.fortify.sca.fileextensions.xcfg=XML
com.fortify.sca.fileextensions.xhtml=JSPX
com.fortify.sca.fileextensions.xmi=XML
com.fortify.sca.fileextensions.xml=XML
com.fortify.sca.fileextensions.xsd=XML
com.fortify.sca.jsp.UseNativeParser=true
com.fortify.sca.parser.python.ignore.module.1=test.badsyntax_future3
com.fortify.sca.parser.python.ignore.module.2=test.badsyntax_future4
com.fortify.sca.parser.python.ignore.module.3=test.badsyntax_future5
com.fortify.sca.parser.python.ignore.module.4=test.badsyntax_future6
com.fortify.sca.parser.python.ignore.module.5=test.badsyntax_future7
com.fortify.sca.parser.python.ignore.module.6=test.badsyntax_future8
com.fortify.sca.parser.python.ignore.module.7=test.badsyntax_future9
com.fortify.sca.parser.python.ignore.module.8=test.badsyntax_nocaret
com.fortify.sca.taint.SkipVirtual=true
com.fortify.search.defaultSyntaxVer=2
com.sun.management.jmxremote=true
dotnet.install.dir=C:\Windows\Microsoft.NET\Framework
dotnet.v30.referenceAssemblies=C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\v3.0
dotnet.v35.referenceAssemblies=C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\v3.5
file.encoding=Cp1252
file.encoding.pkg=sun.io
file.separator=\
java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment
java.awt.headless=true
java.awt.printerjob=sun.awt.windows.WPrinterJob
java.class.path=D:\tools\Fortify\Core\lib\exe\sca-exe.jar
java.class.version=51.0
java.endorsed.dirs=D:\tools\Fortify\jre64\lib\endorsed
java.ext.dirs=D:\tools\Fortify\jre64\lib\ext;C:\Windows\Sun\Java\lib\ext
java.home=D:\tools\Fortify\jre64
java.io.tmpdir=C:\Users\wenkec\AppData\Local\Temp\2\
java.library.path=D:\tools\Fortify\jre64\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\tools\Fortify\bin;C:\Windows\system32;C:\Windows;c:\tools\idw;c:\tools\dbgx64;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\ManagementStudio\;C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;e:\userdepot\wenkec\bin;d:\tools\Nmap;d:\tools\Fortify\bin;D:\tools\Fortify\bin\..\Core\lib;.
java.rmi.server.randomIDs=true
java.runtime.name=Java(TM) SE Runtime Environment
java.runtime.version=1.7.0_21-b11
java.specification.name=Java Platform API Specification
java.specification.vendor=Oracle Corporation
java.specification.version=1.7
java.vendor=Oracle Corporation
java.vendor.url=http://java.oracle.com/
java.vendor.url.bug=http://bugreport.sun.com/bugreport/
java.version=1.7.0_21
java.vm.info=mixed mode
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.specification.name=Java Virtual Machine Specification
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.7
java.vm.vendor=Oracle Corporation
java.vm.version=23.21-b01
line.separator=&#xD;

max.file.path.length=255
os.arch=amd64
os.name=Windows Server 2012
os.version=6.2
path.separator=;
stderr.isatty=true
stdout.isatty=true
sun.arch.data.model=64
sun.boot.class.path=D:\tools\Fortify\jre64\lib\resources.jar;D:\tools\Fortify\jre64\lib\rt.jar;D:\tools\Fortify\jre64\lib\sunrsasign.jar;D:\tools\Fortify\jre64\lib\jsse.jar;D:\tools\Fortify\jre64\lib\jce.jar;D:\tools\Fortify\jre64\lib\charsets.jar;D:\tools\Fortify\jre64\lib\jfr.jar;D:\tools\Fortify\jre64\classes
sun.boot.library.path=D:\tools\Fortify\jre64\bin
sun.cpu.endian=little
sun.cpu.isalist=amd64
sun.desktop=windows
sun.io.unicode.encoding=UnicodeLittle
sun.java.command=D:\tools\Fortify\Core\lib\exe\sca-exe.jar -b word_f1 -scan -f word_f1.fpr
sun.java.launcher=SUN_STANDARD
sun.jnu.encoding=Cp1252
sun.management.compiler=HotSpot 64-Bit Tiered Compilers
sun.os.patch.level=
user.country=US
user.dir=D:\tmp\fortify
user.home=C:\Users\wenkec
user.language=en
user.name=wenkec
user.script=
user.timezone=America/Los_Angeles
user.variant=
vs.100.dotnet.clr.version=v4.0.30319
vs.100.dotnet.install.dir=C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE
vs.110.dotnet.clr.version=v4.0.30319
vs.120.dotnet.clr.version=v4.0.30319
vs.120.dotnet.install.dir=C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\IDE
win32.LocalAppdata=C:\Users\wenkec\AppData\Local
</Text>
        </SubSection>
        <SubSection enabled="true">
            <Title>Commandline Arguments</Title>
            <Description>A listing of all arguments passed to SCA during the analysis phase</Description>
            <Text>-b
word_f1
-scan
-f
word_f1.fpr
</Text>
        </SubSection>
        <SubSection enabled="true">
            <Title>Warnings</Title>
            <Description>A listing of all warnings that occurred during the scan, during both translation and analysis phase</Description>
            <Text>[1006] Unexpected exception during preprocessing (file props.cpp.nst)
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1038] Unexpected exception in initial analysis phase
[1124] Scan progress is slow due to low memory. For details on making more memory available, please consult the user manual.
[1124] Scan progress is slow due to low memory. For details on making more memory available, please consult the user manual.
[1124] Scan progress is slow due to low memory. For details on making more memory available, please consult the user manual.
[1124] Scan progress is slow due to low memory. For details on making more memory available, please consult the user manual.
[1124] Scan progress is slow due to low memory. For details on making more memory available, please consult the user manual.
[1124] Scan progress is slow due to low memory. For details on making more memory available, please consult the user manual.
[1124] Scan progress is slow due to low memory. For details on making more memory available, please consult the user manual.
[1124] Scan progress is slow due to low memory. For details on making more memory available, please consult the user manual.
[1124] Scan progress is slow due to low memory. For details on making more memory available, please consult the user manual.
[1124] Scan progress is slow due to low memory. For details on making more memory available, please consult the user manual.
[1127] Scan progress is slow due to critically low memory. For details on making more memory available, please consult the user manual.
[1127] Scan progress is slow due to critically low memory. For details on making more memory available, please consult the user manual.
[1127] Scan progress is slow due to critically low memory. For details on making more memory available, please consult the user manual.
[1343] Function FApplyWebTheme(DOD, IMsoTheme) is too complex for controlflow analysis and will be skipped. (time)
[1343] Function FAddToFontTbl(_HIPD, MSOPX, int) is too complex for controlflow analysis and will be skipped. (time)
[1345] Function ApplyPropChange(int, int, int, _RIBL) is too complex for null pointer analysis and will be skipped. (time)
[1502] Managed Extensions for C++ are not supported.  Some files may be processed incorrectly.
[1502] Managed Extensions for C++ are not supported.  Some files may be processed incorrectly.
[1502] Managed Extensions for C++ are not supported.  Some files may be processed incorrectly.
[1502] Managed Extensions for C++ are not supported.  Some files may be processed incorrectly.
[1502] Managed Extensions for C++ are not supported.  Some files may be processed incorrectly.
[1502] Managed Extensions for C++ are not supported.  Some files may be processed incorrectly.
[1502] Managed Extensions for C++ are not supported.  Some files may be processed incorrectly.
[1502] Managed Extensions for C++ are not supported.  Some files may be processed incorrectly.
[1502] Managed Extensions for C++ are not supported.  Some files may be processed incorrectly.</Text>
        </SubSection>
    </ReportSection>
    <ReportSection optionalSubsections="false" enabled="true">
        <Title>Issue Count by Category</Title>
        <SubSection enabled="true">
            <Title>Issues By Category</Title>
            <IssueListing limit="-1" listing="false">
                <Refinement></Refinement>
                <Chart chartType="table">
                    <Axis>CWE</Axis>
                    <MajorAttribute>Analysis</MajorAttribute>
                    <GroupingSection count="8">
                        <groupTitle>CWE ID 77, CWE ID 78</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="1">
                        <groupTitle>CWE ID 733</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="3">
                        <groupTitle>CWE ID 730</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="733">
                        <groupTitle>CWE ID 615</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="6498">
                        <groupTitle>CWE ID 563</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="1">
                        <groupTitle>CWE ID 562</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="2330">
                        <groupTitle>CWE ID 561</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="15">
                        <groupTitle>CWE ID 477</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="1404">
                        <groupTitle>CWE ID 476</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="114">
                        <groupTitle>CWE ID 457</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="39">
                        <groupTitle>CWE ID 404</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="378">
                        <groupTitle>CWE ID 401</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="366">
                        <groupTitle>CWE ID 398</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="1">
                        <groupTitle>CWE ID 362, CWE ID 367</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="1">
                        <groupTitle>CWE ID 330</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="33">
                        <groupTitle>CWE ID 253, CWE ID 690</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="72">
                        <groupTitle>CWE ID 252, CWE ID 754</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="1">
                        <groupTitle>CWE ID 249, CWE ID 560</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="25">
                        <groupTitle>CWE ID 248</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="8">
                        <groupTitle>CWE ID 244</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="212">
                        <groupTitle>CWE ID 195</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="5">
                        <groupTitle>CWE ID 176, CWE ID 251</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="37">
                        <groupTitle>CWE ID 14</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="1">
                        <groupTitle>CWE ID 134</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="14">
                        <groupTitle>CWE ID 129, CWE ID 131, CWE ID 193, CWE ID 787, CWE ID 805</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="5">
                        <groupTitle>CWE ID 126</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="44">
                        <groupTitle>CWE ID 125, CWE ID 129, CWE ID 131, CWE ID 805</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="11">
                        <groupTitle>CWE ID 125, CWE ID 129, CWE ID 131, CWE ID 193, CWE ID 805</groupTitle>
                    </GroupingSection>
                    <GroupingSection count="13">
                        <groupTitle>CWE ID 120, CWE ID 129, CWE ID 131, CWE ID 787</groupTitle>
                    </GroupingSection>
                </Chart>
            </IssueListing>
        </SubSection>
    </ReportSection>
    <ReportSection optionalSubsections="false" enabled="true">
        <Title>Issue Breakdown by Analysis</Title>
        <SubSection enabled="true">
            <Title>Issue by Analysis</Title>
            <IssueListing limit="-1" listing="false">
                <Refinement></Refinement>
                <Chart chartType="pie">
                    <Axis>Analysis</Axis>
                    <MajorAttribute>Analysis</MajorAttribute>
                    <GroupingSection count="12373">
                        <groupTitle>&lt;none&gt;</groupTitle>
                    </GroupingSection>
                </Chart>
            </IssueListing>
        </SubSection>
    </ReportSection>
    <ReportSection optionalSubsections="false" enabled="false">
        <Title>New Issues</Title>
        <SubSection enabled="true">
            <Title>New Issues</Title>
            <Description>A list of issues discovered since the previous analysis.</Description>
            <Text>The following issues have been discovered since the last scan.</Text>
            <IssueListing limit="-1" listing="false">
                <Refinement></Refinement>
                <Chart chartType="pie">
                    <Axis>New Issue</Axis>
                    <MajorAttribute>Analysis</MajorAttribute>
                    <GroupingSection count="12373">
                        <groupTitle>Issue New: May 31, 2014</groupTitle>
                    </GroupingSection>
                </Chart>
            </IssueListing>
        </SubSection>
    </ReportSection>
</ReportDefinition>
