{
"version":"1.0.0",
"$schema":"http://json.schemastore.org/sarif-1.0.0",
"runs":[
  {
    "tool":{
      "name":"PREfast",
      "fullName":"PREfast Code Analysis"
    },
    "results":[
      {
        "ruleId":"26017",
        "message":"Potential read overflow using expression 'buf->a[(int )(buf->b) - 97]'\nBuffer accessed is S1::a\nBuffer is of length 10 bytes [size of field]\nAccessing the byte at byte offset (buf->S1::b)`21 - 97\n\nValues of variables:\n(buf->S1::b) = (buf->S1::b)`21\nPointer buf is at offset 0 bytes from the start of buf\n\nOverrun access occurs when\n(buf->S1::b)`21 >= 107\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test038.cpp",
              "region":{
                "startColumn":5,
                "startLine":21
              }
            },
            "fullyQualifiedLogicalName":"g",
            "decoratedName":"?g@@YAIPAUS1@@@Z",
            "properties":{
              "funcline":"16"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test038.cpp",
                  "region":{
                    "startColumn":7,
                    "startLine":16
                  }
                },
                "step":1
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test038.cpp",
                  "region":{
                    "startColumn":9,
                    "startLine":18
                  }
                },
                "step":2
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test038.cpp",
                  "region":{
                    "startColumn":5,
                    "startLine":21
                  }
                },
                "step":3
              }
            ]
          }
        ]
      },{
        "ruleId":"26011",
        "message":"Potential read underflow using expression 'buf->a[(int )(buf->b) - 97]'\nBuffer accessed is S1::a\nBuffer is of length 10 bytes [size of field]\nAccessing the byte at byte offset (buf->S1::b)`21 - 97\n\nValues of variables:\n(buf->S1::b) = (buf->S1::b)`21\nPointer buf is at offset 0 bytes from the start of buf\n\nUnderflow access occurs when\n(buf->S1::b)`21 <= 96\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test038.cpp",
              "region":{
                "startColumn":5,
                "startLine":21
              }
            },
            "fullyQualifiedLogicalName":"g",
            "decoratedName":"?g@@YAIPAUS1@@@Z",
            "properties":{
              "funcline":"16"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test038.cpp",
                  "region":{
                    "startColumn":7,
                    "startLine":16
                  }
                },
                "step":1
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test038.cpp",
                  "region":{
                    "startColumn":9,
                    "startLine":18
                  }
                },
                "step":2
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test038.cpp",
                  "region":{
                    "startColumn":5,
                    "startLine":21
                  }
                },
                "step":3
              }
            ]
          }
        ]
      },{
        "ruleId":"26024",
        "message":"Cast cannot be proven safe: \"(struct S *)((PUCHAR)buf + offset)\" Accessing 44 bytes starting at byte offset 0\n\nValues of variables:\nPointer buf is at offset offset(buf)`24 bytes from the start of the buffer\noffset = result.g`26a\n\nThere are other instances of this error:\nPotential overflow using expression 's->b' at line 30\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test038.cpp",
              "region":{
                "startColumn":12,
                "startLine":27
              }
            },
            "fullyQualifiedLogicalName":"f",
            "decoratedName":"?f@@YAXPAUS1@@I@Z",
            "properties":{
              "funcline":"24"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test038.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":24
                  }
                },
                "step":1
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test038.cpp",
                  "region":{
                    "startColumn":11,
                    "startLine":26
                  }
                },
                "step":2
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test038.cpp",
                  "region":{
                    "startColumn":21,
                    "startLine":26
                  }
                },
                "step":3
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test038.cpp",
                  "region":{
                    "startColumn":21,
                    "startLine":26
                  }
                },
                "step":4
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test038.cpp",
                  "region":{
                    "startColumn":8,
                    "startLine":27
                  }
                },
                "step":5
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test038.cpp",
                  "region":{
                    "startColumn":12,
                    "startLine":27
                  }
                },
                "step":6
              }
            ]
          }
        ]
      }
    ]
  }
]
}