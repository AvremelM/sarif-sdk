{
"version":"1.0.0",
"$schema":"http://json.schemastore.org/sarif-1.0.0",
"runs":[
  {
    "tool":{
      "name":"PREfast",
      "fullName":"PREfast Code Analysis"
    },
    "results":[
      {
        "ruleId":"26015",
        "message":"Potential overflow using expression 'buf[i]'\nBuffer access is apparently unbounded by the buffer size.  \n\nIn particular: {loop iterations}'12 is not constrained by size`3\n\nBuffer buf is a parameter to this function declared on line 3\nBuffer is of length offset(buf)`3 + size`3 + 256 bytes [from annotation SAL_writableTo(elementCount((flag > 0 ? size : 256) + (flag1 > 0 ? size : 256))) at c:\\somepath\\test087.cpp(3)]\nAccessing the byte at byte offset {loop iterations}'12 + 2\n\nValues of variables:\nPointer buf is at offset 0 bytes from the start of the buffer\ni = {loop iterations}'12 + 2\n\nwhere\noffset(buf)`3 == 0\nsize`3 >= 0\n{loop iterations}'12 <= 509\n{loop iterations}'12 >= 0\n\nOverrun access occurs when\n{loop iterations}'12 >= size`3 + 254\n\nThere are other instances of this error:\nPotential overflow using expression 'buf[i]' at line 8\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test087.cpp",
              "region":{
                "startColumn":20,
                "startLine":13
              }
            },
            "fullyQualifiedLogicalName":"qcolon",
            "decoratedName":"?qcolon@@YAXPADIHH@Z",
            "properties":{
              "funcline":"3"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":3
                  }
                },
                "step":1
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":14,
                    "startLine":5
                  }
                },
                "step":2
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":21,
                    "startLine":12
                  }
                },
                "step":3
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":25,
                    "startLine":12
                  }
                },
                "step":4
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":30,
                    "startLine":12
                  }
                },
                "step":5
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":20,
                    "startLine":13
                  }
                },
                "step":6
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":38,
                    "startLine":12
                  }
                },
                "step":7
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":30,
                    "startLine":12
                  }
                },
                "step":8
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":20,
                    "startLine":13
                  }
                },
                "step":9
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":38,
                    "startLine":12
                  }
                },
                "step":10
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":30,
                    "startLine":12
                  }
                },
                "step":11
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":20,
                    "startLine":13
                  }
                },
                "step":12
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":38,
                    "startLine":12
                  }
                },
                "step":13
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":30,
                    "startLine":12
                  }
                },
                "step":14
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":20,
                    "startLine":13
                  }
                },
                "step":15
              }
            ]
          }
        ]
      },{
        "ruleId":"26000",
        "message":"Overflow using expression '& a'\nBuffer accessed is a\nBuffer is of length 10 bytes [size of variable]\nAccessing 20 bytes starting at byte offset 0\nAnnotation on function qcolon requires that {parameter 1} is of length >= ({parameter 3} > 0 ? {parameter 2} : 256) + ({parameter 4} > 0 ? {parameter 2} : 256) elements (1 bytes\/element)\n  where {parameter 1} is & a; {parameter 3} is 1; {parameter 2} is 10; {parameter 4} is 1\n[Annotation SAL_writableTo(elementCount(({parameter 3} > 0 ? {parameter 2} : 256) + ({parameter 4} > 0 ? {parameter 2} : 256))) at c:\\somepath\\test087.cpp(3)]\n\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test087.cpp",
              "region":{
                "startColumn":11,
                "startLine":27
              }
            },
            "fullyQualifiedLogicalName":"callqcolon",
            "decoratedName":"?callqcolon@@YAXXZ",
            "properties":{
              "funcline":"24"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":24
                  }
                },
                "step":1
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":10,
                    "startLine":26
                  }
                },
                "step":2
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":11,
                    "startLine":27
                  }
                },
                "step":3
              }
            ]
          }
        ]
      },{
        "ruleId":"26000",
        "message":"Overflow using expression '& c'\nBuffer accessed is c\nBuffer is of length 100 bytes [size of variable]\nAccessing 356 bytes starting at byte offset 0\nAnnotation on function qcolon requires that {parameter 1} is of length >= ({parameter 3} > 0 ? {parameter 2} : 256) + ({parameter 4} > 0 ? {parameter 2} : 256) elements (1 bytes\/element)\n  where {parameter 1} is & c; {parameter 3} is 0; {parameter 2} is 100; {parameter 4} is 1\n[Annotation SAL_writableTo(elementCount(({parameter 3} > 0 ? {parameter 2} : 256) + ({parameter 4} > 0 ? {parameter 2} : 256))) at c:\\somepath\\test087.cpp(3)]\n\n\nThere are other instances of this error:\nOverflow using expression '& c' at line 36\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test087.cpp",
              "region":{
                "startColumn":11,
                "startLine":33
              }
            },
            "fullyQualifiedLogicalName":"callqcolon",
            "decoratedName":"?callqcolon@@YAXXZ",
            "properties":{
              "funcline":"24"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":24
                  }
                },
                "step":1
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":10,
                    "startLine":26
                  }
                },
                "step":2
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":11,
                    "startLine":27
                  }
                },
                "step":3
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":10,
                    "startLine":29
                  }
                },
                "step":4
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":11,
                    "startLine":30
                  }
                },
                "step":5
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":10,
                    "startLine":32
                  }
                },
                "step":6
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":11,
                    "startLine":33
                  }
                },
                "step":7
              }
            ]
          }
        ]
      },{
        "ruleId":"26015",
        "message":"Potential overflow using expression 'buf[i]'\nBuffer access is apparently unbounded by the buffer size.  \n\nIn particular: {loop iterations}'43 is not constrained by any constant\n\nBuffer buf is a parameter to this function declared on line 39\nBuffer is of length offset(buf)`39 + 256 bytes [from annotation SAL_writableTo(elementCount((flag && flag1) ? size : 256)) at c:\\somepath\\test087.cpp(39)]\nAccessing the byte at byte offset {loop iterations}'43 + 2\n\nValues of variables:\nPointer buf is at offset 0 bytes from the start of the buffer\ni = {loop iterations}'43 + 2\n\nwhere\noffset(buf)`39 == 0\nsize`39 >= 0\nsize`39 >= {loop iterations}'43 + 3\n{loop iterations}'43 >= 0\n\nOverrun access occurs when\n{loop iterations}'43 >= 254\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test087.cpp",
              "region":{
                "startColumn":20,
                "startLine":44
              }
            },
            "fullyQualifiedLogicalName":"TestAnd",
            "decoratedName":"?TestAnd@@YAXPADI_N1@Z",
            "properties":{
              "funcline":"39"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":39
                  }
                },
                "step":1
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":9,
                    "startLine":41
                  }
                },
                "step":2
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":21,
                    "startLine":43
                  }
                },
                "step":3
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":25,
                    "startLine":43
                  }
                },
                "step":4
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":30,
                    "startLine":43
                  }
                },
                "step":5
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":20,
                    "startLine":44
                  }
                },
                "step":6
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":39,
                    "startLine":43
                  }
                },
                "step":7
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":30,
                    "startLine":43
                  }
                },
                "step":8
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":20,
                    "startLine":44
                  }
                },
                "step":9
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":39,
                    "startLine":43
                  }
                },
                "step":10
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":30,
                    "startLine":43
                  }
                },
                "step":11
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":20,
                    "startLine":44
                  }
                },
                "step":12
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":39,
                    "startLine":43
                  }
                },
                "step":13
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":30,
                    "startLine":43
                  }
                },
                "step":14
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":20,
                    "startLine":44
                  }
                },
                "step":15
              }
            ]
          }
        ]
      },{
        "ruleId":"26015",
        "message":"Potential overflow using expression 'buf[i]'\nBuffer access is apparently unbounded by the buffer size.  \n\nIn particular: {loop iterations}'74 is not constrained by any constant\n\nBuffer buf is a parameter to this function declared on line 57\nBuffer is of length offset(buf)`57 + 256 bytes [from annotation SAL_writableTo(elementCount((flag || flag1) ? size : 256)) at c:\\somepath\\test087.cpp(57)]\nAccessing the byte at byte offset {loop iterations}'74 + 2\n\nValues of variables:\nPointer buf is at offset 0 bytes from the start of the buffer\ni = {loop iterations}'74 + 2\n\nwhere\noffset(buf)`57 == 0\nsize`57 >= 0\nsize`57 >= {loop iterations}'74 + 3\n{loop iterations}'74 >= 0\n\nOverrun access occurs when\n{loop iterations}'74 >= 254\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test087.cpp",
              "region":{
                "startColumn":16,
                "startLine":75
              }
            },
            "fullyQualifiedLogicalName":"TestOr",
            "decoratedName":"?TestOr@@YAXPADI_N1@Z",
            "properties":{
              "funcline":"57"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":57
                  }
                },
                "step":1
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":9,
                    "startLine":59
                  }
                },
                "step":2
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":9,
                    "startLine":66
                  }
                },
                "step":3
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":17,
                    "startLine":74
                  }
                },
                "step":4
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":21,
                    "startLine":74
                  }
                },
                "step":5
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":26,
                    "startLine":74
                  }
                },
                "step":6
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":16,
                    "startLine":75
                  }
                },
                "step":7
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":35,
                    "startLine":74
                  }
                },
                "step":8
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":26,
                    "startLine":74
                  }
                },
                "step":9
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":16,
                    "startLine":75
                  }
                },
                "step":10
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":35,
                    "startLine":74
                  }
                },
                "step":11
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":26,
                    "startLine":74
                  }
                },
                "step":12
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":16,
                    "startLine":75
                  }
                },
                "step":13
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":35,
                    "startLine":74
                  }
                },
                "step":14
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":26,
                    "startLine":74
                  }
                },
                "step":15
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":16,
                    "startLine":75
                  }
                },
                "step":16
              }
            ]
          }
        ]
      },{
        "ruleId":"26000",
        "message":"Overflow using expression '& a'\nBuffer accessed is a\nBuffer is of length 10 bytes [size of variable]\nAccessing 256 bytes starting at byte offset 0\nAnnotation on function TestAnd requires that {parameter 1} is of length >= ({parameter 3} && {parameter 4}) ? {parameter 2} : 256 elements (1 bytes\/element)\n  where {parameter 1} is & a; {parameter 3} is 1; {parameter 4} is 0; {parameter 2} is 10\n[Annotation SAL_writableTo(elementCount(({parameter 3} && {parameter 4}) ? {parameter 2} : 256)) at c:\\somepath\\test087.cpp(39)]\n\n\nThere are other instances of this error:\nOverflow using expression '& a' at line 83\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test087.cpp",
              "region":{
                "startColumn":12,
                "startLine":82
              }
            },
            "fullyQualifiedLogicalName":"CallAnd",
            "decoratedName":"?CallAnd@@YAXXZ",
            "properties":{
              "funcline":"78"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":78
                  }
                },
                "step":1
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":10,
                    "startLine":80
                  }
                },
                "step":2
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":12,
                    "startLine":81
                  }
                },
                "step":3
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":12,
                    "startLine":82
                  }
                },
                "step":4
              }
            ]
          }
        ]
      },{
        "ruleId":"26000",
        "message":"Overflow using expression '& a'\nBuffer accessed is a\nBuffer is of length 10 bytes [size of variable]\nAccessing 256 bytes starting at byte offset 0\nAnnotation on function TestOr requires that {parameter 1} is of length >= ({parameter 3} || {parameter 4}) ? {parameter 2} : 256 elements (1 bytes\/element)\n  where {parameter 1} is & a; {parameter 3} is 0; {parameter 4} is 0; {parameter 2} is 10\n[Annotation SAL_writableTo(elementCount(({parameter 3} || {parameter 4}) ? {parameter 2} : 256)) at c:\\somepath\\test087.cpp(57)]\n\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test087.cpp",
              "region":{
                "startColumn":11,
                "startLine":110
              }
            },
            "fullyQualifiedLogicalName":"CallOr",
            "decoratedName":"?CallOr@@YAXXZ",
            "properties":{
              "funcline":"104"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":104
                  }
                },
                "step":1
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":10,
                    "startLine":106
                  }
                },
                "step":2
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":11,
                    "startLine":107
                  }
                },
                "step":3
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":11,
                    "startLine":108
                  }
                },
                "step":4
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":11,
                    "startLine":109
                  }
                },
                "step":5
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":11,
                    "startLine":110
                  }
                },
                "step":6
              }
            ]
          }
        ]
      },{
        "ruleId":"26000",
        "message":"Overflow using expression '& a'\nBuffer accessed is a\nBuffer is of length 10 bytes [size of variable]\nAccessing 20 bytes starting at byte offset 0\nAnnotation on function Dual requires that {parameter 1} is of length >= {parameter 3} ? {parameter 2} : {parameter 2} * 2 bytes\n  where {parameter 1} is & a; {parameter 3} is 0; {parameter 2} is 10\n[Annotation SAL_writableTo(byteCount({parameter 3} ? {parameter 2} : {parameter 2} * 2)) at c:\\somepath\\test087.cpp(125)]\n\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test087.cpp",
              "region":{
                "startColumn":9,
                "startLine":137
              }
            },
            "fullyQualifiedLogicalName":"CallDual",
            "decoratedName":"?CallDual@@YAXXZ",
            "properties":{
              "funcline":"133"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":133
                  }
                },
                "step":1
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":10,
                    "startLine":135
                  }
                },
                "step":2
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":9,
                    "startLine":136
                  }
                },
                "step":3
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":9,
                    "startLine":137
                  }
                },
                "step":4
              }
            ]
          }
        ]
      },{
        "ruleId":"26014",
        "message":"Potential overflow using expression 'buf[i]'\nThis is likely to be due to incorrect or insufficient validation of the buffer access\nBuffer buf is a parameter to this function declared on line 155\nBuffer is of length offset(buf)`155 + size`155 bytes [from annotation SAL_writableTo(byteCount(! (flags & 128) ? size : size * 2)) at c:\\somepath\\test087.cpp(155)]\nAccessing the byte at byte offset 1\n\nValues of variables:\nPointer buf is at offset 0 bytes from the start of the buffer\ni = 1\n\nwhere\noffset(buf)`155 == 0\n{loop iterations}'159 == 0\nsize`155 >= 1\n\nOverrun access occurs when\nsize`155 == 1\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test087.cpp",
              "region":{
                "startColumn":16,
                "startLine":160
              }
            },
            "fullyQualifiedLogicalName":"BadDualBit",
            "decoratedName":"?BadDualBit@@YAXPADII@Z",
            "properties":{
              "funcline":"155"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":155
                  }
                },
                "step":1
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":17,
                    "startLine":157
                  }
                },
                "step":2
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":14,
                    "startLine":158
                  }
                },
                "step":3
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":17,
                    "startLine":159
                  }
                },
                "step":4
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":21,
                    "startLine":159
                  }
                },
                "step":5
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":26,
                    "startLine":159
                  }
                },
                "step":6
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":16,
                    "startLine":160
                  }
                },
                "step":7
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":34,
                    "startLine":159
                  }
                },
                "step":8
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":26,
                    "startLine":159
                  }
                },
                "step":9
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":16,
                    "startLine":160
                  }
                },
                "step":10
              }
            ]
          }
        ]
      },{
        "ruleId":"26000",
        "message":"Overflow using expression '& a'\nBuffer accessed is a\nBuffer is of length 10 bytes [size of variable]\nAccessing 20 bytes starting at byte offset 0\nAnnotation on function DualBit requires that {parameter 1} is of length >= ! ({parameter 3} & 128) ? {parameter 2} : {parameter 2} * 2 bytes\n  where {parameter 1} is & a; {parameter 3} is 128; {parameter 2} is 10\n[Annotation SAL_writableTo(byteCount(! ({parameter 3} & 128) ? {parameter 2} : {parameter 2} * 2)) at c:\\somepath\\test087.cpp(147)]\n\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test087.cpp",
              "region":{
                "startColumn":12,
                "startLine":167
              }
            },
            "fullyQualifiedLogicalName":"CallDualBit",
            "decoratedName":"?CallDualBit@@YAXXZ",
            "properties":{
              "funcline":"163"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":163
                  }
                },
                "step":1
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":10,
                    "startLine":165
                  }
                },
                "step":2
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":12,
                    "startLine":166
                  }
                },
                "step":3
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":12,
                    "startLine":167
                  }
                },
                "step":4
              }
            ]
          }
        ]
      },{
        "ruleId":"26000",
        "message":"Overflow using expression '& b'\nBuffer accessed is b\nBuffer is of length 10 bytes [size of variable]\nAccessing 20 bytes starting at byte offset 0\nAnnotation on function cleveraw requires that {parameter 1} is of length >= (! (! {parameter 2}) + 1) * {parameter 3} elements (1 bytes\/element)\n  where {parameter 1} is & b; {parameter 2} is 1; {parameter 3} is 10\n[Annotation SAL_writableTo(elementCount((! (! {parameter 2}) + 1) * {parameter 3})) at c:\\somepath\\test087.cpp(252)]\n\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test087.cpp",
              "region":{
                "startColumn":13,
                "startLine":263
              }
            },
            "fullyQualifiedLogicalName":"callcleveraw",
            "decoratedName":"?callcleveraw@@YAXXZ",
            "properties":{
              "funcline":"258"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":258
                  }
                },
                "step":1
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":10,
                    "startLine":260
                  }
                },
                "step":2
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":13,
                    "startLine":261
                  }
                },
                "step":3
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":10,
                    "startLine":262
                  }
                },
                "step":4
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":13,
                    "startLine":263
                  }
                },
                "step":5
              }
            ]
          }
        ]
      },{
        "ruleId":"26000",
        "message":"Overflow using expression '& a'\nBuffer accessed is a\nBuffer is of length 10 elements (4 bytes\/element) [size of variable]\nAccessing 11 elements (4 bytes\/element) starting at element offset 0\nAnnotation on function foo requires that {parameter 1} is of length >= {parameter 2} + (({parameter 3} & 1) != 0) elements (4 bytes\/element)\n  where {parameter 1} is & a; {parameter 2} is 10; {parameter 3} is 1\n[Annotation SAL_writableTo(elementCount({parameter 2} + (({parameter 3} & 1) != 0))) at c:\\somepath\\test087.cpp(266)]\n\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test087.cpp",
              "region":{
                "startColumn":8,
                "startLine":281
              }
            },
            "fullyQualifiedLogicalName":"callfoo",
            "decoratedName":"?callfoo@@YAXXZ",
            "properties":{
              "funcline":"276"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":276
                  }
                },
                "step":1
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":9,
                    "startLine":278
                  }
                },
                "step":2
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":8,
                    "startLine":279
                  }
                },
                "step":3
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":9,
                    "startLine":280
                  }
                },
                "step":4
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test087.cpp",
                  "region":{
                    "startColumn":8,
                    "startLine":281
                  }
                },
                "step":5
              }
            ]
          }
        ]
      }
    ]
  }
]
}