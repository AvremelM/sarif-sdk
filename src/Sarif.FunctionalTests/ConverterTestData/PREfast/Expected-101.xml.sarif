{
"version":"1.0.0-beta.5",
"$schema":"http://json.schemastore.org/sarif-1.0.0-beta.5",
"runs":[
  {
    "tool":{
      "name":"PREfast",
      "fullName":"PREfast Code Analysis",
      "version":"14.0.0"
    },
    "results":[
      {
        "ruleId":"26015",
        "message":"Potential overflow using expression '(void *)(& f->arr)'\nBuffer access is apparently unbounded by the buffer size.  \n\nIn particular: cnt`10 is not constrained by (f->_FLEXARRAY::count)`10\n\nBuffer (f->_FLEXARRAY::arr) is a parameter to this function declared on line 10\nBuffer lengths are from an assumed __inout annotation on the parameter\nBuffer is of length 4*(f->_FLEXARRAY::count)`10 bytes [from type annotation SAL_writableTo(elementCount(f->count)) at c:\\somepath\\test101.cpp(7)]\nAccessing 4*cnt`10 bytes starting at byte offset 0\nAnnotation on function memcpy requires that {parameter 1} is of length >= {parameter 3} bytes\n  where {parameter 1} is (void *)(& f->arr); {parameter 3} is cnt * 4\n[Annotation _Out_(byteCount({parameter 3}))]\n\n\nValues of variables:\nPointer f is at offset 0 bytes from the start of f\ncnt = cnt`10\n\nwhere\n(f->_FLEXARRAY::count)`10 >= 1\ncnt`10 >= 1\n\nOverrun access occurs when\ncnt`10 >= (f->_FLEXARRAY::count)`10 + 1\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test101.cpp",
              "region":{
                "startColumn":11,
                "startLine":12
              }
            },
            "fullyQualifiedLogicalName":"bad1",
            "decoratedName":"?bad1@@YAXPAHIPAU_FLEXARRAY@@@Z",
            "properties":{
              "funcline":"10"
            }
          }
        ],
        "codeFlows":[
          {
            "message":"",
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":10
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":11,
                    "startLine":12
                  }
                }
              }
            ]
          }
        ]
      },{
        "ruleId":"26030",
        "message":"Postcondition violation that could result in overflow\nBuffer result.malloc created during call to malloc on line 28\nBuffer is of length 4*cnt`26 + 4 bytes [from annotation _Post_writable_byte_size_(byteCount({parameter 1})) on function malloc called at line 28]\nAccessing 4*cnt`26 + 8 bytes starting at byte offset 0\nAnnotation on function bad2 requires that result.bad2 is of length >= result.bad2->count * 4 + 4 bytes\n[Type annotation SAL_writableTo(byteCount(result.bad2->count * 4 + 4)) at c:\\somepath\\test101.cpp(7)]\n\n\nValues of variables:\n(f->_FLEXARRAY::count) = cnt`26 + 1\nPointer f is at offset 0 bytes from the start of the buffer\nresult.bad2 = f\n\nwhere\noffset(result.malloc)`28a == 0\ncnt`26 >= 1\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test101.cpp",
              "region":{
                "startColumn":5,
                "startLine":31
              }
            },
            "fullyQualifiedLogicalName":"bad2",
            "decoratedName":"?bad2@@YAPAU_FLEXARRAY@@I@Z",
            "properties":{
              "funcline":"26"
            }
          }
        ],
        "codeFlows":[
          {
            "message":"",
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":20,
                    "startLine":26
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":16,
                    "startLine":28
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":38,
                    "startLine":28
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":20,
                    "startLine":28
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":9,
                    "startLine":29
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":18,
                    "startLine":30
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":5,
                    "startLine":31
                  }
                }
              }
            ]
          }
        ]
      },{
        "ruleId":"26015",
        "message":"Potential overflow using expression '(void *)(& f->arr)'\nBuffer access is apparently unbounded by the buffer size.  \n\nIn particular: cnt`36 is not constrained by (f->_FLEXARRAY::count)`36\n\nBuffer (f->_FLEXARRAY::arr) is a parameter to this function declared on line 36\nBuffer lengths are from an assumed __inout annotation on the parameter\nBuffer is of length 4*(f->_FLEXARRAY::count)`36 bytes [from type annotation SAL_writableTo(elementCount(f->count)) at c:\\somepath\\test101.cpp(7)]\nAccessing 4*cnt`36 bytes starting at byte offset 0\nAnnotation on function memcpy requires that {parameter 1} is of length >= {parameter 3} bytes\n  where {parameter 1} is (void *)(& f->arr); {parameter 3} is cnt * 4\n[Annotation _Out_(byteCount({parameter 3}))]\n\n\nValues of variables:\nPointer f is at offset 0 bytes from the start of f\ncnt = cnt`36\n\nwhere\n(f->_FLEXARRAY::count)`36 >= 1\ncnt`36 >= 1\n\nOverrun access occurs when\ncnt`36 >= (f->_FLEXARRAY::count)`36 + 1\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test101.cpp",
              "region":{
                "startColumn":15,
                "startLine":38
              }
            },
            "fullyQualifiedLogicalName":"Foo::what",
            "decoratedName":"?what@Foo@@QAEXPAU_FLEXARRAY@@PAHI@Z",
            "properties":{
              "funcline":"36"
            }
          }
        ],
        "codeFlows":[
          {
            "message":"",
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":10,
                    "startLine":36
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":15,
                    "startLine":38
                  }
                }
              }
            ]
          }
        ]
      },{
        "ruleId":"26015",
        "message":"Potential overflow using expression '& f1'\nBuffer access is apparently unbounded by the buffer size.  \n\nIn particular: f1._FLEXARRAY::count`48 is not constrained by any constant\n\nBuffer accessed is f1\nBuffer is of length 8 bytes [size of variable]\nAccessing 4*f1._FLEXARRAY::count`48 + 4 bytes starting at byte offset 0\nAssumed __inout annotation on function Foo::what requires that {parameter 2} is of length >= {parameter 2}->count * 4 + 4 bytes\n  where {parameter 2} is & f1; {parameter 2} is & f1\n[Type annotation SAL_writableTo(byteCount({parameter 2}->count * 4 + 4)) at c:\\somepath\\test101.cpp(7)]\n\n\nValues of variables:\nf1._FLEXARRAY::count = f1._FLEXARRAY::count`48\n\nwhere\nf1._FLEXARRAY::count`48 >= 1\n\nOverrun access occurs when\nf1._FLEXARRAY::count`48 >= 2\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test101.cpp",
              "region":{
                "startColumn":12,
                "startLine":59
              }
            },
            "fullyQualifiedLogicalName":"main",
            "decoratedName":"main",
            "properties":{
              "funcline":"42"
            }
          }
        ],
        "codeFlows":[
          {
            "message":"",
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":42
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":9,
                    "startLine":44
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":9,
                    "startLine":44
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":15,
                    "startLine":45
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":14,
                    "startLine":46
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":15,
                    "startLine":47
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":9,
                    "startLine":48
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":16,
                    "startLine":50
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":25,
                    "startLine":50
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":25,
                    "startLine":50
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":9,
                    "startLine":51
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":16,
                    "startLine":54
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":25,
                    "startLine":54
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":25,
                    "startLine":54
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":9,
                    "startLine":55
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":9,
                    "startLine":58
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test101.cpp",
                  "region":{
                    "startColumn":12,
                    "startLine":59
                  }
                }
              }
            ]
          }
        ]
      }
    ]
  }
]
}