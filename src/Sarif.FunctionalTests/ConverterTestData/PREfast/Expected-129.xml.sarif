{
"version":"1.0.0-beta.5",
"$schema":"http://json.schemastore.org/sarif-1.0.0-beta.5",
"runs":[
  {
    "tool":{
      "name":"PREfast",
      "fullName":"PREfast Code Analysis",
      "version":"14.0.0"
    },
    "results":[
      {
        "ruleId":"26002",
        "message":"Accessing buffer '(*pBuf)' of unspecified length.  Please annotate.\n\nIf we assume that the buffer has single element in length, then the checker would report:\nPotential read overflow using expression '* (* ((WORD **)pBuf))'\nAccessing unannotated buffer (*pBuf)\nBuffer is of length 1 bytes [assumed because the buffer is unannotated]\nAccessing 2 bytes starting at byte offset 0\n\nValues of variables:\nPointer (*pBuf) is at offset 0 bytes from the start of the buffer\nPointer pBuf is at offset 0 bytes from the start of pBuf\n\nwhere\noffset((*pBuf))`32a == 0\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test129.cpp",
              "region":{
                "startColumn":5,
                "startLine":33
              }
            },
            "fullyQualifiedLogicalName":"BadGetWord1",
            "decoratedName":"?BadGetWord1@@YAGPAPAD@Z",
            "properties":{
              "funcline":"28"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test129.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":28
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test129.cpp",
                  "region":{
                    "startColumn":10,
                    "startLine":32
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test129.cpp",
                  "region":{
                    "startColumn":26,
                    "startLine":32
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test129.cpp",
                  "region":{
                    "startColumn":26,
                    "startLine":32
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test129.cpp",
                  "region":{
                    "startColumn":5,
                    "startLine":33
                  }
                }
              }
            ]
          }
        ]
      },{
        "ruleId":"26000",
        "message":"Read overflow using expression '* (* ((WORD **)pBuf))'\nBuffer (*pBuf) is a parameter to this function declared on line 36\nBuffer is of length 1 elements (2 bytes\/element) [from annotation SAL_readableTo(elementCount(2)) at c:\\somepath\\test129.cpp(36)]\nAccessing the element (2 bytes\/element) at element offset 1\n\nValues of variables:\nPointer (*pBuf) is at offset 2 bytes from the start of the buffer\nPointer pBuf is at offset 0 bytes from the start of pBuf\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test129.cpp",
              "region":{
                "startColumn":5,
                "startLine":42
              }
            },
            "fullyQualifiedLogicalName":"BadGetWord2",
            "decoratedName":"?BadGetWord2@@YAGPAPAD@Z",
            "properties":{
              "funcline":"36"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test129.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":36
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test129.cpp",
                  "region":{
                    "startColumn":10,
                    "startLine":40
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test129.cpp",
                  "region":{
                    "startColumn":19,
                    "startLine":40
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test129.cpp",
                  "region":{
                    "startColumn":11,
                    "startLine":41
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test129.cpp",
                  "region":{
                    "startColumn":5,
                    "startLine":42
                  }
                }
              }
            ]
          }
        ]
      },{
        "ruleId":"26003",
        "message":"Writing to buffer '(*pBuf)' of unspecified length.  Please annotate.\n\nIf we assume that the buffer has single element in length, then the checker would report:\nPotential overflow using expression 'pBuf'\nAccessing unannotated buffer (*pBuf)\nBuffer is of length 1 bytes [assumed because the buffer is unannotated]\nAccessing 2 bytes starting at byte offset 0\nAnnotation on function GetWord requires that * {parameter 1} is of length >= 2 elements (1 bytes\/element)\n  where * {parameter 1} is pBuf\n[Annotation SAL_readableTo(elementCount(2)) at c:\\somepath\\test129.cpp(13)]\n\n\nValues of variables:\nPointer (*pBuf) is at offset 0 bytes from the start of the buffer\n\nwhere\noffset((*pBuf))`51a == 0\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test129.cpp",
              "region":{
                "startColumn":30,
                "startLine":52
              }
            },
            "fullyQualifiedLogicalName":"GetDWord",
            "decoratedName":"?GetDWord@@YAIPAPAD@Z",
            "properties":{
              "funcline":"45"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test129.cpp",
                  "region":{
                    "startColumn":7,
                    "startLine":45
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test129.cpp",
                  "region":{
                    "startColumn":11,
                    "startLine":49
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test129.cpp",
                  "region":{
                    "startColumn":21,
                    "startLine":51
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test129.cpp",
                  "region":{
                    "startColumn":12,
                    "startLine":51
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test129.cpp",
                  "region":{
                    "startColumn":30,
                    "startLine":52
                  }
                }
              }
            ]
          }
        ]
      }
    ]
  }
]
}