{
"version":"1.0.0-beta.5",
"$schema":"http://json.schemastore.org/sarif-1.0.0",
"runs":[
  {
    "tool":{
      "name":"PREfast",
      "fullName":"PREfast Code Analysis",
      "version":"14.0.0"
    },
    "logicalLocations":{
      "?VariableWorker@@YAXHPAD@Z":[
        {
          "kind":"method",
          "name":"VariableWorker"
        }
      ],
      "?Bad1@@YAXXZ":[
        {
          "kind":"method",
          "name":"Bad1"
        }
      ],
      "?Bad2@@YAXH@Z":[
        {
          "kind":"method",
          "name":"Bad2"
        }
      ],
      "?RangeWhen1@@YAXHI@Z":[
        {
          "kind":"method",
          "name":"RangeWhen1"
        }
      ],
      "?Bad3@@YAXXZ":[
        {
          "kind":"method",
          "name":"Bad3"
        }
      ],
      "?WinHttpTestINT@@YAXPBGH@Z":[
        {
          "kind":"method",
          "name":"WinHttpTestINT"
        }
      ],
      "?myWcsCpy@@YAXPAGPBG@Z":[
        {
          "kind":"method",
          "name":"myWcsCpy"
        }
      ],
      "?CallWinHttpDWORD@@YAXPBG@Z":[
        {
          "kind":"method",
          "name":"CallWinHttpDWORD"
        }
      ],
      "?CallWinHttpINT@@YAXPBG@Z":[
        {
          "kind":"method",
          "name":"CallWinHttpINT"
        }
      ]
    },
    "results":[
      {
        "ruleId":"26000",
        "message":"Overflow using expression '(void *)ptr'\nBuffer ptr is a parameter to this function declared on line 6\nBuffer is of length offset(ptr)`6 + 10 bytes [from annotation SAL_writableTo(elementCount(10)) at c:\\somepath\\test127.cpp(6)]\nAccessing 15 bytes starting at byte offset 0\nAnnotation on function memset requires that {parameter 1} is of length >= {parameter 3} bytes\n  where {parameter 1} is (void *)ptr; {parameter 3} is 15\n[Annotation _Out_(byteCount({parameter 3}))]\n\n\nValues of variables:\nPointer ptr is at offset 0 bytes from the start of the buffer\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test127.cpp",
              "region":{
                "startColumn":15,
                "startLine":16
              }
            },
            "fullyQualifiedLogicalName":"VariableWorker",
            "logicalLocationKey":"?VariableWorker@@YAXHPAD@Z",
            "properties":{
              "decorated":"?VariableWorker@@YAXHPAD@Z",
              "funcline":"6"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":6
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":13,
                    "startLine":14
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":15,
                    "startLine":16
                  }
                }
              }
            ]
          }
        ]
      },{
        "ruleId":"26000",
        "message":"Overflow using expression '& myArray'\nBuffer accessed is myArray\nBuffer is of length 15 bytes [size of variable]\nAccessing 20 bytes starting at byte offset 0\nAnnotation on function VariableWorker requires that {parameter 2} is of length >= 20 elements (1 bytes\/element)\n  where {parameter 2} is & myArray\n[Annotation SAL_writableTo(elementCount(20)) at c:\\somepath\\test127.cpp(6)]\n\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test127.cpp",
              "region":{
                "startColumn":19,
                "startLine":31
              }
            },
            "fullyQualifiedLogicalName":"Bad1",
            "logicalLocationKey":"?Bad1@@YAXXZ",
            "properties":{
              "decorated":"?Bad1@@YAXXZ",
              "funcline":"28"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":28
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":10,
                    "startLine":30
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":19,
                    "startLine":31
                  }
                }
              }
            ]
          }
        ]
      },{
        "ruleId":"26000",
        "message":"Overflow using expression '& myArray'\nBuffer accessed is myArray\nBuffer is of length 15 bytes [size of variable]\nAccessing 20 bytes starting at byte offset 0\nAnnotation on function VariableWorker requires that {parameter 2} is of length >= 20 elements (1 bytes\/element)\n  where {parameter 2} is & myArray\n[Annotation SAL_writableTo(elementCount(20)) at c:\\somepath\\test127.cpp(6)]\n\n\nValues of variables:\ncmd = 2\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test127.cpp",
              "region":{
                "startColumn":19,
                "startLine":37
              }
            },
            "fullyQualifiedLogicalName":"Bad2",
            "logicalLocationKey":"?Bad2@@YAXH@Z",
            "properties":{
              "decorated":"?Bad2@@YAXH@Z",
              "funcline":"34"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":34
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":10,
                    "startLine":36
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":19,
                    "startLine":37
                  }
                }
              }
            ]
          }
        ]
      },{
        "ruleId":"26019",
        "message":"Potential overflow using expression 'buff50[size]'\nThis is likely to be due to incorrect or insufficient validation of the buffer access\nBuffer accessed is buff50\nBuffer is of length 50 bytes [size of variable]\nAccessing the byte at byte offset size`47\n\nValues of variables:\nsize = size`47\n\nwhere\nsize`47 <= 99\nsize`47 >= 0\n\nOverrun access occurs when\nsize`47 >= 50\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test127.cpp",
              "region":{
                "startColumn":22,
                "startLine":60
              }
            },
            "fullyQualifiedLogicalName":"RangeWhen1",
            "logicalLocationKey":"?RangeWhen1@@YAXHI@Z",
            "properties":{
              "decorated":"?RangeWhen1@@YAXHI@Z",
              "funcline":"47"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":47
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":10,
                    "startLine":54
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":10,
                    "startLine":55
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":13,
                    "startLine":57
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":23,
                    "startLine":59
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":22,
                    "startLine":60
                  }
                }
              }
            ]
          }
        ]
      },{
        "ruleId":"26017",
        "message":"Potential overflow using expression 'buff[result.RangeWhen2]'\nBuffer access is apparently unbounded by the buffer size.  \n\nIn particular: result.RangeWhen2`80a is not constrained by any constant\n\nBuffer accessed is buff\nBuffer is of length 1 bytes [size of variable]\nAccessing the byte at byte offset result.RangeWhen2`80a\n\nValues of variables:\nresult.RangeWhen2 = result.RangeWhen2`80a\n\nwhere\nresult.RangeWhen2`79a == 0\nresult.RangeWhen2`80a >= 0\n\nOverrun access occurs when\nresult.RangeWhen2`80a >= 1\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test127.cpp",
              "region":{
                "startColumn":25,
                "startLine":80
              }
            },
            "fullyQualifiedLogicalName":"Bad3",
            "logicalLocationKey":"?Bad3@@YAXXZ",
            "properties":{
              "decorated":"?Bad3@@YAXXZ",
              "funcline":"76"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":76
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":10,
                    "startLine":78
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":20,
                    "startLine":79
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":25,
                    "startLine":79
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":20,
                    "startLine":80
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":25,
                    "startLine":80
                  }
                }
              }
            ]
          }
        ]
      },{
        "ruleId":"26018",
        "message":"Potential read overflow of null terminated buffer using expression '* (lpszHdrs ++)'\nThis is likely to be due to incorrect or insufficient validation of the buffer access\nBuffer lpszHdrs is a parameter to this function declared on line 104\nBuffer is of length 2*nullpos(lpszHdrs)`104 + 2 bytes [length of zero terminated string]\nAccessing 2 bytes starting at byte offset 2\n\nValues of variables:\nPointer lpszHdrs is at offset 4 bytes from the start of the buffer\n\nwhere\ncchLength`104 == 4294967295\noffset(lpszHdrs)`104 == 0\n{loop iterations}'120 == 0\nnullpos(lpszHdrs)`104 >= 0\n\nOverrun access occurs when\nnullpos(lpszHdrs)`104 == 0\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test127.cpp",
              "region":{
                "startColumn":16,
                "startLine":121
              }
            },
            "fullyQualifiedLogicalName":"WinHttpTestINT",
            "logicalLocationKey":"?WinHttpTestINT@@YAXPBGH@Z",
            "properties":{
              "decorated":"?WinHttpTestINT@@YAXPBGH@Z",
              "funcline":"104"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":104
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":11,
                    "startLine":111
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":16,
                    "startLine":111
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":9,
                    "startLine":112
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":15,
                    "startLine":112
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":13,
                    "startLine":113
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":18,
                    "startLine":120
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":22,
                    "startLine":120
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":27,
                    "startLine":120
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":16,
                    "startLine":121
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":34,
                    "startLine":120
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":27,
                    "startLine":120
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":16,
                    "startLine":121
                  }
                }
              }
            ]
          }
        ]
      },{
        "ruleId":"26003",
        "message":"Writing to buffer 'dest' of unspecified length.  Please annotate.\n\nIf we assume that the buffer has single element in length, then the checker would report:\nPotential overflow using expression 'dest'\nBuffer dest is a parameter to this function declared on line 128\nBuffer is of length 2 bytes [assumed because the buffer is unannotated]\nAccessing 2*nullpos(src)`128 + 2 bytes starting at byte offset 0\nAnnotation on function wcscpy requires that {parameter 1} is of length >= _String_length_({parameter 2}) + 1 elements (2 bytes\/element)\n  where {parameter 1} is dest; {parameter 2} is src\n[Annotation _Out_(elementCount(_String_length_({parameter 2}) + 1))]\n\n\nValues of variables:\nPointer dest is at offset 0 bytes from the start of the buffer\nPointer src is at offset 0 bytes from the start of src\n\nwhere\noffset(dest)`128 == 0\nnullpos(src)`128 >= 0\n\nOverrun access occurs when\n2*nullpos(src)`128 >= 1\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test127.cpp",
              "region":{
                "startColumn":11,
                "startLine":130
              }
            },
            "fullyQualifiedLogicalName":"myWcsCpy",
            "logicalLocationKey":"?myWcsCpy@@YAXPAGPBG@Z",
            "properties":{
              "decorated":"?myWcsCpy@@YAXPAGPBG@Z",
              "funcline":"128"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":128
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":11,
                    "startLine":130
                  }
                }
              }
            ]
          }
        ]
      },{
        "ruleId":"26000",
        "message":"Read overflow of null terminated buffer using expression '(LPCWSTR)(& localString)'\nBuffer accessed is localString\nBuffer is of length 100 elements (2 bytes\/element) [size of variable] OR\n  nullpos(localString)`138 + 1 elements (2 bytes\/element) [length of zero terminated string]\nAccessing 4294967196 elements (2 bytes\/element) starting at element offset 0\nAnnotation on function WinHttpTestDWORD requires that {parameter 1} is of length >= {parameter 2} elements (2 bytes\/element)\n  where {parameter 1} is (LPCWSTR)(& localString); {parameter 2} is 4294967196\n[Annotation SAL_readableTo(elementCount({parameter 2})) at c:\\somepath\\test127.cpp(83)]\n\n\nwhere\nnullpos(localString)`138 <= 100\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test127.cpp",
              "region":{
                "startColumn":21,
                "startLine":144
              }
            },
            "fullyQualifiedLogicalName":"CallWinHttpDWORD",
            "logicalLocationKey":"?CallWinHttpDWORD@@YAXPBG@Z",
            "properties":{
              "decorated":"?CallWinHttpDWORD@@YAXPBG@Z",
              "funcline":"133"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":133
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":11,
                    "startLine":137
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":13,
                    "startLine":138
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":21,
                    "startLine":140
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":21,
                    "startLine":142
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":21,
                    "startLine":144
                  }
                }
              }
            ]
          }
        ]
      },{
        "ruleId":"26014",
        "message":"Potential read overflow of null terminated buffer using expression '(WCHAR *)(& localString)'\nThis is likely to be due to incorrect or insufficient validation of the buffer access\nBuffer accessed is localString\nBuffer is of length 100 elements (2 bytes\/element) [size of variable] OR\n  nullpos(localString)`152 + 1 elements (2 bytes\/element) [length of zero terminated string]\nAccessing 101 elements (2 bytes\/element) starting at element offset 0\nAnnotation on function WinHttpTestINT requires that {parameter 1} is of length >= {parameter 2} elements (2 bytes\/element)\n  where {parameter 1} is (WCHAR *)(& localString); {parameter 2} is 101\n[Annotation SAL_readableTo(elementCount({parameter 2})) at c:\\somepath\\test127.cpp(104)]\n\n\nwhere\nnullpos(localString)`152 <= 100\n\nOverrun access occurs when\nnullpos(localString)`152 <= 99\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test127.cpp",
              "region":{
                "startColumn":19,
                "startLine":158
              }
            },
            "fullyQualifiedLogicalName":"CallWinHttpINT",
            "logicalLocationKey":"?CallWinHttpINT@@YAXPBG@Z",
            "properties":{
              "decorated":"?CallWinHttpINT@@YAXPBG@Z",
              "funcline":"147"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":6,
                    "startLine":147
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":11,
                    "startLine":151
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":13,
                    "startLine":152
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":19,
                    "startLine":154
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":19,
                    "startLine":156
                  }
                }
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test127.cpp",
                  "region":{
                    "startColumn":19,
                    "startLine":158
                  }
                }
              }
            ]
          }
        ]
      }
    ]
  }
]
}