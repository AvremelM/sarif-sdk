{
"version":"1.0.0",
"$schema":"http://json.schemastore.org/sarif-1.0.0",
"runs":[
  {
    "tool":{
      "name":"PREfast",
      "fullName":"PREfast Code Analysis"
    },
    "results":[
      {
        "ruleId":"26003",
        "message":"Writing to buffer 'EmptyBuffer.BufferDesc::pBuffers' of unspecified length.  Please annotate.\n\nIf we assume that the buffer has single element in length, then the checker would report:\nPotential overflow using expression '(pBD->pBuffers)[i]'\nAccessing unannotated buffer EmptyBuffer.BufferDesc::pBuffers\nBuffer is of length 1 elements (4 bytes\/element) [assumed because the buffer is unannotated]\nAccessing the element (4 bytes\/element) at element offset 1\n\nValues of variables:\nPointer EmptyBuffer.BufferDesc::pBuffers is at offset 0 bytes from the start of the buffer\ni = 1\npBD = &EmptyBuffer\n\nwhere\n{loop iterations}'61 == 0\nEmptyBuffer.BufferDesc::cBuffers`61 >= 2\n\nThere are other instances of this error:\nWriting to buffer 'EmptyBuffer.BufferDesc::pBuffers' of unspecified length.  Please annotate. at line 63\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test122.cpp",
              "region":{
                "startColumn":26,
                "startLine":62
              }
            },
            "fullyQualifiedLogicalName":"safe1",
            "decoratedName":"?safe1@@YAXPAUBufferDesc@@@Z",
            "properties":{
              "funcline":"50"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":11,
                    "startLine":50
                  }
                },
                "step":1
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":19,
                    "startLine":52
                  }
                },
                "step":2
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":16,
                    "startLine":53
                  }
                },
                "step":3
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":9,
                    "startLine":55
                  }
                },
                "step":4
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":13,
                    "startLine":57
                  }
                },
                "step":5
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":15,
                    "startLine":58
                  }
                },
                "step":6
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":12,
                    "startLine":61
                  }
                },
                "step":7
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":19,
                    "startLine":61
                  }
                },
                "step":8
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":26,
                    "startLine":62
                  }
                },
                "step":9
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":37,
                    "startLine":61
                  }
                },
                "step":10
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":19,
                    "startLine":61
                  }
                },
                "step":11
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":26,
                    "startLine":62
                  }
                },
                "step":12
              }
            ]
          }
        ]
      },{
        "ruleId":"26014",
        "message":"Potential overflow using expression '(pBD->pBuffers)[i]'\nThis is likely to be due to incorrect or insufficient validation of the buffer access\nBuffer (pBD->BufferDesc::pBuffers) created during call to Foo on line 71\nBuffer lengths are from an assumed __inout annotation on the parameter\nBuffer is of length 4*(pBD->BufferDesc::cBuffers)`71 bytes [from field annotation SAL_writableTo(elementCount({parameter 1}->cBuffers)) at c:\\somepath\\test122.cpp(46) on function Foo called at line 71]\nAccessing 4 bytes starting at byte offset 4\n\nValues of variables:\nPointer (pBD->BufferDesc::pBuffers) is at offset 0 bytes from the start of the buffer\nPointer pBD is at offset 0 bytes from the start of pBD\ni = 1\n\nwhere\noffset((pBD->BufferDesc::pBuffers))`71a == 0\n{loop iterations}'73 == 0\n(pBD->BufferDesc::cBuffers)`71 >= 1\n\nOverrun access occurs when\n(pBD->BufferDesc::cBuffers)`71 == 1\n",
        "locations":[
          {
            "resultFile":{
              "uri":"file:///c:/somepath/test122.cpp",
              "region":{
                "startColumn":26,
                "startLine":74
              }
            },
            "fullyQualifiedLogicalName":"unsafe",
            "decoratedName":"?unsafe@@YAXPAUBufferDesc@@@Z",
            "properties":{
              "funcline":"67"
            }
          }
        ],
        "codeFlows":[
          {
            "locations":[
              {
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":12,
                    "startLine":67
                  }
                },
                "step":1
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":19,
                    "startLine":69
                  }
                },
                "step":2
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":8,
                    "startLine":71
                  }
                },
                "step":3
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":12,
                    "startLine":73
                  }
                },
                "step":4
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":19,
                    "startLine":73
                  }
                },
                "step":5
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":26,
                    "startLine":74
                  }
                },
                "step":6
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":38,
                    "startLine":73
                  }
                },
                "step":7
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":19,
                    "startLine":73
                  }
                },
                "step":8
              },{
                "physicalLocation":{
                  "uri":"file:///c:/somepath/test122.cpp",
                  "region":{
                    "startColumn":26,
                    "startLine":74
                  }
                },
                "step":9
              }
            ]
          }
        ]
      }
    ]
  }
]
}